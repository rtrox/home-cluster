{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 463,
  "lineage": "010f88ba-7585-17bd-e205-abfa42200d0b",
  "outputs": {
    "rke2-api-fqdn": {
      "value": "api.cho.rtrox.com",
      "type": "string"
    },
    "rke2-api-vip": {
      "value": "172.18.2.252",
      "type": "string"
    },
    "rke2-bootstrap-config": {
      "value": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\n\ncluster-cidr:\n  - 10.42.0.0/16\n  - fd01::/52\nservice-cidr:\n  - 10.43.0.0/16\n  - fd98::/112\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
      "type": "string"
    },
    "rke2-joiner-config": {
      "value": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\nserver: 'https://172.18.2.252:9345'\ncluster-cidr:\n  - 10.42.0.0/16\n  - fd01::/52\nservice-cidr:\n  - 10.43.0.0/16\n  - fd98::/112\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "ct_config",
      "name": "install",
      "provider": "provider[\"registry.terraform.io/poseidon/ct\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nsystemd:\n  units:\n    - name: installer.service\n      enabled: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\nstorage:\n  files:\n    - path: /opt/installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          # Clear all partition tables\n          sudo find /dev/ -regex '/dev/sd[a-z]' -exec dd if=/dev/zero of={} bs=1M count=1 \\;\n          curl --retry 10 \"http://matchbox.sid.rtrox.com/ignition?os=installed\u0026node=node01\" -o ignition.json\n          flatcar-install -d /dev/disk/by-id/ata-PNY_CS900_250GB_SSD_PNY2238220921011732D\\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\n    - path: /etc/hostname\n      contents:\n        inline: node01-installer\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "1994643713",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhCl1VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYe5RRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9iEzffQgRESOJygLGO2ZD/dSdorNXtOQJ2fzyJGG3FAn3S5cjR4p1S4kVt6j/RvIYn05RTkCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+Wmma9nRdFU/4rnp2a9XjSr5aaqpndVVcyqsijL/9Nqsc0AhPu10Vs8KttBQmaPWTolxs6wh4iaiLPvAAAA//8WZdHhZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node01-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nsystemd:\n  units:\n    - name: installer.service\n      enabled: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\nstorage:\n  files:\n    - path: /opt/installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          # Clear all partition tables\n          sudo find /dev/ -regex '/dev/sd[a-z]' -exec dd if=/dev/zero of={} bs=1M count=1 \\;\n          curl --retry 10 \"http://matchbox.sid.rtrox.com/ignition?os=installed\u0026node=node02\" -o ignition.json\n          flatcar-install -d /dev/disk/by-id/ata-PNY_CS900_250GB_SSD_PNY22382209210117335\\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\n    - path: /etc/hostname\n      contents:\n        inline: node02-installer\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "3940913168",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIvKeLaFQC11VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYeFRRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9j4zffQgRESOJygLGO2ZD3dSdorNXtOQJ2fzyJGG3FAn3S5cjR4o1S4kVt6j/RvIYn05RTUCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+WmWaznRdFUs+L5sVmvn5rVclNV0/9VVcyrsijLf9PpbJsBCPdro7d4VLaDhMwes3RKjJ1hDxE1EWffAQAA//8Cx+juZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node02-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nsystemd:\n  units:\n    - name: installer.service\n      enabled: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\nstorage:\n  files:\n    - path: /opt/installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          # Clear all partition tables\n          sudo find /dev/ -regex '/dev/sd[a-z]' -exec dd if=/dev/zero of={} bs=1M count=1 \\;\n          curl --retry 10 \"http://matchbox.sid.rtrox.com/ignition?os=installed\u0026node=node03\" -o ignition.json\n          flatcar-install -d /dev/disk/by-id/ata-PNY_CS900_250GB_SSD_PNY2238220921011732E\\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\n    - path: /etc/hostname\n      contents:\n        inline: node03-installer\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "4277920133",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhtnRVEVxJLWH+3Oi0k7kycyPR0u9eFLvp5sLl/DjnN/4jtQtSq7QDgUM2hrlHFUF5D3sV2bGjAKy0x5Sl3hK0LliQFg8SRMQtDjC5fMm+KnF6m5xr0IC14Nr6kpwwElBbf36BTnX5Aob6wHUJm7vM9NGDEBE5HqEsYLRj3t9K2Sk2O01DnpzNI0cackOddNtwMbqnVLuQWHmP9m8gi/X5FNMRCIIfKn9PFLLWKzYqiisP4qpvXfqQ+iiclYqVWC7WzXw1K4qm+lc8PzSr1WOzXKyranpTVcWsKouy/D+tnjYZgHC/NnqLB2U7SMjsMUvHxNgZ9hBRE3H2HQAA//+DYUgbZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node03-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "ct_config",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/poseidon/ct\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nstorage:\n  files:\n    - path: \"/etc/hostname\"\n      mode: 0644\n      overwrite: true\n      contents:\n        source: \"data:,node01.cho.rtrox.com\"\n    - path: /opt/rke2-install.sh\n      mode: 0777\n      contents:\n        source: https://get.rke2.io\n    - path: /etc/rancher/rke2/config.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCgpjbHVzdGVyLWNpZHI6CiAgLSAxMC40Mi4wLjAvMTYKICAtIGZkMDE6Oi81MgpzZXJ2aWNlLWNpZHI6CiAgLSAxMC40My4wLjAvMTYKICAtIGZkOTg6Oi8xMTIKdGxzLXNhbjoKICAtIGFwaS5jaG8ucnRyb3guY29tCiAgLSAxNzIuMTguMi4yNTIKIyBEaXNhYmxlIEt1YmVQcm94eSBpbiBmYXZvciBvZiBDaWxpdW0KZGlzYWJsZS1rdWJlLXByb3h5OiB0cnVlCiMgRGlzYWJsZSBEZWZhdWx0IENOSSAmIE5ldHdvcmsgUG9saWN5IEVuZm9yY2VyCmNuaTogbm9uZQpkaXNhYmxlOgogICMgLSBzZXJ2aWNlbGIKICAjIC0gdHJhZWZpawogICMgLSBsb2NhbC1zdG9yYWdlCiAgLSBya2UyLWluZ3Jlc3MtbmdpbngKCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\"\n    - path: /var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,\"\n    - path: /var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\"\n    - path: /opt/rke2-installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          /opt/rke2-install.sh\n          systemctl enable rke2-server.service\n          systemctl start rke2-server.service\n    - path: /opt/kubectl-installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl -L -o /opt/bin/kubectl \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n          chmod +x /opt/bin/kubectl\n          mkdir -p /home/core/.kube\n          echo ln -s /etc/rancher/rke2/rke2.yaml /home/core/.kube/config\nsystemd:\n  units:\n    - name: wait-for-v4.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Wait until we have a v4 address\n        DefaultDependencies=no\n        Conflicts=shutdown.target\n        Requires=systemd-networkd.service\n        After=systemd-networkd.service\n        Before=network-online.target shutdown.target\n        [Service]\n        Type=oneshot\n        ExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\n        RemainAfterExit=yes\n        [Install]\n        WantedBy=network-online.target\n    - name: install-kubectl.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install kubectl binary\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/kubectl-installer\n        ConditionPathExists=!/opt/bin/kubectl\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/sh -c \"/opt/kubectl-installer\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: rke2-install.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install rke2\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/rke2-install.sh\n        ConditionPathExists=!/opt/bin/rke2\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/sh -c \"/opt/rke2-installer\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: remove-runonce-manifests.service\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        ConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\n    - name: remove-runonce-manifests.timer\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        [Timer]\n        OnBootSec=180min\n        [Install]\n        WantedBy=timers.target\n    - name: locksmithd.service\n      mask: true\n    - name: update-engine.service\n      enabled: true\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "2105619980",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node01.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.rke2.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/rke2/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCgpjbHVzdGVyLWNpZHI6CiAgLSAxMC40Mi4wLjAvMTYKICAtIGZkMDE6Oi81MgpzZXJ2aWNlLWNpZHI6CiAgLSAxMC40My4wLjAvMTYKICAtIGZkOTg6Oi8xMTIKdGxzLXNhbjoKICAtIGFwaS5jaG8ucnRyb3guY29tCiAgLSAxNzIuMTguMi4yNTIKIyBEaXNhYmxlIEt1YmVQcm94eSBpbiBmYXZvciBvZiBDaWxpdW0KZGlzYWJsZS1rdWJlLXByb3h5OiB0cnVlCiMgRGlzYWJsZSBEZWZhdWx0IENOSSAmIE5ldHdvcmsgUG9saWN5IEVuZm9yY2VyCmNuaTogbm9uZQpkaXNhYmxlOgogICMgLSBzZXJ2aWNlbGIKICAjIC0gdHJhZWZpawogICMgLSBsb2NhbC1zdG9yYWdlCiAgLSBya2UyLWluZ3Jlc3MtbmdpbngKCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-installer\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,%23!%2Fbin%2Fbash%20-ex%0A%2Fopt%2Frke2-install.sh%0Asystemctl%20enable%20rke2-server.service%0Asystemctl%20start%20rke2-server.service%0A\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/opt/kubectl-installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/3SOQUoFMQxA9z1F/LpQZBoQEfEMXqKTRluaNkObgXp7+QO6Gf4mm5eXl/s7XHPDNYwEC09HexdYPmFRQN3sgGVfmUzgksy28YEYxZf34bNiZ+EwGB8e/8UBt9eGhVXY27Sn47Lktk8MNb69/lUujlLVCM/z9ICrJeYOywaYtDKSdkZ/hY4pKUi71pGNsIdGiTv2wi/H8D+hyslD0vaVv91vAAAA//+r+CiiBgEAAA==\",\"verification\":{}},\"mode\":320}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Wait until we have a v4 address\\nDefaultDependencies=no\\nConflicts=shutdown.target\\nRequires=systemd-networkd.service\\nAfter=systemd-networkd.service\\nBefore=network-online.target shutdown.target\\n[Service]\\nType=oneshot\\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\\nRemainAfterExit=yes\\n[Install]\\nWantedBy=network-online.target\\n\",\"enabled\":true,\"name\":\"wait-for-v4.service\"},{\"contents\":\"[Unit]\\nDescription=Install kubectl binary\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/kubectl-installer\\nConditionPathExists=!/opt/bin/kubectl\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/kubectl-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"install-kubectl.service\"},{\"contents\":\"[Unit]\\nDescription=Install rke2\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/rke2-install.sh\\nConditionPathExists=!/opt/bin/rke2\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/rke2-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"rke2-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=180min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"},{\"mask\":true,\"name\":\"locksmithd.service\"},{\"enabled\":true,\"name\":\"update-engine.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nstorage:\n  files:\n    - path: \"/etc/hostname\"\n      mode: 0644\n      overwrite: true\n      contents:\n        source: \"data:,node02.cho.rtrox.com\"\n    - path: /opt/rke2-install.sh\n      mode: 0777\n      contents:\n        source: https://get.rke2.io\n    - path: /etc/rancher/rke2/config.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCnNlcnZlcjogJ2h0dHBzOi8vMTcyLjE4LjIuMjUyOjkzNDUnCmNsdXN0ZXItY2lkcjoKICAtIDEwLjQyLjAuMC8xNgogIC0gZmQwMTo6LzUyCnNlcnZpY2UtY2lkcjoKICAtIDEwLjQzLjAuMC8xNgogIC0gZmQ5ODo6LzExMgp0bHMtc2FuOgogIC0gYXBpLmNoby5ydHJveC5jb20KICAtIDE3Mi4xOC4yLjI1MgojIERpc2FibGUgS3ViZVByb3h5IGluIGZhdm9yIG9mIENpbGl1bQpkaXNhYmxlLWt1YmUtcHJveHk6IHRydWUKIyBEaXNhYmxlIERlZmF1bHQgQ05JICYgTmV0d29yayBQb2xpY3kgRW5mb3JjZXIKY25pOiBub25lCmRpc2FibGU6CiAgIyAtIHNlcnZpY2VsYgogICMgLSB0cmFlZmlrCiAgIyAtIGxvY2FsLXN0b3JhZ2UKICAtIHJrZTItaW5ncmVzcy1uZ2lueAoKIyBQcmVwYXJlIGszcyBmb3IgcHJvbWV0aGV1cyBtZXRyaWNzCmt1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1wcm94eS1hcmc6CiAgLSAibWV0cmljcy1iaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1zY2hlZHVsZXItYXJnOgogIC0gImJpbmQtYWRkcmVzcz0wLjAuMC4wIgojIENvbnRyb2xsZXIgTWFuYWdlciBleHBvc2VzIGV0Y2Qgc3FsbGl0ZSBtZXRyaWNzCmV0Y2QtZXhwb3NlLW1ldHJpY3M6IHRydWUK\"\n    - path: /var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,\"\n    - path: /var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\"\n    - path: /opt/rke2-installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          /opt/rke2-install.sh\n          systemctl enable rke2-server.service\n          systemctl start rke2-server.service\n    - path: /opt/kubectl-installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl -L -o /opt/bin/kubectl \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n          chmod +x /opt/bin/kubectl\n          mkdir -p /home/core/.kube\n          echo ln -s /etc/rancher/rke2/rke2.yaml /home/core/.kube/config\nsystemd:\n  units:\n    - name: wait-for-v4.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Wait until we have a v4 address\n        DefaultDependencies=no\n        Conflicts=shutdown.target\n        Requires=systemd-networkd.service\n        After=systemd-networkd.service\n        Before=network-online.target shutdown.target\n        [Service]\n        Type=oneshot\n        ExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\n        RemainAfterExit=yes\n        [Install]\n        WantedBy=network-online.target\n    - name: install-kubectl.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install kubectl binary\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/kubectl-installer\n        ConditionPathExists=!/opt/bin/kubectl\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/sh -c \"/opt/kubectl-installer\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: rke2-install.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install rke2\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/rke2-install.sh\n        ConditionPathExists=!/opt/bin/rke2\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/sh -c \"/opt/rke2-installer\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: remove-runonce-manifests.service\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        ConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\n    - name: remove-runonce-manifests.timer\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        [Timer]\n        OnBootSec=180min\n        [Install]\n        WantedBy=timers.target\n    - name: locksmithd.service\n      mask: true\n    - name: update-engine.service\n      enabled: true\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "1265311221",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node02.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.rke2.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/rke2/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCnNlcnZlcjogJ2h0dHBzOi8vMTcyLjE4LjIuMjUyOjkzNDUnCmNsdXN0ZXItY2lkcjoKICAtIDEwLjQyLjAuMC8xNgogIC0gZmQwMTo6LzUyCnNlcnZpY2UtY2lkcjoKICAtIDEwLjQzLjAuMC8xNgogIC0gZmQ5ODo6LzExMgp0bHMtc2FuOgogIC0gYXBpLmNoby5ydHJveC5jb20KICAtIDE3Mi4xOC4yLjI1MgojIERpc2FibGUgS3ViZVByb3h5IGluIGZhdm9yIG9mIENpbGl1bQpkaXNhYmxlLWt1YmUtcHJveHk6IHRydWUKIyBEaXNhYmxlIERlZmF1bHQgQ05JICYgTmV0d29yayBQb2xpY3kgRW5mb3JjZXIKY25pOiBub25lCmRpc2FibGU6CiAgIyAtIHNlcnZpY2VsYgogICMgLSB0cmFlZmlrCiAgIyAtIGxvY2FsLXN0b3JhZ2UKICAtIHJrZTItaW5ncmVzcy1uZ2lueAoKIyBQcmVwYXJlIGszcyBmb3IgcHJvbWV0aGV1cyBtZXRyaWNzCmt1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1wcm94eS1hcmc6CiAgLSAibWV0cmljcy1iaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1zY2hlZHVsZXItYXJnOgogIC0gImJpbmQtYWRkcmVzcz0wLjAuMC4wIgojIENvbnRyb2xsZXIgTWFuYWdlciBleHBvc2VzIGV0Y2Qgc3FsbGl0ZSBtZXRyaWNzCmV0Y2QtZXhwb3NlLW1ldHJpY3M6IHRydWUK\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-installer\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,%23!%2Fbin%2Fbash%20-ex%0A%2Fopt%2Frke2-install.sh%0Asystemctl%20enable%20rke2-server.service%0Asystemctl%20start%20rke2-server.service%0A\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/opt/kubectl-installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/3SOQUoFMQxA9z1F/LpQZBoQEfEMXqKTRluaNkObgXp7+QO6Gf4mm5eXl/s7XHPDNYwEC09HexdYPmFRQN3sgGVfmUzgksy28YEYxZf34bNiZ+EwGB8e/8UBt9eGhVXY27Sn47Lktk8MNb69/lUujlLVCM/z9ICrJeYOywaYtDKSdkZ/hY4pKUi71pGNsIdGiTv2wi/H8D+hyslD0vaVv91vAAAA//+r+CiiBgEAAA==\",\"verification\":{}},\"mode\":320}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Wait until we have a v4 address\\nDefaultDependencies=no\\nConflicts=shutdown.target\\nRequires=systemd-networkd.service\\nAfter=systemd-networkd.service\\nBefore=network-online.target shutdown.target\\n[Service]\\nType=oneshot\\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\\nRemainAfterExit=yes\\n[Install]\\nWantedBy=network-online.target\\n\",\"enabled\":true,\"name\":\"wait-for-v4.service\"},{\"contents\":\"[Unit]\\nDescription=Install kubectl binary\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/kubectl-installer\\nConditionPathExists=!/opt/bin/kubectl\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/kubectl-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"install-kubectl.service\"},{\"contents\":\"[Unit]\\nDescription=Install rke2\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/rke2-install.sh\\nConditionPathExists=!/opt/bin/rke2\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/rke2-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"rke2-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=180min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"},{\"mask\":true,\"name\":\"locksmithd.service\"},{\"enabled\":true,\"name\":\"update-engine.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nstorage:\n  files:\n    - path: \"/etc/hostname\"\n      mode: 0644\n      overwrite: true\n      contents:\n        source: \"data:,node03.cho.rtrox.com\"\n    - path: /opt/rke2-install.sh\n      mode: 0777\n      contents:\n        source: https://get.rke2.io\n    - path: /etc/rancher/rke2/config.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCnNlcnZlcjogJ2h0dHBzOi8vMTcyLjE4LjIuMjUyOjkzNDUnCmNsdXN0ZXItY2lkcjoKICAtIDEwLjQyLjAuMC8xNgogIC0gZmQwMTo6LzUyCnNlcnZpY2UtY2lkcjoKICAtIDEwLjQzLjAuMC8xNgogIC0gZmQ5ODo6LzExMgp0bHMtc2FuOgogIC0gYXBpLmNoby5ydHJveC5jb20KICAtIDE3Mi4xOC4yLjI1MgojIERpc2FibGUgS3ViZVByb3h5IGluIGZhdm9yIG9mIENpbGl1bQpkaXNhYmxlLWt1YmUtcHJveHk6IHRydWUKIyBEaXNhYmxlIERlZmF1bHQgQ05JICYgTmV0d29yayBQb2xpY3kgRW5mb3JjZXIKY25pOiBub25lCmRpc2FibGU6CiAgIyAtIHNlcnZpY2VsYgogICMgLSB0cmFlZmlrCiAgIyAtIGxvY2FsLXN0b3JhZ2UKICAtIHJrZTItaW5ncmVzcy1uZ2lueAoKIyBQcmVwYXJlIGszcyBmb3IgcHJvbWV0aGV1cyBtZXRyaWNzCmt1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1wcm94eS1hcmc6CiAgLSAibWV0cmljcy1iaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1zY2hlZHVsZXItYXJnOgogIC0gImJpbmQtYWRkcmVzcz0wLjAuMC4wIgojIENvbnRyb2xsZXIgTWFuYWdlciBleHBvc2VzIGV0Y2Qgc3FsbGl0ZSBtZXRyaWNzCmV0Y2QtZXhwb3NlLW1ldHJpY3M6IHRydWUK\"\n    - path: /var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,\"\n    - path: /var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\"\n    - path: /opt/rke2-installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          /opt/rke2-install.sh\n          systemctl enable rke2-server.service\n          systemctl start rke2-server.service\n    - path: /opt/kubectl-installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          curl -L -o /opt/bin/kubectl \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\n          chmod +x /opt/bin/kubectl\n          mkdir -p /home/core/.kube\n          echo ln -s /etc/rancher/rke2/rke2.yaml /home/core/.kube/config\nsystemd:\n  units:\n    - name: wait-for-v4.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Wait until we have a v4 address\n        DefaultDependencies=no\n        Conflicts=shutdown.target\n        Requires=systemd-networkd.service\n        After=systemd-networkd.service\n        Before=network-online.target shutdown.target\n        [Service]\n        Type=oneshot\n        ExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\n        RemainAfterExit=yes\n        [Install]\n        WantedBy=network-online.target\n    - name: install-kubectl.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install kubectl binary\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/kubectl-installer\n        ConditionPathExists=!/opt/bin/kubectl\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/sh -c \"/opt/kubectl-installer\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: rke2-install.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install rke2\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/rke2-install.sh\n        ConditionPathExists=!/opt/bin/rke2\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/sh -c \"/opt/rke2-installer\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: remove-runonce-manifests.service\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        ConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\n    - name: remove-runonce-manifests.timer\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        [Timer]\n        OnBootSec=180min\n        [Install]\n        WantedBy=timers.target\n    - name: locksmithd.service\n      mask: true\n    - name: update-engine.service\n      enabled: true\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "713339230",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node03.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.rke2.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/rke2/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCnNlcnZlcjogJ2h0dHBzOi8vMTcyLjE4LjIuMjUyOjkzNDUnCmNsdXN0ZXItY2lkcjoKICAtIDEwLjQyLjAuMC8xNgogIC0gZmQwMTo6LzUyCnNlcnZpY2UtY2lkcjoKICAtIDEwLjQzLjAuMC8xNgogIC0gZmQ5ODo6LzExMgp0bHMtc2FuOgogIC0gYXBpLmNoby5ydHJveC5jb20KICAtIDE3Mi4xOC4yLjI1MgojIERpc2FibGUgS3ViZVByb3h5IGluIGZhdm9yIG9mIENpbGl1bQpkaXNhYmxlLWt1YmUtcHJveHk6IHRydWUKIyBEaXNhYmxlIERlZmF1bHQgQ05JICYgTmV0d29yayBQb2xpY3kgRW5mb3JjZXIKY25pOiBub25lCmRpc2FibGU6CiAgIyAtIHNlcnZpY2VsYgogICMgLSB0cmFlZmlrCiAgIyAtIGxvY2FsLXN0b3JhZ2UKICAtIHJrZTItaW5ncmVzcy1uZ2lueAoKIyBQcmVwYXJlIGszcyBmb3IgcHJvbWV0aGV1cyBtZXRyaWNzCmt1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1wcm94eS1hcmc6CiAgLSAibWV0cmljcy1iaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1zY2hlZHVsZXItYXJnOgogIC0gImJpbmQtYWRkcmVzcz0wLjAuMC4wIgojIENvbnRyb2xsZXIgTWFuYWdlciBleHBvc2VzIGV0Y2Qgc3FsbGl0ZSBtZXRyaWNzCmV0Y2QtZXhwb3NlLW1ldHJpY3M6IHRydWUK\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-installer\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,%23!%2Fbin%2Fbash%20-ex%0A%2Fopt%2Frke2-install.sh%0Asystemctl%20enable%20rke2-server.service%0Asystemctl%20start%20rke2-server.service%0A\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/opt/kubectl-installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/3SOQUoFMQxA9z1F/LpQZBoQEfEMXqKTRluaNkObgXp7+QO6Gf4mm5eXl/s7XHPDNYwEC09HexdYPmFRQN3sgGVfmUzgksy28YEYxZf34bNiZ+EwGB8e/8UBt9eGhVXY27Sn47Lktk8MNb69/lUujlLVCM/z9ICrJeYOywaYtDKSdkZ/hY4pKUi71pGNsIdGiTv2wi/H8D+hyslD0vaVv91vAAAA//+r+CiiBgEAAA==\",\"verification\":{}},\"mode\":320}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Wait until we have a v4 address\\nDefaultDependencies=no\\nConflicts=shutdown.target\\nRequires=systemd-networkd.service\\nAfter=systemd-networkd.service\\nBefore=network-online.target shutdown.target\\n[Service]\\nType=oneshot\\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\\nRemainAfterExit=yes\\n[Install]\\nWantedBy=network-online.target\\n\",\"enabled\":true,\"name\":\"wait-for-v4.service\"},{\"contents\":\"[Unit]\\nDescription=Install kubectl binary\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/kubectl-installer\\nConditionPathExists=!/opt/bin/kubectl\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/kubectl-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"install-kubectl.service\"},{\"contents\":\"[Unit]\\nDescription=Install rke2\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/rke2-install.sh\\nConditionPathExists=!/opt/bin/rke2\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/rke2-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"rke2-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=180min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"},{\"mask\":true,\"name\":\"locksmithd.service\"},{\"enabled\":true,\"name\":\"update-engine.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "template_file",
      "name": "cilium-install",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "fc1b4ddf9be7cde2581668193e157dd2eb244e93424621aaa565336252356d1d",
            "rendered": "---\n# Source: cilium/templates/cilium-agent/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cilium-config\n  namespace: kube-system\ndata:\n\n  # Identity allocation mode selects how identities are shared between cilium\n  # nodes by setting how they are stored. The options are \"crd\" or \"kvstore\".\n  # - \"crd\" stores identities in kubernetes as CRDs (custom resource definition).\n  #   These can be queried with:\n  #     kubectl get ciliumid\n  # - \"kvstore\" stores identities in an etcd kvstore, that is\n  #   configured below. Cilium versions before 1.6 supported only the kvstore\n  #   backend. Upgrades from these older cilium versions should continue using\n  #   the kvstore by commenting out the identity-allocation-mode below, or\n  #   setting it to \"kvstore\".\n  identity-allocation-mode: crd\n  identity-heartbeat-timeout: \"30m0s\"\n  identity-gc-interval: \"15m0s\"\n  cilium-endpoint-gc-interval: \"5m0s\"\n  nodes-gc-interval: \"5m0s\"\n  skip-cnp-status-startup-clean: \"false\"\n  # Disable the usage of CiliumEndpoint CRD\n  disable-endpoint-crd: \"false\"\n\n  # If you want to run cilium in debug mode change this value to true\n  debug: \"false\"\n  # The agent can be put into the following three policy enforcement modes\n  # default, always and never.\n  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes\n  enable-policy: \"default\"\n\n  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4\n  # address.\n  enable-ipv4: \"true\"\n\n  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6\n  # address.\n  enable-ipv6: \"true\"\n  # Users who wish to specify their own custom CNI configuration file must set\n  # custom-cni-conf to \"true\", otherwise Cilium may overwrite the configuration.\n  custom-cni-conf: \"false\"\n  enable-bpf-clock-probe: \"true\"\n  # If you want cilium monitor to aggregate tracing for packets, set this level\n  # to \"low\", \"medium\", or \"maximum\". The higher the level, the less packets\n  # that will be seen in monitor output.\n  monitor-aggregation: medium\n\n  # The monitor aggregation interval governs the typical time between monitor\n  # notification events for each allowed connection.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-interval: \"5s\"\n\n  # The monitor aggregation flags determine which TCP flags which, upon the\n  # first observation, cause monitor notifications to be generated.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-flags: all\n  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic\n  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.\n  bpf-map-dynamic-size-ratio: \"0.0025\"\n  # bpf-policy-map-max specifies the maximum number of entries in endpoint\n  # policy map (per endpoint)\n  bpf-policy-map-max: \"16384\"\n  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,\n  # backend and affinity maps.\n  bpf-lb-map-max: \"65536\"\n  bpf-lb-external-clusterip: \"false\"\n\n  # Pre-allocation of map entries allows per-packet latency to be reduced, at\n  # the expense of up-front memory allocation for the entries in the maps. The\n  # default value below will minimize memory usage in the default installation;\n  # users who are sensitive to latency may consider setting this to \"true\".\n  #\n  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore\n  # this option and behave as though it is set to \"true\".\n  #\n  # If this value is modified, then during the next Cilium startup the restore\n  # of existing endpoints and tracking of ongoing connections may be disrupted.\n  # As a result, reply packets may be dropped and the load-balancing decisions\n  # for established connections may change.\n  #\n  # If this option is set to \"false\" during an upgrade from 1.3 or earlier to\n  # 1.4 or later, then it may cause one-time disruptions during the upgrade.\n  preallocate-bpf-maps: \"false\"\n\n  # Regular expression matching compatible Istio sidecar istio-proxy\n  # container image names\n  sidecar-istio-proxy-image: \"cilium/istio_proxy\"\n\n  # Name of the cluster. Only relevant when building a mesh of clusters.\n  cluster-name: chongus\n  # Unique ID of the cluster. Must be unique across all conneted clusters and\n  # in the range of 1 and 255. Only relevant when building a mesh of clusters.\n  cluster-id: \"1\"\n\n  # Encapsulation mode for communication between nodes\n  # Possible values:\n  #   - disabled\n  #   - vxlan (default)\n  #   - geneve\n  tunnel: \"disabled\"\n\n\n  # Enables L7 proxy for L7 policy enforcement and visibility\n  enable-l7-proxy: \"true\"\n\n  enable-ipv4-masquerade: \"true\"\n  enable-ipv6-big-tcp: \"false\"\n  enable-ipv6-masquerade: \"true\"\n\n  enable-xt-socket-fallback: \"true\"\n  install-iptables-rules: \"true\"\n  install-no-conntrack-iptables-rules: \"false\"\n\n  auto-direct-node-routes: \"true\"\n  enable-local-redirect-policy: \"true\"\n  ipv4-native-routing-cidr: 10.42.0.0/16\n  ipv6-native-routing-cidr: fd00:10:42::/48\n\n  kube-proxy-replacement: \"strict\"\n  kube-proxy-replacement-healthz-bind-address: \"0.0.0.0:10256\"\n  bpf-lb-sock: \"false\"\n  enable-health-check-nodeport: \"true\"\n  node-port-bind-protection: \"true\"\n  enable-auto-protect-node-port-range: \"true\"\n  bpf-lb-mode: \"dsr\"\n  bpf-lb-algorithm: \"maglev\"\n  enable-svc-source-range-check: \"true\"\n  enable-l2-neigh-discovery: \"true\"\n  arping-refresh-period: \"30s\"\n  enable-endpoint-routes: \"true\"\n  enable-endpoint-health-checking: \"true\"\n  enable-health-checking: \"true\"\n  enable-well-known-identities: \"false\"\n  enable-remote-node-identity: \"true\"\n  synchronize-k8s-nodes: \"true\"\n  operator-api-serve-addr: \"127.0.0.1:9234\"\n  ipam: \"kubernetes\"\n  disable-cnp-status-updates: \"true\"\n  enable-vtep: \"false\"\n  vtep-endpoint: \"\"\n  vtep-cidr: \"\"\n  vtep-mask: \"\"\n  vtep-mac: \"\"\n  enable-bgp-control-plane: \"true\"\n  bpf-root: \"/sys/fs/bpf\"\n  cgroup-root: \"/sys/fs/cgroup\"\n  enable-k8s-terminating-endpoint: \"true\"\n  enable-sctp: \"false\"\n  remove-cilium-node-taints: \"true\"\n  set-cilium-is-up-condition: \"true\"\n  unmanaged-pod-watcher-interval: \"15\"\n  tofqdns-dns-reject-response-code: \"refused\"\n  tofqdns-enable-dns-compression: \"true\"\n  tofqdns-endpoint-max-ip-per-hostname: \"50\"\n  tofqdns-idle-connection-grace-period: \"0s\"\n  tofqdns-max-deferred-connection-deletes: \"10000\"\n  tofqdns-min-ttl: \"3600\"\n  tofqdns-proxy-response-max-delay: \"100ms\"\n  agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\"\n---\n# Source: cilium/templates/cilium-agent/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium\nrules:\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - networkpolicies\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  - services\n  - pods\n  - endpoints\n  - nodes\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - list\n  - watch\n  # This is used when validating policies in preflight. This will need to stay\n  # until we figure out how to avoid \"get\" inside the preflight, and then\n  # should be removed ideally.\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools\n  - ciliumbgppeeringpolicies\n  - ciliumclusterwideenvoyconfigs\n  - ciliumclusterwidenetworkpolicies\n  - ciliumegressgatewaypolicies\n  - ciliumegressnatpolicies\n  - ciliumendpoints\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  - ciliumidentities\n  - ciliumlocalredirectpolicies\n  - ciliumnetworkpolicies\n  - ciliumnodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  - ciliumendpoints\n  - ciliumnodes\n  verbs:\n  - create\n- apiGroups:\n  - cilium.io\n  # To synchronize garbage collection of such resources\n  resources:\n  - ciliumidentities\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  verbs:\n  - delete\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  - ciliumnodes/status\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  - ciliumendpoints/status\n  - ciliumendpoints\n  verbs:\n  - patch\n---\n# Source: cilium/templates/cilium-operator/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium-operator\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n  # to automatically delete [core|kube]dns pods so that are starting to being\n  # managed by Cilium\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # To remove node taints\n  - nodes\n  # To set NetworkUnavailable false on startup\n  - nodes/status\n  verbs:\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform LB IP allocation for BGP\n  - services/status\n  verbs:\n  - update\n  - patch\n- apiGroups:\n  - \"\"\n  resources:\n  # to check apiserver connectivity\n  - namespaces\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform the translation of a CNP that contains `ToGroup` to its endpoints\n  - services\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies\n  - ciliumclusterwidenetworkpolicies\n  verbs:\n  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'\n  - create\n  - update\n  - deletecollection\n  # To update the status of the CNPs and CCNPs\n  - patch\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  verbs:\n  # Update the auto-generated CNPs and CCNPs status.\n  - patch\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  - ciliumidentities\n  verbs:\n  # To perform garbage collection of such resources\n  - delete\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  verbs:\n  # To synchronize garbage collection of such resources\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n    # To perform CiliumNode garbage collector\n  - delete\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes/status\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n  - delete\n  - patch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - update\n  resourceNames:\n  - ciliumloadbalancerippools.cilium.io\n  - ciliumbgppeeringpolicies.cilium.io\n  - ciliumclusterwideenvoyconfigs.cilium.io\n  - ciliumclusterwidenetworkpolicies.cilium.io\n  - ciliumegressgatewaypolicies.cilium.io\n  - ciliumegressnatpolicies.cilium.io\n  - ciliumendpoints.cilium.io\n  - ciliumendpointslices.cilium.io\n  - ciliumenvoyconfigs.cilium.io\n  - ciliumexternalworkloads.cilium.io\n  - ciliumidentities.cilium.io\n  - ciliumlocalredirectpolicies.cilium.io\n  - ciliumnetworkpolicies.cilium.io\n  - ciliumnodes.cilium.io\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools/status\n  verbs:\n  - patch\n# For cilium-operator running in HA mode.\n#\n# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election\n# between multiple running instances.\n# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less\n# common and fewer objects in the cluster watch \"all Leases\".\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n  - get\n  - update\n---\n# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium-operator\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium-operator\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-agent/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: cilium\n  namespace: kube-system\n  labels:\n    k8s-app: cilium\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-agent\nspec:\n  selector:\n    matchLabels:\n      k8s-app: cilium\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 2\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"ba499ed2ec0b403b2a8307f8f2c5b189733c6eb449f46c69088bb36be42a0176\"\n      labels:\n        k8s-app: cilium\n        app.kubernetes.io/name: cilium-agent\n        app.kubernetes.io/part-of: cilium\n    spec:\n      containers:\n      - name: cilium-agent\n        image: \"quay.io/cilium/cilium-ci:latest\"\n        imagePullPolicy: Always\n        command:\n        - cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        startupProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          failureThreshold: 105\n          periodSeconds: 2\n          successThreshold: 1\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n          timeoutSeconds: 5\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_CLUSTERMESH_CONFIG\n          value: /var/lib/cilium/clustermesh/\n        - name: CILIUM_CNI_CHAINING_MODE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: cni-chaining-mode\n              optional: true\n        - name: CILIUM_CUSTOM_CNI_CONF\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: custom-cni-conf\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"172.18.2.252\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - \"/cni-install.sh\"\n              - \"--enable-debug=false\"\n              - \"--cni-exclusive=true\"\n              - \"--log-file=/var/run/cilium/cilium-cni.log\"\n          preStop:\n            exec:\n              command:\n              - /cni-uninstall.sh\n        securityContext:\n          privileged: true\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n        # Required to run 'bpftool -j feature probe'\n        # during kernel feature probing\n        - mountPath: /boot\n          name: host-boot\n          readOnly: true\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          mountPropagation: Bidirectional\n        # Check for duplicate mounts before mounting\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        - name: cni-path\n          mountPath: /host/opt/cni/bin\n        - name: etc-cni-netd\n          mountPath: /host/etc/cni/net.d\n        - name: clustermesh-secrets\n          mountPath: /var/lib/cilium/clustermesh\n          readOnly: true\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n          # Needed to be able to load kernel modules\n        - name: lib-modules\n          mountPath: /lib/modules\n          readOnly: true\n        - name: xtables-lock\n          mountPath: /run/xtables.lock\n      initContainers:\n      - name: clean-cilium-state\n        image: \"quay.io/cilium/cilium-ci:latest\"\n        imagePullPolicy: Always\n        command:\n        - /init-container.sh\n        env:\n        - name: CILIUM_ALL_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-state\n              optional: true\n        - name: CILIUM_BPF_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-bpf-state\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"172.18.2.252\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          # Required to mount cgroup filesystem from the host to cilium agent pod\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n          mountPropagation: HostToContainer\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        resources:\n          requests:\n            cpu: 100m\n            memory: 100Mi # wait-for-kube-proxy\n      restartPolicy: Always\n      priorityClassName: system-node-critical\n      serviceAccount: \"cilium\"\n      serviceAccountName: \"cilium\"\n      terminationGracePeriodSeconds: 1\n      hostNetwork: true\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To keep state between restarts / upgrades\n      - name: cilium-run\n        hostPath:\n          path: /var/run/cilium\n          type: DirectoryOrCreate\n        # To keep state between restarts / upgrades for bpf maps\n      - name: bpf-maps\n        hostPath:\n          path: /sys/fs/bpf\n          type: DirectoryOrCreate\n      # To keep state between restarts / upgrades for cgroup2 filesystem\n      - name: cilium-cgroup\n        hostPath:\n          path: /sys/fs/cgroup\n          type: DirectoryOrCreate\n      # To install cilium cni plugin in the host\n      - name: cni-path\n        hostPath:\n          path:  /opt/cni/bin\n          type: DirectoryOrCreate\n        # To install cilium cni configuration in the host\n      - name: etc-cni-netd\n        hostPath:\n          path: /etc/cni/net.d\n          type: DirectoryOrCreate\n        # To be able to load kernel modules\n      - name: lib-modules\n        hostPath:\n          path: /lib/modules\n        # To access iptables concurrently with other processes (e.g. kube-proxy)\n      - name: xtables-lock\n        hostPath:\n          path: /run/xtables.lock\n          type: FileOrCreate\n        # To read the clustermesh configuration\n      - name: clustermesh-secrets\n        secret:\n          secretName: cilium-clustermesh\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          optional: true\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n      - name: host-boot\n        hostPath:\n          path: /boot\n          type: Directory\n---\n# Source: cilium/templates/cilium-operator/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cilium-operator\n  namespace: kube-system\n  labels:\n    io.cilium/app: operator\n    name: cilium-operator\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-operator\nspec:\n  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go\n  # for more details.\n  replicas: 2\n  selector:\n    matchLabels:\n      io.cilium/app: operator\n      name: cilium-operator\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"ba499ed2ec0b403b2a8307f8f2c5b189733c6eb449f46c69088bb36be42a0176\"\n      labels:\n        io.cilium/app: operator\n        name: cilium-operator\n        app.kubernetes.io/part-of: cilium\n        app.kubernetes.io/name: cilium-operator\n    spec:\n      containers:\n      - name: cilium-operator\n        image: \"quay.io/cilium/operator-generic-ci:latest\"\n        imagePullPolicy: Always\n        command:\n        - cilium-operator-generic\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        - --debug=$(CILIUM_DEBUG)\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_DEBUG\n          valueFrom:\n            configMapKeyRef:\n              key: debug\n              name: cilium-config\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"172.18.2.252\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9234\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          timeoutSeconds: 3\n        volumeMounts:\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n        terminationMessagePolicy: FallbackToLogsOnError\n      hostNetwork: true\n      restartPolicy: Always\n      priorityClassName: system-cluster-critical\n      serviceAccount: \"cilium-operator\"\n      serviceAccountName: \"cilium-operator\"\n      # In HA mode, cilium-operator pods must not be scheduled on the same\n      # node as they will clash with each other.\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                io.cilium/app: operator\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n---\n# Source: cilium/templates/cilium-secrets-namespace.yaml\n# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.\n",
            "template": "---\n# Source: cilium/templates/cilium-agent/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cilium-config\n  namespace: kube-system\ndata:\n\n  # Identity allocation mode selects how identities are shared between cilium\n  # nodes by setting how they are stored. The options are \"crd\" or \"kvstore\".\n  # - \"crd\" stores identities in kubernetes as CRDs (custom resource definition).\n  #   These can be queried with:\n  #     kubectl get ciliumid\n  # - \"kvstore\" stores identities in an etcd kvstore, that is\n  #   configured below. Cilium versions before 1.6 supported only the kvstore\n  #   backend. Upgrades from these older cilium versions should continue using\n  #   the kvstore by commenting out the identity-allocation-mode below, or\n  #   setting it to \"kvstore\".\n  identity-allocation-mode: crd\n  identity-heartbeat-timeout: \"30m0s\"\n  identity-gc-interval: \"15m0s\"\n  cilium-endpoint-gc-interval: \"5m0s\"\n  nodes-gc-interval: \"5m0s\"\n  skip-cnp-status-startup-clean: \"false\"\n  # Disable the usage of CiliumEndpoint CRD\n  disable-endpoint-crd: \"false\"\n\n  # If you want to run cilium in debug mode change this value to true\n  debug: \"false\"\n  # The agent can be put into the following three policy enforcement modes\n  # default, always and never.\n  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes\n  enable-policy: \"default\"\n\n  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4\n  # address.\n  enable-ipv4: \"true\"\n\n  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6\n  # address.\n  enable-ipv6: \"true\"\n  # Users who wish to specify their own custom CNI configuration file must set\n  # custom-cni-conf to \"true\", otherwise Cilium may overwrite the configuration.\n  custom-cni-conf: \"false\"\n  enable-bpf-clock-probe: \"true\"\n  # If you want cilium monitor to aggregate tracing for packets, set this level\n  # to \"low\", \"medium\", or \"maximum\". The higher the level, the less packets\n  # that will be seen in monitor output.\n  monitor-aggregation: medium\n\n  # The monitor aggregation interval governs the typical time between monitor\n  # notification events for each allowed connection.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-interval: \"5s\"\n\n  # The monitor aggregation flags determine which TCP flags which, upon the\n  # first observation, cause monitor notifications to be generated.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-flags: all\n  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic\n  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.\n  bpf-map-dynamic-size-ratio: \"0.0025\"\n  # bpf-policy-map-max specifies the maximum number of entries in endpoint\n  # policy map (per endpoint)\n  bpf-policy-map-max: \"16384\"\n  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,\n  # backend and affinity maps.\n  bpf-lb-map-max: \"65536\"\n  bpf-lb-external-clusterip: \"false\"\n\n  # Pre-allocation of map entries allows per-packet latency to be reduced, at\n  # the expense of up-front memory allocation for the entries in the maps. The\n  # default value below will minimize memory usage in the default installation;\n  # users who are sensitive to latency may consider setting this to \"true\".\n  #\n  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore\n  # this option and behave as though it is set to \"true\".\n  #\n  # If this value is modified, then during the next Cilium startup the restore\n  # of existing endpoints and tracking of ongoing connections may be disrupted.\n  # As a result, reply packets may be dropped and the load-balancing decisions\n  # for established connections may change.\n  #\n  # If this option is set to \"false\" during an upgrade from 1.3 or earlier to\n  # 1.4 or later, then it may cause one-time disruptions during the upgrade.\n  preallocate-bpf-maps: \"false\"\n\n  # Regular expression matching compatible Istio sidecar istio-proxy\n  # container image names\n  sidecar-istio-proxy-image: \"cilium/istio_proxy\"\n\n  # Name of the cluster. Only relevant when building a mesh of clusters.\n  cluster-name: ${cluster_name}\n  # Unique ID of the cluster. Must be unique across all conneted clusters and\n  # in the range of 1 and 255. Only relevant when building a mesh of clusters.\n  cluster-id: \"1\"\n\n  # Encapsulation mode for communication between nodes\n  # Possible values:\n  #   - disabled\n  #   - vxlan (default)\n  #   - geneve\n  tunnel: \"disabled\"\n\n\n  # Enables L7 proxy for L7 policy enforcement and visibility\n  enable-l7-proxy: \"true\"\n\n  enable-ipv4-masquerade: \"true\"\n  enable-ipv6-big-tcp: \"false\"\n  enable-ipv6-masquerade: \"true\"\n\n  enable-xt-socket-fallback: \"true\"\n  install-iptables-rules: \"true\"\n  install-no-conntrack-iptables-rules: \"false\"\n\n  auto-direct-node-routes: \"true\"\n  enable-local-redirect-policy: \"true\"\n  ipv4-native-routing-cidr: 10.42.0.0/16\n  ipv6-native-routing-cidr: fd00:10:42::/48\n\n  kube-proxy-replacement: \"strict\"\n  kube-proxy-replacement-healthz-bind-address: \"0.0.0.0:10256\"\n  bpf-lb-sock: \"false\"\n  enable-health-check-nodeport: \"true\"\n  node-port-bind-protection: \"true\"\n  enable-auto-protect-node-port-range: \"true\"\n  bpf-lb-mode: \"dsr\"\n  bpf-lb-algorithm: \"maglev\"\n  enable-svc-source-range-check: \"true\"\n  enable-l2-neigh-discovery: \"true\"\n  arping-refresh-period: \"30s\"\n  enable-endpoint-routes: \"true\"\n  enable-endpoint-health-checking: \"true\"\n  enable-health-checking: \"true\"\n  enable-well-known-identities: \"false\"\n  enable-remote-node-identity: \"true\"\n  synchronize-k8s-nodes: \"true\"\n  operator-api-serve-addr: \"127.0.0.1:9234\"\n  ipam: \"kubernetes\"\n  disable-cnp-status-updates: \"true\"\n  enable-vtep: \"false\"\n  vtep-endpoint: \"\"\n  vtep-cidr: \"\"\n  vtep-mask: \"\"\n  vtep-mac: \"\"\n  enable-bgp-control-plane: \"true\"\n  bpf-root: \"/sys/fs/bpf\"\n  cgroup-root: \"/sys/fs/cgroup\"\n  enable-k8s-terminating-endpoint: \"true\"\n  enable-sctp: \"false\"\n  remove-cilium-node-taints: \"true\"\n  set-cilium-is-up-condition: \"true\"\n  unmanaged-pod-watcher-interval: \"15\"\n  tofqdns-dns-reject-response-code: \"refused\"\n  tofqdns-enable-dns-compression: \"true\"\n  tofqdns-endpoint-max-ip-per-hostname: \"50\"\n  tofqdns-idle-connection-grace-period: \"0s\"\n  tofqdns-max-deferred-connection-deletes: \"10000\"\n  tofqdns-min-ttl: \"3600\"\n  tofqdns-proxy-response-max-delay: \"100ms\"\n  agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\"\n---\n# Source: cilium/templates/cilium-agent/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium\nrules:\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - networkpolicies\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  - services\n  - pods\n  - endpoints\n  - nodes\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - list\n  - watch\n  # This is used when validating policies in preflight. This will need to stay\n  # until we figure out how to avoid \"get\" inside the preflight, and then\n  # should be removed ideally.\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools\n  - ciliumbgppeeringpolicies\n  - ciliumclusterwideenvoyconfigs\n  - ciliumclusterwidenetworkpolicies\n  - ciliumegressgatewaypolicies\n  - ciliumegressnatpolicies\n  - ciliumendpoints\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  - ciliumidentities\n  - ciliumlocalredirectpolicies\n  - ciliumnetworkpolicies\n  - ciliumnodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  - ciliumendpoints\n  - ciliumnodes\n  verbs:\n  - create\n- apiGroups:\n  - cilium.io\n  # To synchronize garbage collection of such resources\n  resources:\n  - ciliumidentities\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  verbs:\n  - delete\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  - ciliumnodes/status\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  - ciliumendpoints/status\n  - ciliumendpoints\n  verbs:\n  - patch\n---\n# Source: cilium/templates/cilium-operator/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium-operator\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n  # to automatically delete [core|kube]dns pods so that are starting to being\n  # managed by Cilium\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # To remove node taints\n  - nodes\n  # To set NetworkUnavailable false on startup\n  - nodes/status\n  verbs:\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform LB IP allocation for BGP\n  - services/status\n  verbs:\n  - update\n  - patch\n- apiGroups:\n  - \"\"\n  resources:\n  # to check apiserver connectivity\n  - namespaces\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform the translation of a CNP that contains `ToGroup` to its endpoints\n  - services\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies\n  - ciliumclusterwidenetworkpolicies\n  verbs:\n  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'\n  - create\n  - update\n  - deletecollection\n  # To update the status of the CNPs and CCNPs\n  - patch\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  verbs:\n  # Update the auto-generated CNPs and CCNPs status.\n  - patch\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  - ciliumidentities\n  verbs:\n  # To perform garbage collection of such resources\n  - delete\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  verbs:\n  # To synchronize garbage collection of such resources\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n    # To perform CiliumNode garbage collector\n  - delete\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes/status\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n  - delete\n  - patch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - update\n  resourceNames:\n  - ciliumloadbalancerippools.cilium.io\n  - ciliumbgppeeringpolicies.cilium.io\n  - ciliumclusterwideenvoyconfigs.cilium.io\n  - ciliumclusterwidenetworkpolicies.cilium.io\n  - ciliumegressgatewaypolicies.cilium.io\n  - ciliumegressnatpolicies.cilium.io\n  - ciliumendpoints.cilium.io\n  - ciliumendpointslices.cilium.io\n  - ciliumenvoyconfigs.cilium.io\n  - ciliumexternalworkloads.cilium.io\n  - ciliumidentities.cilium.io\n  - ciliumlocalredirectpolicies.cilium.io\n  - ciliumnetworkpolicies.cilium.io\n  - ciliumnodes.cilium.io\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumloadbalancerippools/status\n  verbs:\n  - patch\n# For cilium-operator running in HA mode.\n#\n# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election\n# between multiple running instances.\n# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less\n# common and fewer objects in the cluster watch \"all Leases\".\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n  - get\n  - update\n---\n# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium-operator\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium-operator\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-agent/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: cilium\n  namespace: kube-system\n  labels:\n    k8s-app: cilium\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-agent\nspec:\n  selector:\n    matchLabels:\n      k8s-app: cilium\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 2\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"ba499ed2ec0b403b2a8307f8f2c5b189733c6eb449f46c69088bb36be42a0176\"\n      labels:\n        k8s-app: cilium\n        app.kubernetes.io/name: cilium-agent\n        app.kubernetes.io/part-of: cilium\n    spec:\n      containers:\n      - name: cilium-agent\n        image: \"quay.io/cilium/cilium-ci:latest\"\n        imagePullPolicy: Always\n        command:\n        - cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        startupProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          failureThreshold: 105\n          periodSeconds: 2\n          successThreshold: 1\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n          timeoutSeconds: 5\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_CLUSTERMESH_CONFIG\n          value: /var/lib/cilium/clustermesh/\n        - name: CILIUM_CNI_CHAINING_MODE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: cni-chaining-mode\n              optional: true\n        - name: CILIUM_CUSTOM_CNI_CONF\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: custom-cni-conf\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"${api_vip}\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - \"/cni-install.sh\"\n              - \"--enable-debug=false\"\n              - \"--cni-exclusive=true\"\n              - \"--log-file=/var/run/cilium/cilium-cni.log\"\n          preStop:\n            exec:\n              command:\n              - /cni-uninstall.sh\n        securityContext:\n          privileged: true\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n        # Required to run 'bpftool -j feature probe'\n        # during kernel feature probing\n        - mountPath: /boot\n          name: host-boot\n          readOnly: true\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          mountPropagation: Bidirectional\n        # Check for duplicate mounts before mounting\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        - name: cni-path\n          mountPath: /host/opt/cni/bin\n        - name: etc-cni-netd\n          mountPath: /host/etc/cni/net.d\n        - name: clustermesh-secrets\n          mountPath: /var/lib/cilium/clustermesh\n          readOnly: true\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n          # Needed to be able to load kernel modules\n        - name: lib-modules\n          mountPath: /lib/modules\n          readOnly: true\n        - name: xtables-lock\n          mountPath: /run/xtables.lock\n      initContainers:\n      - name: clean-cilium-state\n        image: \"quay.io/cilium/cilium-ci:latest\"\n        imagePullPolicy: Always\n        command:\n        - /init-container.sh\n        env:\n        - name: CILIUM_ALL_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-state\n              optional: true\n        - name: CILIUM_BPF_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-bpf-state\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"${api_vip}\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          # Required to mount cgroup filesystem from the host to cilium agent pod\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n          mountPropagation: HostToContainer\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        resources:\n          requests:\n            cpu: 100m\n            memory: 100Mi # wait-for-kube-proxy\n      restartPolicy: Always\n      priorityClassName: system-node-critical\n      serviceAccount: \"cilium\"\n      serviceAccountName: \"cilium\"\n      terminationGracePeriodSeconds: 1\n      hostNetwork: true\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To keep state between restarts / upgrades\n      - name: cilium-run\n        hostPath:\n          path: /var/run/cilium\n          type: DirectoryOrCreate\n        # To keep state between restarts / upgrades for bpf maps\n      - name: bpf-maps\n        hostPath:\n          path: /sys/fs/bpf\n          type: DirectoryOrCreate\n      # To keep state between restarts / upgrades for cgroup2 filesystem\n      - name: cilium-cgroup\n        hostPath:\n          path: /sys/fs/cgroup\n          type: DirectoryOrCreate\n      # To install cilium cni plugin in the host\n      - name: cni-path\n        hostPath:\n          path:  /opt/cni/bin\n          type: DirectoryOrCreate\n        # To install cilium cni configuration in the host\n      - name: etc-cni-netd\n        hostPath:\n          path: /etc/cni/net.d\n          type: DirectoryOrCreate\n        # To be able to load kernel modules\n      - name: lib-modules\n        hostPath:\n          path: /lib/modules\n        # To access iptables concurrently with other processes (e.g. kube-proxy)\n      - name: xtables-lock\n        hostPath:\n          path: /run/xtables.lock\n          type: FileOrCreate\n        # To read the clustermesh configuration\n      - name: clustermesh-secrets\n        secret:\n          secretName: cilium-clustermesh\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          optional: true\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n      - name: host-boot\n        hostPath:\n          path: /boot\n          type: Directory\n---\n# Source: cilium/templates/cilium-operator/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cilium-operator\n  namespace: kube-system\n  labels:\n    io.cilium/app: operator\n    name: cilium-operator\n    app.kubernetes.io/part-of: cilium\n    app.kubernetes.io/name: cilium-operator\nspec:\n  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go\n  # for more details.\n  replicas: 2\n  selector:\n    matchLabels:\n      io.cilium/app: operator\n      name: cilium-operator\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"ba499ed2ec0b403b2a8307f8f2c5b189733c6eb449f46c69088bb36be42a0176\"\n      labels:\n        io.cilium/app: operator\n        name: cilium-operator\n        app.kubernetes.io/part-of: cilium\n        app.kubernetes.io/name: cilium-operator\n    spec:\n      containers:\n      - name: cilium-operator\n        image: \"quay.io/cilium/operator-generic-ci:latest\"\n        imagePullPolicy: Always\n        command:\n        - cilium-operator-generic\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        - --debug=$(CILIUM_DEBUG)\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_DEBUG\n          valueFrom:\n            configMapKeyRef:\n              key: debug\n              name: cilium-config\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"${api_vip}\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9234\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          timeoutSeconds: 3\n        volumeMounts:\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n        terminationMessagePolicy: FallbackToLogsOnError\n      hostNetwork: true\n      restartPolicy: Always\n      priorityClassName: system-cluster-critical\n      serviceAccount: \"cilium-operator\"\n      serviceAccountName: \"cilium-operator\"\n      # In HA mode, cilium-operator pods must not be scheduled on the same\n      # node as they will clash with each other.\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                io.cilium/app: operator\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n---\n# Source: cilium/templates/cilium-secrets-namespace.yaml\n# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.\n",
            "vars": {
              "api_vip": "172.18.2.252",
              "cluster_name": "chongus",
              "pod_cidr_v6": "fd01::/52",
              "service_cidr_v6": "fd98::/112"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "template_file",
      "name": "kube-vip",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "5a4720cb1b37f47fcf973a412acfef93b430440bcb4ec12406928442e8c6444f",
            "rendered": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  name: system:kube-vip-role\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"services\", \"services/status\", \"nodes\", \"endpoints\"]\n    verbs: [\"list\",\"get\",\"watch\", \"update\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    verbs: [\"list\", \"get\", \"watch\", \"update\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-vip-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-vip-role\nsubjects:\n- kind: ServiceAccount\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  creationTimestamp: null\n  labels:\n    app.kubernetes.io/name: kube-vip-ds\n    app.kubernetes.io/version: v0.5.7\n  name: kube-vip-ds\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-vip-ds\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app.kubernetes.io/name: kube-vip-ds\n        app.kubernetes.io/version: v0.5.7\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: node-role.kubernetes.io/master\n                operator: Exists\n            - matchExpressions:\n              - key: node-role.kubernetes.io/control-plane\n                operator: Exists\n      containers:\n      - args:\n        - manager\n        env:\n        - name: KUBERNETES_SERVICE_HOST\n          value: 127.0.0.1\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        - name: vip_arp\n          value: \"true\"\n        - name: port\n          value: \"6443\"\n        - name: vip_interface\n          value: eno1\n        - name: vip_cidr\n          value: \"32\"\n        - name: cp_enable\n          value: \"true\"\n        - name: cp_namespace\n          value: kube-system\n        - name: vip_ddns\n          value: \"false\"\n        - name: vip_leaderelection\n          value: \"true\"\n        - name: vip_leaseduration\n          value: \"5\"\n        - name: vip_renewdeadline\n          value: \"3\"\n        - name: vip_retryperiod\n          value: \"1\"\n        - name: address\n          value: 172.18.2.252\n        - name: prometheus_server\n          value: :2112\n        image: ghcr.io/kube-vip/kube-vip:v0.5.7\n        imagePullPolicy: Always\n        name: kube-vip\n        resources: {}\n        securityContext:\n          capabilities:\n            add:\n            - NET_ADMIN\n            - NET_RAW\n      hostNetwork: true\n      serviceAccountName: kube-vip\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      - effect: NoExecute\n        operator: Exists\n  updateStrategy: {}\nstatus:\n  currentNumberScheduled: 0\n  desiredNumberScheduled: 0\n  numberMisscheduled: 0\n  numberReady: 0\n",
            "template": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  name: system:kube-vip-role\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"services\", \"services/status\", \"nodes\", \"endpoints\"]\n    verbs: [\"list\",\"get\",\"watch\", \"update\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    verbs: [\"list\", \"get\", \"watch\", \"update\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-vip-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-vip-role\nsubjects:\n- kind: ServiceAccount\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  creationTimestamp: null\n  labels:\n    app.kubernetes.io/name: kube-vip-ds\n    app.kubernetes.io/version: v0.5.7\n  name: kube-vip-ds\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-vip-ds\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app.kubernetes.io/name: kube-vip-ds\n        app.kubernetes.io/version: v0.5.7\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: node-role.kubernetes.io/master\n                operator: Exists\n            - matchExpressions:\n              - key: node-role.kubernetes.io/control-plane\n                operator: Exists\n      containers:\n      - args:\n        - manager\n        env:\n        - name: KUBERNETES_SERVICE_HOST\n          value: 127.0.0.1\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        - name: vip_arp\n          value: \"true\"\n        - name: port\n          value: \"6443\"\n        - name: vip_interface\n          value: ${api_vip_iface}\n        - name: vip_cidr\n          value: \"32\"\n        - name: cp_enable\n          value: \"true\"\n        - name: cp_namespace\n          value: kube-system\n        - name: vip_ddns\n          value: \"false\"\n        - name: vip_leaderelection\n          value: \"true\"\n        - name: vip_leaseduration\n          value: \"5\"\n        - name: vip_renewdeadline\n          value: \"3\"\n        - name: vip_retryperiod\n          value: \"1\"\n        - name: address\n          value: ${api_vip}\n        - name: prometheus_server\n          value: :2112\n        image: ghcr.io/kube-vip/kube-vip:v0.5.7\n        imagePullPolicy: Always\n        name: kube-vip\n        resources: {}\n        securityContext:\n          capabilities:\n            add:\n            - NET_ADMIN\n            - NET_RAW\n      hostNetwork: true\n      serviceAccountName: kube-vip\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      - effect: NoExecute\n        operator: Exists\n  updateStrategy: {}\nstatus:\n  currentNumberScheduled: 0\n  desiredNumberScheduled: 0\n  numberMisscheduled: 0\n  numberReady: 0\n",
            "vars": {
              "api_vip": "172.18.2.252",
              "api_vip_iface": "eno1"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "template_file",
      "name": "rke2-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9f08ac0bdc96bbcb9e6993a6f5cae8ba493f9eb5869309119f2c76509afdb5f2",
            "rendered": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\n\ncluster-cidr:\n  - 10.42.0.0/16\n  - fd01::/52\nservice-cidr:\n  - 10.43.0.0/16\n  - fd98::/112\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "template": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: ${rke2_token}\n%{ if  !bootstrap ~}\nserver: 'https://${api_vip}:9345'\n%{~ endif }\ncluster-cidr:\n  - 10.42.0.0/16\n  - ${pod_cidr_v6}\nservice-cidr:\n  - 10.43.0.0/16\n  - ${service_cidr_v6}\ntls-san:\n  - ${api_fqdn}\n  - ${api_vip}\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "vars": {
              "api_fqdn": "api.cho.rtrox.com",
              "api_vip": "172.18.2.252",
              "bootstrap": "true",
              "pod_cidr_v6": "fd01::/52",
              "rke2_token": "SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl",
              "service_cidr_v6": "fd98::/112"
            }
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1b7f987bebb0f91c88af2c9ef81605ae0de02fe2701d6a86883ba6ad3ba940ab",
            "rendered": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\nserver: 'https://172.18.2.252:9345'\ncluster-cidr:\n  - 10.42.0.0/16\n  - fd01::/52\nservice-cidr:\n  - 10.43.0.0/16\n  - fd98::/112\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "template": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: ${rke2_token}\n%{ if  !bootstrap ~}\nserver: 'https://${api_vip}:9345'\n%{~ endif }\ncluster-cidr:\n  - 10.42.0.0/16\n  - ${pod_cidr_v6}\nservice-cidr:\n  - 10.43.0.0/16\n  - ${service_cidr_v6}\ntls-san:\n  - ${api_fqdn}\n  - ${api_vip}\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "vars": {
              "api_fqdn": "api.cho.rtrox.com",
              "api_vip": "172.18.2.252",
              "bootstrap": "false",
              "pod_cidr_v6": "fd01::/52",
              "rke2_token": "SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl",
              "service_cidr_v6": "fd98::/112"
            }
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1b7f987bebb0f91c88af2c9ef81605ae0de02fe2701d6a86883ba6ad3ba940ab",
            "rendered": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\nserver: 'https://172.18.2.252:9345'\ncluster-cidr:\n  - 10.42.0.0/16\n  - fd01::/52\nservice-cidr:\n  - 10.43.0.0/16\n  - fd98::/112\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "template": "---\nwrite-kubeconfig-mode: \"0644\"\ntoken: ${rke2_token}\n%{ if  !bootstrap ~}\nserver: 'https://${api_vip}:9345'\n%{~ endif }\ncluster-cidr:\n  - 10.42.0.0/16\n  - ${pod_cidr_v6}\nservice-cidr:\n  - 10.43.0.0/16\n  - ${service_cidr_v6}\ntls-san:\n  - ${api_fqdn}\n  - ${api_vip}\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\ncni: none\ndisable:\n  # - servicelb\n  # - traefik\n  # - local-storage\n  - rke2-ingress-nginx\n\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "vars": {
              "api_fqdn": "api.cho.rtrox.com",
              "api_vip": "172.18.2.252",
              "bootstrap": "false",
              "pod_cidr_v6": "fd01::/52",
              "rke2_token": "SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl",
              "service_cidr_v6": "fd98::/112"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_group",
      "name": "flatcar-install",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "flatcar-install-node01",
            "metadata": {},
            "name": "flatcar-install-node01",
            "profile": "flatcar-install-node01",
            "selector": {
              "mac": "44:a8:42:3e:b9:27"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install",
            "module.chongus.matchbox_profile.flatcar-install"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "flatcar-install-node02",
            "metadata": {},
            "name": "flatcar-install-node02",
            "profile": "flatcar-install-node02",
            "selector": {
              "mac": "b0:83:fe:cf:91:f7"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install",
            "module.chongus.matchbox_profile.flatcar-install"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "flatcar-install-node03",
            "metadata": {},
            "name": "flatcar-install-node03",
            "profile": "flatcar-install-node03",
            "selector": {
              "mac": "b0:83:fe:cf:d7:ee"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install",
            "module.chongus.matchbox_profile.flatcar-install"
          ]
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_group",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "worker-node01",
            "metadata": {},
            "name": "worker-node01",
            "profile": "worker-node01",
            "selector": {
              "node": "node01",
              "os": "installed"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker",
            "module.chongus.data.template_file.cilium-install",
            "module.chongus.data.template_file.kube-vip",
            "module.chongus.data.template_file.rke2-config",
            "module.chongus.matchbox_profile.worker"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "worker-node02",
            "metadata": {},
            "name": "worker-node02",
            "profile": "worker-node02",
            "selector": {
              "node": "node02",
              "os": "installed"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker",
            "module.chongus.data.template_file.cilium-install",
            "module.chongus.data.template_file.kube-vip",
            "module.chongus.data.template_file.rke2-config",
            "module.chongus.matchbox_profile.worker"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "worker-node03",
            "metadata": {},
            "name": "worker-node03",
            "profile": "worker-node03",
            "selector": {
              "node": "node03",
              "os": "installed"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker",
            "module.chongus.data.template_file.cilium-install",
            "module.chongus.data.template_file.kube-vip",
            "module.chongus.data.template_file.rke2-config",
            "module.chongus.matchbox_profile.worker"
          ]
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_profile",
      "name": "flatcar-install",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=flatcar_production_pxe_image.cpio.gz",
              "flatcar.config.url=http://matchbox.sid.rtrox.com/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
              "flatcar.first_boot=yes"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "flatcar-install-node01",
            "initrd": [
              "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.1/flatcar_production_pxe_image.cpio.gz"
            ],
            "kernel": "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.1/flatcar_production_pxe.vmlinuz",
            "name": "flatcar-install-node01",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhCl1VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYe5RRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9iEzffQgRESOJygLGO2ZD/dSdorNXtOQJ2fzyJGG3FAn3S5cjR4p1S4kVt6j/RvIYn05RTkCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+Wmma9nRdFU/4rnp2a9XjSr5aaqpndVVcyqsijL/9Nqsc0AhPu10Vs8KttBQmaPWTolxs6wh4iaiLPvAAAA//8WZdHhZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node01-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=flatcar_production_pxe_image.cpio.gz",
              "flatcar.config.url=http://matchbox.sid.rtrox.com/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
              "flatcar.first_boot=yes"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "flatcar-install-node02",
            "initrd": [
              "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.1/flatcar_production_pxe_image.cpio.gz"
            ],
            "kernel": "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.1/flatcar_production_pxe.vmlinuz",
            "name": "flatcar-install-node02",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIvKeLaFQC11VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYeFRRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9j4zffQgRESOJygLGO2ZD3dSdorNXtOQJ2fzyJGG3FAn3S5cjR4o1S4kVt6j/RvIYn05RTUCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+WmWaznRdFUs+L5sVmvn5rVclNV0/9VVcyrsijLf9PpbJsBCPdro7d4VLaDhMwes3RKjJ1hDxE1EWffAQAA//8Cx+juZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node02-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=flatcar_production_pxe_image.cpio.gz",
              "flatcar.config.url=http://matchbox.sid.rtrox.com/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
              "flatcar.first_boot=yes"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "flatcar-install-node03",
            "initrd": [
              "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.1/flatcar_production_pxe_image.cpio.gz"
            ],
            "kernel": "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.1/flatcar_production_pxe.vmlinuz",
            "name": "flatcar-install-node03",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhtnRVEVxJLWH+3Oi0k7kycyPR0u9eFLvp5sLl/DjnN/4jtQtSq7QDgUM2hrlHFUF5D3sV2bGjAKy0x5Sl3hK0LliQFg8SRMQtDjC5fMm+KnF6m5xr0IC14Nr6kpwwElBbf36BTnX5Aob6wHUJm7vM9NGDEBE5HqEsYLRj3t9K2Sk2O01DnpzNI0cackOddNtwMbqnVLuQWHmP9m8gi/X5FNMRCIIfKn9PFLLWKzYqiisP4qpvXfqQ+iiclYqVWC7WzXw1K4qm+lc8PzSr1WOzXKyranpTVcWsKouy/D+tnjYZgHC/NnqLB2U7SMjsMUvHxNgZ9hBRE3H2HQAA//+DYUgbZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node03-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install"
          ]
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_profile",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "args": null,
            "container_linux_config": null,
            "generic_config": null,
            "id": "worker-node01",
            "initrd": null,
            "kernel": null,
            "name": "worker-node01",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node01.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.rke2.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/rke2/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCgpjbHVzdGVyLWNpZHI6CiAgLSAxMC40Mi4wLjAvMTYKICAtIGZkMDE6Oi81MgpzZXJ2aWNlLWNpZHI6CiAgLSAxMC40My4wLjAvMTYKICAtIGZkOTg6Oi8xMTIKdGxzLXNhbjoKICAtIGFwaS5jaG8ucnRyb3guY29tCiAgLSAxNzIuMTguMi4yNTIKIyBEaXNhYmxlIEt1YmVQcm94eSBpbiBmYXZvciBvZiBDaWxpdW0KZGlzYWJsZS1rdWJlLXByb3h5OiB0cnVlCiMgRGlzYWJsZSBEZWZhdWx0IENOSSAmIE5ldHdvcmsgUG9saWN5IEVuZm9yY2VyCmNuaTogbm9uZQpkaXNhYmxlOgogICMgLSBzZXJ2aWNlbGIKICAjIC0gdHJhZWZpawogICMgLSBsb2NhbC1zdG9yYWdlCiAgLSBya2UyLWluZ3Jlc3MtbmdpbngKCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCiMgU291cmNlOiBjaWxpdW0vdGVtcGxhdGVzL2NpbGl1bS1hZ2VudC9zZXJ2aWNlYWNjb3VudC55YW1sCmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6ICJjaWxpdW0iCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLW9wZXJhdG9yL3NlcnZpY2VhY2NvdW50LnlhbWwKYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZTogImNpbGl1bS1vcGVyYXRvciIKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQojIFNvdXJjZTogY2lsaXVtL3RlbXBsYXRlcy9jaWxpdW0tY29uZmlnbWFwLnlhbWwKYXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGNpbGl1bS1jb25maWcKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CgogICMgSWRlbnRpdHkgYWxsb2NhdGlvbiBtb2RlIHNlbGVjdHMgaG93IGlkZW50aXRpZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIGNpbGl1bQogICMgbm9kZXMgYnkgc2V0dGluZyBob3cgdGhleSBhcmUgc3RvcmVkLiBUaGUgb3B0aW9ucyBhcmUgImNyZCIgb3IgImt2c3RvcmUiLgogICMgLSAiY3JkIiBzdG9yZXMgaWRlbnRpdGllcyBpbiBrdWJlcm5ldGVzIGFzIENSRHMgKGN1c3RvbSByZXNvdXJjZSBkZWZpbml0aW9uKS4KICAjICAgVGhlc2UgY2FuIGJlIHF1ZXJpZWQgd2l0aDoKICAjICAgICBrdWJlY3RsIGdldCBjaWxpdW1pZAogICMgLSAia3ZzdG9yZSIgc3RvcmVzIGlkZW50aXRpZXMgaW4gYW4gZXRjZCBrdnN0b3JlLCB0aGF0IGlzCiAgIyAgIGNvbmZpZ3VyZWQgYmVsb3cuIENpbGl1bSB2ZXJzaW9ucyBiZWZvcmUgMS42IHN1cHBvcnRlZCBvbmx5IHRoZSBrdnN0b3JlCiAgIyAgIGJhY2tlbmQuIFVwZ3JhZGVzIGZyb20gdGhlc2Ugb2xkZXIgY2lsaXVtIHZlcnNpb25zIHNob3VsZCBjb250aW51ZSB1c2luZwogICMgICB0aGUga3ZzdG9yZSBieSBjb21tZW50aW5nIG91dCB0aGUgaWRlbnRpdHktYWxsb2NhdGlvbi1tb2RlIGJlbG93LCBvcgogICMgICBzZXR0aW5nIGl0IHRvICJrdnN0b3JlIi4KICBpZGVudGl0eS1hbGxvY2F0aW9uLW1vZGU6IGNyZAogIGlkZW50aXR5LWhlYXJ0YmVhdC10aW1lb3V0OiAiMzBtMHMiCiAgaWRlbnRpdHktZ2MtaW50ZXJ2YWw6ICIxNW0wcyIKICBjaWxpdW0tZW5kcG9pbnQtZ2MtaW50ZXJ2YWw6ICI1bTBzIgogIG5vZGVzLWdjLWludGVydmFsOiAiNW0wcyIKICBza2lwLWNucC1zdGF0dXMtc3RhcnR1cC1jbGVhbjogImZhbHNlIgogICMgRGlzYWJsZSB0aGUgdXNhZ2Ugb2YgQ2lsaXVtRW5kcG9pbnQgQ1JECiAgZGlzYWJsZS1lbmRwb2ludC1jcmQ6ICJmYWxzZSIKCiAgIyBJZiB5b3Ugd2FudCB0byBydW4gY2lsaXVtIGluIGRlYnVnIG1vZGUgY2hhbmdlIHRoaXMgdmFsdWUgdG8gdHJ1ZQogIGRlYnVnOiAiZmFsc2UiCiAgIyBUaGUgYWdlbnQgY2FuIGJlIHB1dCBpbnRvIHRoZSBmb2xsb3dpbmcgdGhyZWUgcG9saWN5IGVuZm9yY2VtZW50IG1vZGVzCiAgIyBkZWZhdWx0LCBhbHdheXMgYW5kIG5ldmVyLgogICMgaHR0cHM6Ly9kb2NzLmNpbGl1bS5pby9lbi9sYXRlc3Qvc2VjdXJpdHkvcG9saWN5L2ludHJvLyNwb2xpY3ktZW5mb3JjZW1lbnQtbW9kZXMKICBlbmFibGUtcG9saWN5OiAiZGVmYXVsdCIKCiAgIyBFbmFibGUgSVB2NCBhZGRyZXNzaW5nLiBJZiBlbmFibGVkLCBhbGwgZW5kcG9pbnRzIGFyZSBhbGxvY2F0ZWQgYW4gSVB2NAogICMgYWRkcmVzcy4KICBlbmFibGUtaXB2NDogInRydWUiCgogICMgRW5hYmxlIElQdjYgYWRkcmVzc2luZy4gSWYgZW5hYmxlZCwgYWxsIGVuZHBvaW50cyBhcmUgYWxsb2NhdGVkIGFuIElQdjYKICAjIGFkZHJlc3MuCiAgZW5hYmxlLWlwdjY6ICJ0cnVlIgogICMgVXNlcnMgd2hvIHdpc2ggdG8gc3BlY2lmeSB0aGVpciBvd24gY3VzdG9tIENOSSBjb25maWd1cmF0aW9uIGZpbGUgbXVzdCBzZXQKICAjIGN1c3RvbS1jbmktY29uZiB0byAidHJ1ZSIsIG90aGVyd2lzZSBDaWxpdW0gbWF5IG92ZXJ3cml0ZSB0aGUgY29uZmlndXJhdGlvbi4KICBjdXN0b20tY25pLWNvbmY6ICJmYWxzZSIKICBlbmFibGUtYnBmLWNsb2NrLXByb2JlOiAidHJ1ZSIKICAjIElmIHlvdSB3YW50IGNpbGl1bSBtb25pdG9yIHRvIGFnZ3JlZ2F0ZSB0cmFjaW5nIGZvciBwYWNrZXRzLCBzZXQgdGhpcyBsZXZlbAogICMgdG8gImxvdyIsICJtZWRpdW0iLCBvciAibWF4aW11bSIuIFRoZSBoaWdoZXIgdGhlIGxldmVsLCB0aGUgbGVzcyBwYWNrZXRzCiAgIyB0aGF0IHdpbGwgYmUgc2VlbiBpbiBtb25pdG9yIG91dHB1dC4KICBtb25pdG9yLWFnZ3JlZ2F0aW9uOiBtZWRpdW0KCiAgIyBUaGUgbW9uaXRvciBhZ2dyZWdhdGlvbiBpbnRlcnZhbCBnb3Zlcm5zIHRoZSB0eXBpY2FsIHRpbWUgYmV0d2VlbiBtb25pdG9yCiAgIyBub3RpZmljYXRpb24gZXZlbnRzIGZvciBlYWNoIGFsbG93ZWQgY29ubmVjdGlvbi4KICAjCiAgIyBPbmx5IGVmZmVjdGl2ZSB3aGVuIG1vbml0b3IgYWdncmVnYXRpb24gaXMgc2V0IHRvICJtZWRpdW0iIG9yIGhpZ2hlci4KICBtb25pdG9yLWFnZ3JlZ2F0aW9uLWludGVydmFsOiAiNXMiCgogICMgVGhlIG1vbml0b3IgYWdncmVnYXRpb24gZmxhZ3MgZGV0ZXJtaW5lIHdoaWNoIFRDUCBmbGFncyB3aGljaCwgdXBvbiB0aGUKICAjIGZpcnN0IG9ic2VydmF0aW9uLCBjYXVzZSBtb25pdG9yIG5vdGlmaWNhdGlvbnMgdG8gYmUgZ2VuZXJhdGVkLgogICMKICAjIE9ubHkgZWZmZWN0aXZlIHdoZW4gbW9uaXRvciBhZ2dyZWdhdGlvbiBpcyBzZXQgdG8gIm1lZGl1bSIgb3IgaGlnaGVyLgogIG1vbml0b3ItYWdncmVnYXRpb24tZmxhZ3M6IGFsbAogICMgU3BlY2lmaWVzIHRoZSByYXRpbyAoMC4wLTEuMF0gb2YgdG90YWwgc3lzdGVtIG1lbW9yeSB0byB1c2UgZm9yIGR5bmFtaWMKICAjIHNpemluZyBvZiB0aGUgVENQIENULCBub24tVENQIENULCBOQVQgYW5kIHBvbGljeSBCUEYgbWFwcy4KICBicGYtbWFwLWR5bmFtaWMtc2l6ZS1yYXRpbzogIjAuMDAyNSIKICAjIGJwZi1wb2xpY3ktbWFwLW1heCBzcGVjaWZpZXMgdGhlIG1heGltdW0gbnVtYmVyIG9mIGVudHJpZXMgaW4gZW5kcG9pbnQKICAjIHBvbGljeSBtYXAgKHBlciBlbmRwb2ludCkKICBicGYtcG9saWN5LW1hcC1tYXg6ICIxNjM4NCIKICAjIGJwZi1sYi1tYXAtbWF4IHNwZWNpZmllcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgZW50cmllcyBpbiBicGYgbGIgc2VydmljZSwKICAjIGJhY2tlbmQgYW5kIGFmZmluaXR5IG1hcHMuCiAgYnBmLWxiLW1hcC1tYXg6ICI2NTUzNiIKICBicGYtbGItZXh0ZXJuYWwtY2x1c3RlcmlwOiAiZmFsc2UiCgogICMgUHJlLWFsbG9jYXRpb24gb2YgbWFwIGVudHJpZXMgYWxsb3dzIHBlci1wYWNrZXQgbGF0ZW5jeSB0byBiZSByZWR1Y2VkLCBhdAogICMgdGhlIGV4cGVuc2Ugb2YgdXAtZnJvbnQgbWVtb3J5IGFsbG9jYXRpb24gZm9yIHRoZSBlbnRyaWVzIGluIHRoZSBtYXBzLiBUaGUKICAjIGRlZmF1bHQgdmFsdWUgYmVsb3cgd2lsbCBtaW5pbWl6ZSBtZW1vcnkgdXNhZ2UgaW4gdGhlIGRlZmF1bHQgaW5zdGFsbGF0aW9uOwogICMgdXNlcnMgd2hvIGFyZSBzZW5zaXRpdmUgdG8gbGF0ZW5jeSBtYXkgY29uc2lkZXIgc2V0dGluZyB0aGlzIHRvICJ0cnVlIi4KICAjCiAgIyBUaGlzIG9wdGlvbiB3YXMgaW50cm9kdWNlZCBpbiBDaWxpdW0gMS40LiBDaWxpdW0gMS4zIGFuZCBlYXJsaWVyIGlnbm9yZQogICMgdGhpcyBvcHRpb24gYW5kIGJlaGF2ZSBhcyB0aG91Z2ggaXQgaXMgc2V0IHRvICJ0cnVlIi4KICAjCiAgIyBJZiB0aGlzIHZhbHVlIGlzIG1vZGlmaWVkLCB0aGVuIGR1cmluZyB0aGUgbmV4dCBDaWxpdW0gc3RhcnR1cCB0aGUgcmVzdG9yZQogICMgb2YgZXhpc3RpbmcgZW5kcG9pbnRzIGFuZCB0cmFja2luZyBvZiBvbmdvaW5nIGNvbm5lY3Rpb25zIG1heSBiZSBkaXNydXB0ZWQuCiAgIyBBcyBhIHJlc3VsdCwgcmVwbHkgcGFja2V0cyBtYXkgYmUgZHJvcHBlZCBhbmQgdGhlIGxvYWQtYmFsYW5jaW5nIGRlY2lzaW9ucwogICMgZm9yIGVzdGFibGlzaGVkIGNvbm5lY3Rpb25zIG1heSBjaGFuZ2UuCiAgIwogICMgSWYgdGhpcyBvcHRpb24gaXMgc2V0IHRvICJmYWxzZSIgZHVyaW5nIGFuIHVwZ3JhZGUgZnJvbSAxLjMgb3IgZWFybGllciB0bwogICMgMS40IG9yIGxhdGVyLCB0aGVuIGl0IG1heSBjYXVzZSBvbmUtdGltZSBkaXNydXB0aW9ucyBkdXJpbmcgdGhlIHVwZ3JhZGUuCiAgcHJlYWxsb2NhdGUtYnBmLW1hcHM6ICJmYWxzZSIKCiAgIyBSZWd1bGFyIGV4cHJlc3Npb24gbWF0Y2hpbmcgY29tcGF0aWJsZSBJc3RpbyBzaWRlY2FyIGlzdGlvLXByb3h5CiAgIyBjb250YWluZXIgaW1hZ2UgbmFtZXMKICBzaWRlY2FyLWlzdGlvLXByb3h5LWltYWdlOiAiY2lsaXVtL2lzdGlvX3Byb3h5IgoKICAjIE5hbWUgb2YgdGhlIGNsdXN0ZXIuIE9ubHkgcmVsZXZhbnQgd2hlbiBidWlsZGluZyBhIG1lc2ggb2YgY2x1c3RlcnMuCiAgY2x1c3Rlci1uYW1lOiBjaG9uZ3VzCiAgIyBVbmlxdWUgSUQgb2YgdGhlIGNsdXN0ZXIuIE11c3QgYmUgdW5pcXVlIGFjcm9zcyBhbGwgY29ubmV0ZWQgY2x1c3RlcnMgYW5kCiAgIyBpbiB0aGUgcmFuZ2Ugb2YgMSBhbmQgMjU1LiBPbmx5IHJlbGV2YW50IHdoZW4gYnVpbGRpbmcgYSBtZXNoIG9mIGNsdXN0ZXJzLgogIGNsdXN0ZXItaWQ6ICIxIgoKICAjIEVuY2Fwc3VsYXRpb24gbW9kZSBmb3IgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIG5vZGVzCiAgIyBQb3NzaWJsZSB2YWx1ZXM6CiAgIyAgIC0gZGlzYWJsZWQKICAjICAgLSB2eGxhbiAoZGVmYXVsdCkKICAjICAgLSBnZW5ldmUKICB0dW5uZWw6ICJkaXNhYmxlZCIKCgogICMgRW5hYmxlcyBMNyBwcm94eSBmb3IgTDcgcG9saWN5IGVuZm9yY2VtZW50IGFuZCB2aXNpYmlsaXR5CiAgZW5hYmxlLWw3LXByb3h5OiAidHJ1ZSIKCiAgZW5hYmxlLWlwdjQtbWFzcXVlcmFkZTogInRydWUiCiAgZW5hYmxlLWlwdjYtYmlnLXRjcDogImZhbHNlIgogIGVuYWJsZS1pcHY2LW1hc3F1ZXJhZGU6ICJ0cnVlIgoKICBlbmFibGUteHQtc29ja2V0LWZhbGxiYWNrOiAidHJ1ZSIKICBpbnN0YWxsLWlwdGFibGVzLXJ1bGVzOiAidHJ1ZSIKICBpbnN0YWxsLW5vLWNvbm50cmFjay1pcHRhYmxlcy1ydWxlczogImZhbHNlIgoKICBhdXRvLWRpcmVjdC1ub2RlLXJvdXRlczogInRydWUiCiAgZW5hYmxlLWxvY2FsLXJlZGlyZWN0LXBvbGljeTogInRydWUiCiAgaXB2NC1uYXRpdmUtcm91dGluZy1jaWRyOiAxMC40Mi4wLjAvMTYKICBpcHY2LW5hdGl2ZS1yb3V0aW5nLWNpZHI6IGZkMDA6MTA6NDI6Oi80OAoKICBrdWJlLXByb3h5LXJlcGxhY2VtZW50OiAic3RyaWN0IgogIGt1YmUtcHJveHktcmVwbGFjZW1lbnQtaGVhbHRoei1iaW5kLWFkZHJlc3M6ICIwLjAuMC4wOjEwMjU2IgogIGJwZi1sYi1zb2NrOiAiZmFsc2UiCiAgZW5hYmxlLWhlYWx0aC1jaGVjay1ub2RlcG9ydDogInRydWUiCiAgbm9kZS1wb3J0LWJpbmQtcHJvdGVjdGlvbjogInRydWUiCiAgZW5hYmxlLWF1dG8tcHJvdGVjdC1ub2RlLXBvcnQtcmFuZ2U6ICJ0cnVlIgogIGJwZi1sYi1tb2RlOiAiZHNyIgogIGJwZi1sYi1hbGdvcml0aG06ICJtYWdsZXYiCiAgZW5hYmxlLXN2Yy1zb3VyY2UtcmFuZ2UtY2hlY2s6ICJ0cnVlIgogIGVuYWJsZS1sMi1uZWlnaC1kaXNjb3Zlcnk6ICJ0cnVlIgogIGFycGluZy1yZWZyZXNoLXBlcmlvZDogIjMwcyIKICBlbmFibGUtZW5kcG9pbnQtcm91dGVzOiAidHJ1ZSIKICBlbmFibGUtZW5kcG9pbnQtaGVhbHRoLWNoZWNraW5nOiAidHJ1ZSIKICBlbmFibGUtaGVhbHRoLWNoZWNraW5nOiAidHJ1ZSIKICBlbmFibGUtd2VsbC1rbm93bi1pZGVudGl0aWVzOiAiZmFsc2UiCiAgZW5hYmxlLXJlbW90ZS1ub2RlLWlkZW50aXR5OiAidHJ1ZSIKICBzeW5jaHJvbml6ZS1rOHMtbm9kZXM6ICJ0cnVlIgogIG9wZXJhdG9yLWFwaS1zZXJ2ZS1hZGRyOiAiMTI3LjAuMC4xOjkyMzQiCiAgaXBhbTogImt1YmVybmV0ZXMiCiAgZGlzYWJsZS1jbnAtc3RhdHVzLXVwZGF0ZXM6ICJ0cnVlIgogIGVuYWJsZS12dGVwOiAiZmFsc2UiCiAgdnRlcC1lbmRwb2ludDogIiIKICB2dGVwLWNpZHI6ICIiCiAgdnRlcC1tYXNrOiAiIgogIHZ0ZXAtbWFjOiAiIgogIGVuYWJsZS1iZ3AtY29udHJvbC1wbGFuZTogInRydWUiCiAgYnBmLXJvb3Q6ICIvc3lzL2ZzL2JwZiIKICBjZ3JvdXAtcm9vdDogIi9zeXMvZnMvY2dyb3VwIgogIGVuYWJsZS1rOHMtdGVybWluYXRpbmctZW5kcG9pbnQ6ICJ0cnVlIgogIGVuYWJsZS1zY3RwOiAiZmFsc2UiCiAgcmVtb3ZlLWNpbGl1bS1ub2RlLXRhaW50czogInRydWUiCiAgc2V0LWNpbGl1bS1pcy11cC1jb25kaXRpb246ICJ0cnVlIgogIHVubWFuYWdlZC1wb2Qtd2F0Y2hlci1pbnRlcnZhbDogIjE1IgogIHRvZnFkbnMtZG5zLXJlamVjdC1yZXNwb25zZS1jb2RlOiAicmVmdXNlZCIKICB0b2ZxZG5zLWVuYWJsZS1kbnMtY29tcHJlc3Npb246ICJ0cnVlIgogIHRvZnFkbnMtZW5kcG9pbnQtbWF4LWlwLXBlci1ob3N0bmFtZTogIjUwIgogIHRvZnFkbnMtaWRsZS1jb25uZWN0aW9uLWdyYWNlLXBlcmlvZDogIjBzIgogIHRvZnFkbnMtbWF4LWRlZmVycmVkLWNvbm5lY3Rpb24tZGVsZXRlczogIjEwMDAwIgogIHRvZnFkbnMtbWluLXR0bDogIjM2MDAiCiAgdG9mcWRucy1wcm94eS1yZXNwb25zZS1tYXgtZGVsYXk6ICIxMDBtcyIKICBhZ2VudC1ub3QtcmVhZHktdGFpbnQta2V5OiAibm9kZS5jaWxpdW0uaW8vYWdlbnQtbm90LXJlYWR5IgotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLWFnZW50L2NsdXN0ZXJyb2xlLnlhbWwKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZQptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0KcnVsZXM6Ci0gYXBpR3JvdXBzOgogIC0gbmV0d29ya2luZy5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBuZXR3b3JrcG9saWNpZXMKICB2ZXJiczoKICAtIGdldAogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSBkaXNjb3ZlcnkuazhzLmlvCiAgcmVzb3VyY2VzOgogIC0gZW5kcG9pbnRzbGljZXMKICB2ZXJiczoKICAtIGdldAogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlczoKICAtIG5hbWVzcGFjZXMKICAtIHNlcnZpY2VzCiAgLSBwb2RzCiAgLSBlbmRwb2ludHMKICAtIG5vZGVzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zCiAgdmVyYnM6CiAgLSBsaXN0CiAgLSB3YXRjaAogICMgVGhpcyBpcyB1c2VkIHdoZW4gdmFsaWRhdGluZyBwb2xpY2llcyBpbiBwcmVmbGlnaHQuIFRoaXMgd2lsbCBuZWVkIHRvIHN0YXkKICAjIHVudGlsIHdlIGZpZ3VyZSBvdXQgaG93IHRvIGF2b2lkICJnZXQiIGluc2lkZSB0aGUgcHJlZmxpZ2h0LCBhbmQgdGhlbgogICMgc2hvdWxkIGJlIHJlbW92ZWQgaWRlYWxseS4KICAtIGdldAotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWxvYWRiYWxhbmNlcmlwcG9vbHMKICAtIGNpbGl1bWJncHBlZXJpbmdwb2xpY2llcwogIC0gY2lsaXVtY2x1c3RlcndpZGVlbnZveWNvbmZpZ3MKICAtIGNpbGl1bWNsdXN0ZXJ3aWRlbmV0d29ya3BvbGljaWVzCiAgLSBjaWxpdW1lZ3Jlc3NnYXRld2F5cG9saWNpZXMKICAtIGNpbGl1bWVncmVzc25hdHBvbGljaWVzCiAgLSBjaWxpdW1lbmRwb2ludHMKICAtIGNpbGl1bWVuZHBvaW50c2xpY2VzCiAgLSBjaWxpdW1lbnZveWNvbmZpZ3MKICAtIGNpbGl1bWlkZW50aXRpZXMKICAtIGNpbGl1bWxvY2FscmVkaXJlY3Rwb2xpY2llcwogIC0gY2lsaXVtbmV0d29ya3BvbGljaWVzCiAgLSBjaWxpdW1ub2RlcwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1pZGVudGl0aWVzCiAgLSBjaWxpdW1lbmRwb2ludHMKICAtIGNpbGl1bW5vZGVzCiAgdmVyYnM6CiAgLSBjcmVhdGUKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICAjIFRvIHN5bmNocm9uaXplIGdhcmJhZ2UgY29sbGVjdGlvbiBvZiBzdWNoIHJlc291cmNlcwogIHJlc291cmNlczoKICAtIGNpbGl1bWlkZW50aXRpZXMKICB2ZXJiczoKICAtIHVwZGF0ZQotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWVuZHBvaW50cwogIHZlcmJzOgogIC0gZGVsZXRlCiAgLSBnZXQKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1ub2RlcwogIC0gY2lsaXVtbm9kZXMvc3RhdHVzCiAgdmVyYnM6CiAgLSBnZXQKICAtIHVwZGF0ZQotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bW5ldHdvcmtwb2xpY2llcy9zdGF0dXMKICAtIGNpbGl1bWNsdXN0ZXJ3aWRlbmV0d29ya3BvbGljaWVzL3N0YXR1cwogIC0gY2lsaXVtZW5kcG9pbnRzL3N0YXR1cwogIC0gY2lsaXVtZW5kcG9pbnRzCiAgdmVyYnM6CiAgLSBwYXRjaAotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLW9wZXJhdG9yL2NsdXN0ZXJyb2xlLnlhbWwKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZQptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKcnVsZXM6Ci0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgLSBwb2RzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCiAgIyB0byBhdXRvbWF0aWNhbGx5IGRlbGV0ZSBbY29yZXxrdWJlXWRucyBwb2RzIHNvIHRoYXQgYXJlIHN0YXJ0aW5nIHRvIGJlaW5nCiAgIyBtYW5hZ2VkIGJ5IENpbGl1bQogIC0gZGVsZXRlCi0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgLSBub2RlcwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlczoKICAjIFRvIHJlbW92ZSBub2RlIHRhaW50cwogIC0gbm9kZXMKICAjIFRvIHNldCBOZXR3b3JrVW5hdmFpbGFibGUgZmFsc2Ugb24gc3RhcnR1cAogIC0gbm9kZXMvc3RhdHVzCiAgdmVyYnM6CiAgLSBwYXRjaAotIGFwaUdyb3VwczoKICAtIGRpc2NvdmVyeS5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBlbmRwb2ludHNsaWNlcwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtICIiCiAgcmVzb3VyY2VzOgogICMgdG8gcGVyZm9ybSBMQiBJUCBhbGxvY2F0aW9uIGZvciBCR1AKICAtIHNlcnZpY2VzL3N0YXR1cwogIHZlcmJzOgogIC0gdXBkYXRlCiAgLSBwYXRjaAotIGFwaUdyb3VwczoKICAtICIiCiAgcmVzb3VyY2VzOgogICMgdG8gY2hlY2sgYXBpc2VydmVyIGNvbm5lY3Rpdml0eQogIC0gbmFtZXNwYWNlcwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtICIiCiAgcmVzb3VyY2VzOgogICMgdG8gcGVyZm9ybSB0aGUgdHJhbnNsYXRpb24gb2YgYSBDTlAgdGhhdCBjb250YWlucyBgVG9Hcm91cGAgdG8gaXRzIGVuZHBvaW50cwogIC0gc2VydmljZXMKICAtIGVuZHBvaW50cwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bW5ldHdvcmtwb2xpY2llcwogIC0gY2lsaXVtY2x1c3RlcndpZGVuZXR3b3JrcG9saWNpZXMKICB2ZXJiczoKICAjIENyZWF0ZSBhdXRvLWdlbmVyYXRlZCBDTlBzIGFuZCBDQ05QcyBmcm9tIFBvbGljaWVzIHRoYXQgaGF2ZSAndG9Hcm91cHMnCiAgLSBjcmVhdGUKICAtIHVwZGF0ZQogIC0gZGVsZXRlY29sbGVjdGlvbgogICMgVG8gdXBkYXRlIHRoZSBzdGF0dXMgb2YgdGhlIENOUHMgYW5kIENDTlBzCiAgLSBwYXRjaAogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bW5ldHdvcmtwb2xpY2llcy9zdGF0dXMKICAtIGNpbGl1bWNsdXN0ZXJ3aWRlbmV0d29ya3BvbGljaWVzL3N0YXR1cwogIHZlcmJzOgogICMgVXBkYXRlIHRoZSBhdXRvLWdlbmVyYXRlZCBDTlBzIGFuZCBDQ05QcyBzdGF0dXMuCiAgLSBwYXRjaAogIC0gdXBkYXRlCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtZW5kcG9pbnRzCiAgLSBjaWxpdW1pZGVudGl0aWVzCiAgdmVyYnM6CiAgIyBUbyBwZXJmb3JtIGdhcmJhZ2UgY29sbGVjdGlvbiBvZiBzdWNoIHJlc291cmNlcwogIC0gZGVsZXRlCiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWlkZW50aXRpZXMKICB2ZXJiczoKICAjIFRvIHN5bmNocm9uaXplIGdhcmJhZ2UgY29sbGVjdGlvbiBvZiBzdWNoIHJlc291cmNlcwogIC0gdXBkYXRlCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtbm9kZXMKICB2ZXJiczoKICAtIGNyZWF0ZQogIC0gdXBkYXRlCiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCiAgICAjIFRvIHBlcmZvcm0gQ2lsaXVtTm9kZSBnYXJiYWdlIGNvbGxlY3RvcgogIC0gZGVsZXRlCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtbm9kZXMvc3RhdHVzCiAgdmVyYnM6CiAgLSB1cGRhdGUKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1lbmRwb2ludHNsaWNlcwogIC0gY2lsaXVtZW52b3ljb25maWdzCiAgdmVyYnM6CiAgLSBjcmVhdGUKICAtIHVwZGF0ZQogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAogIC0gZGVsZXRlCiAgLSBwYXRjaAotIGFwaUdyb3VwczoKICAtIGFwaWV4dGVuc2lvbnMuazhzLmlvCiAgcmVzb3VyY2VzOgogIC0gY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucwogIHZlcmJzOgogIC0gY3JlYXRlCiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zCiAgdmVyYnM6CiAgLSB1cGRhdGUKICByZXNvdXJjZU5hbWVzOgogIC0gY2lsaXVtbG9hZGJhbGFuY2VyaXBwb29scy5jaWxpdW0uaW8KICAtIGNpbGl1bWJncHBlZXJpbmdwb2xpY2llcy5jaWxpdW0uaW8KICAtIGNpbGl1bWNsdXN0ZXJ3aWRlZW52b3ljb25maWdzLmNpbGl1bS5pbwogIC0gY2lsaXVtY2x1c3RlcndpZGVuZXR3b3JrcG9saWNpZXMuY2lsaXVtLmlvCiAgLSBjaWxpdW1lZ3Jlc3NnYXRld2F5cG9saWNpZXMuY2lsaXVtLmlvCiAgLSBjaWxpdW1lZ3Jlc3NuYXRwb2xpY2llcy5jaWxpdW0uaW8KICAtIGNpbGl1bWVuZHBvaW50cy5jaWxpdW0uaW8KICAtIGNpbGl1bWVuZHBvaW50c2xpY2VzLmNpbGl1bS5pbwogIC0gY2lsaXVtZW52b3ljb25maWdzLmNpbGl1bS5pbwogIC0gY2lsaXVtZXh0ZXJuYWx3b3JrbG9hZHMuY2lsaXVtLmlvCiAgLSBjaWxpdW1pZGVudGl0aWVzLmNpbGl1bS5pbwogIC0gY2lsaXVtbG9jYWxyZWRpcmVjdHBvbGljaWVzLmNpbGl1bS5pbwogIC0gY2lsaXVtbmV0d29ya3BvbGljaWVzLmNpbGl1bS5pbwogIC0gY2lsaXVtbm9kZXMuY2lsaXVtLmlvCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtbG9hZGJhbGFuY2VyaXBwb29scwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWxvYWRiYWxhbmNlcmlwcG9vbHMvc3RhdHVzCiAgdmVyYnM6CiAgLSBwYXRjaAojIEZvciBjaWxpdW0tb3BlcmF0b3IgcnVubmluZyBpbiBIQSBtb2RlLgojCiMgQ2lsaXVtIG9wZXJhdG9yIHJ1bm5pbmcgaW4gSEEgbW9kZSByZXF1aXJlcyB0aGUgdXNlIG9mIFJlc291cmNlTG9jayBmb3IgTGVhZGVyIEVsZWN0aW9uCiMgYmV0d2VlbiBtdWx0aXBsZSBydW5uaW5nIGluc3RhbmNlcy4KIyBUaGUgcHJlZmVycmVkIHdheSBvZiBkb2luZyB0aGlzIGlzIHRvIHVzZSBMZWFzZXNSZXNvdXJjZUxvY2sgYXMgZWRpdHMgdG8gTGVhc2VzIGFyZSBsZXNzCiMgY29tbW9uIGFuZCBmZXdlciBvYmplY3RzIGluIHRoZSBjbHVzdGVyIHdhdGNoICJhbGwgTGVhc2VzIi4KLSBhcGlHcm91cHM6CiAgLSBjb29yZGluYXRpb24uazhzLmlvCiAgcmVzb3VyY2VzOgogIC0gbGVhc2VzCiAgdmVyYnM6CiAgLSBjcmVhdGUKICAtIGdldAogIC0gdXBkYXRlCi0tLQojIFNvdXJjZTogY2lsaXVtL3RlbXBsYXRlcy9jaWxpdW0tYWdlbnQvY2x1c3RlcnJvbGViaW5kaW5nLnlhbWwKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKbWV0YWRhdGE6CiAgbmFtZTogY2lsaXVtCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IGNpbGl1bQpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6ICJjaWxpdW0iCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLW9wZXJhdG9yL2NsdXN0ZXJyb2xlYmluZGluZy55YW1sCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCm1ldGFkYXRhOgogIG5hbWU6IGNpbGl1bS1vcGVyYXRvcgpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogQ2x1c3RlclJvbGUKICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKc3ViamVjdHM6Ci0ga2luZDogU2VydmljZUFjY291bnQKICBuYW1lOiAiY2lsaXVtLW9wZXJhdG9yIgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KLS0tCiMgU291cmNlOiBjaWxpdW0vdGVtcGxhdGVzL2NpbGl1bS1hZ2VudC9kYWVtb25zZXQueWFtbAphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0KICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgazhzLWFwcDogY2lsaXVtCiAgICBhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mOiBjaWxpdW0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGNpbGl1bS1hZ2VudApzcGVjOgogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIGs4cy1hcHA6IGNpbGl1bQogIHVwZGF0ZVN0cmF0ZWd5OgogICAgcm9sbGluZ1VwZGF0ZToKICAgICAgbWF4VW5hdmFpbGFibGU6IDIKICAgIHR5cGU6IFJvbGxpbmdVcGRhdGUKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBhbm5vdGF0aW9uczoKICAgICAgICAjIGVuc3VyZSBwb2RzIHJvbGwgd2hlbiBjb25maWdtYXAgdXBkYXRlcwogICAgICAgIGNpbGl1bS5pby9jaWxpdW0tY29uZmlnbWFwLWNoZWNrc3VtOiAiYmE0OTllZDJlYzBiNDAzYjJhODMwN2Y4ZjJjNWIxODk3MzNjNmViNDQ5ZjQ2YzY5MDg4YmIzNmJlNDJhMDE3NiIKICAgICAgbGFiZWxzOgogICAgICAgIGs4cy1hcHA6IGNpbGl1bQogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGNpbGl1bS1hZ2VudAogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3BhcnQtb2Y6IGNpbGl1bQogICAgc3BlYzoKICAgICAgY29udGFpbmVyczoKICAgICAgLSBuYW1lOiBjaWxpdW0tYWdlbnQKICAgICAgICBpbWFnZTogInF1YXkuaW8vY2lsaXVtL2NpbGl1bS1jaTpsYXRlc3QiCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBBbHdheXMKICAgICAgICBjb21tYW5kOgogICAgICAgIC0gY2lsaXVtLWFnZW50CiAgICAgICAgYXJnczoKICAgICAgICAtIC0tY29uZmlnLWRpcj0vdG1wL2NpbGl1bS9jb25maWctbWFwCiAgICAgICAgc3RhcnR1cFByb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgaG9zdDogIjEyNy4wLjAuMSIKICAgICAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICAgICAgcG9ydDogOTg3OQogICAgICAgICAgICBzY2hlbWU6IEhUVFAKICAgICAgICAgICAgaHR0cEhlYWRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogImJyaWVmIgogICAgICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDEwNQogICAgICAgICAgcGVyaW9kU2Vjb25kczogMgogICAgICAgICAgc3VjY2Vzc1RocmVzaG9sZDogMQogICAgICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgICAgICBodHRwR2V0OgogICAgICAgICAgICBob3N0OiAiMTI3LjAuMC4xIgogICAgICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgICAgICBwb3J0OiA5ODc5CiAgICAgICAgICAgIHNjaGVtZTogSFRUUAogICAgICAgICAgICBodHRwSGVhZGVyczoKICAgICAgICAgICAgLSBuYW1lOiAiYnJpZWYiCiAgICAgICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgICAgcGVyaW9kU2Vjb25kczogMzAKICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IDEKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDEwCiAgICAgICAgICB0aW1lb3V0U2Vjb25kczogNQogICAgICAgIHJlYWRpbmVzc1Byb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgaG9zdDogIjEyNy4wLjAuMSIKICAgICAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICAgICAgcG9ydDogOTg3OQogICAgICAgICAgICBzY2hlbWU6IEhUVFAKICAgICAgICAgICAgaHR0cEhlYWRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogImJyaWVmIgogICAgICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAgIHBlcmlvZFNlY29uZHM6IDMwCiAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiAzCiAgICAgICAgICB0aW1lb3V0U2Vjb25kczogNQogICAgICAgIGVudjoKICAgICAgICAtIG5hbWU6IEs4U19OT0RFX05BTUUKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgZmllbGRSZWY6CiAgICAgICAgICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAgICAgICAgICBmaWVsZFBhdGg6IHNwZWMubm9kZU5hbWUKICAgICAgICAtIG5hbWU6IENJTElVTV9LOFNfTkFNRVNQQUNFCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgICAgICAgICAgZmllbGRQYXRoOiBtZXRhZGF0YS5uYW1lc3BhY2UKICAgICAgICAtIG5hbWU6IENJTElVTV9DTFVTVEVSTUVTSF9DT05GSUcKICAgICAgICAgIHZhbHVlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvCiAgICAgICAgLSBuYW1lOiBDSUxJVU1fQ05JX0NIQUlOSU5HX01PREUKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgY29uZmlnTWFwS2V5UmVmOgogICAgICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgICAgICAgICBrZXk6IGNuaS1jaGFpbmluZy1tb2RlCiAgICAgICAgICAgICAgb3B0aW9uYWw6IHRydWUKICAgICAgICAtIG5hbWU6IENJTElVTV9DVVNUT01fQ05JX0NPTkYKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgY29uZmlnTWFwS2V5UmVmOgogICAgICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgICAgICAgICBrZXk6IGN1c3RvbS1jbmktY29uZgogICAgICAgICAgICAgIG9wdGlvbmFsOiB0cnVlCiAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX1NFUlZJQ0VfSE9TVAogICAgICAgICAgdmFsdWU6ICIxNzIuMTguMi4yNTIiCiAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX1NFUlZJQ0VfUE9SVAogICAgICAgICAgdmFsdWU6ICI2NDQzIgogICAgICAgIGxpZmVjeWNsZToKICAgICAgICAgIHBvc3RTdGFydDoKICAgICAgICAgICAgZXhlYzoKICAgICAgICAgICAgICBjb21tYW5kOgogICAgICAgICAgICAgIC0gIi9jbmktaW5zdGFsbC5zaCIKICAgICAgICAgICAgICAtICItLWVuYWJsZS1kZWJ1Zz1mYWxzZSIKICAgICAgICAgICAgICAtICItLWNuaS1leGNsdXNpdmU9dHJ1ZSIKICAgICAgICAgICAgICAtICItLWxvZy1maWxlPS92YXIvcnVuL2NpbGl1bS9jaWxpdW0tY25pLmxvZyIKICAgICAgICAgIHByZVN0b3A6CiAgICAgICAgICAgIGV4ZWM6CiAgICAgICAgICAgICAgY29tbWFuZDoKICAgICAgICAgICAgICAtIC9jbmktdW5pbnN0YWxsLnNoCiAgICAgICAgc2VjdXJpdHlDb250ZXh0OgogICAgICAgICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgICAgIHRlcm1pbmF0aW9uTWVzc2FnZVBvbGljeTogRmFsbGJhY2tUb0xvZ3NPbkVycm9yCiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgICMgUmVxdWlyZWQgdG8gcnVuICdicGZ0b29sIC1qIGZlYXR1cmUgcHJvYmUnCiAgICAgICAgIyBkdXJpbmcga2VybmVsIGZlYXR1cmUgcHJvYmluZwogICAgICAgIC0gbW91bnRQYXRoOiAvYm9vdAogICAgICAgICAgbmFtZTogaG9zdC1ib290CiAgICAgICAgICByZWFkT25seTogdHJ1ZQogICAgICAgIC0gbmFtZTogYnBmLW1hcHMKICAgICAgICAgIG1vdW50UGF0aDogL3N5cy9mcy9icGYKICAgICAgICAgIG1vdW50UHJvcGFnYXRpb246IEJpZGlyZWN0aW9uYWwKICAgICAgICAjIENoZWNrIGZvciBkdXBsaWNhdGUgbW91bnRzIGJlZm9yZSBtb3VudGluZwogICAgICAgIC0gbmFtZTogY2lsaXVtLWNncm91cAogICAgICAgICAgbW91bnRQYXRoOiAvc3lzL2ZzL2Nncm91cAogICAgICAgIC0gbmFtZTogY2lsaXVtLXJ1bgogICAgICAgICAgbW91bnRQYXRoOiAvdmFyL3J1bi9jaWxpdW0KICAgICAgICAtIG5hbWU6IGNuaS1wYXRoCiAgICAgICAgICBtb3VudFBhdGg6IC9ob3N0L29wdC9jbmkvYmluCiAgICAgICAgLSBuYW1lOiBldGMtY25pLW5ldGQKICAgICAgICAgIG1vdW50UGF0aDogL2hvc3QvZXRjL2NuaS9uZXQuZAogICAgICAgIC0gbmFtZTogY2x1c3Rlcm1lc2gtc2VjcmV0cwogICAgICAgICAgbW91bnRQYXRoOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gKICAgICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgICAgLSBuYW1lOiBjaWxpdW0tY29uZmlnLXBhdGgKICAgICAgICAgIG1vdW50UGF0aDogL3RtcC9jaWxpdW0vY29uZmlnLW1hcAogICAgICAgICAgcmVhZE9ubHk6IHRydWUKICAgICAgICAgICMgTmVlZGVkIHRvIGJlIGFibGUgdG8gbG9hZCBrZXJuZWwgbW9kdWxlcwogICAgICAgIC0gbmFtZTogbGliLW1vZHVsZXMKICAgICAgICAgIG1vdW50UGF0aDogL2xpYi9tb2R1bGVzCiAgICAgICAgICByZWFkT25seTogdHJ1ZQogICAgICAgIC0gbmFtZTogeHRhYmxlcy1sb2NrCiAgICAgICAgICBtb3VudFBhdGg6IC9ydW4veHRhYmxlcy5sb2NrCiAgICAgIGluaXRDb250YWluZXJzOgogICAgICAtIG5hbWU6IGNsZWFuLWNpbGl1bS1zdGF0ZQogICAgICAgIGltYWdlOiAicXVheS5pby9jaWxpdW0vY2lsaXVtLWNpOmxhdGVzdCIKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIGNvbW1hbmQ6CiAgICAgICAgLSAvaW5pdC1jb250YWluZXIuc2gKICAgICAgICBlbnY6CiAgICAgICAgLSBuYW1lOiBDSUxJVU1fQUxMX1NUQVRFCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGNvbmZpZ01hcEtleVJlZjoKICAgICAgICAgICAgICBuYW1lOiBjaWxpdW0tY29uZmlnCiAgICAgICAgICAgICAga2V5OiBjbGVhbi1jaWxpdW0tc3RhdGUKICAgICAgICAgICAgICBvcHRpb25hbDogdHJ1ZQogICAgICAgIC0gbmFtZTogQ0lMSVVNX0JQRl9TVEFURQogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBjb25maWdNYXBLZXlSZWY6CiAgICAgICAgICAgICAgbmFtZTogY2lsaXVtLWNvbmZpZwogICAgICAgICAgICAgIGtleTogY2xlYW4tY2lsaXVtLWJwZi1zdGF0ZQogICAgICAgICAgICAgIG9wdGlvbmFsOiB0cnVlCiAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX1NFUlZJQ0VfSE9TVAogICAgICAgICAgdmFsdWU6ICIxNzIuMTguMi4yNTIiCiAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX1NFUlZJQ0VfUE9SVAogICAgICAgICAgdmFsdWU6ICI2NDQzIgogICAgICAgIHRlcm1pbmF0aW9uTWVzc2FnZVBvbGljeTogRmFsbGJhY2tUb0xvZ3NPbkVycm9yCiAgICAgICAgc2VjdXJpdHlDb250ZXh0OgogICAgICAgICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgICAgIHZvbHVtZU1vdW50czoKICAgICAgICAtIG5hbWU6IGJwZi1tYXBzCiAgICAgICAgICBtb3VudFBhdGg6IC9zeXMvZnMvYnBmCiAgICAgICAgICAjIFJlcXVpcmVkIHRvIG1vdW50IGNncm91cCBmaWxlc3lzdGVtIGZyb20gdGhlIGhvc3QgdG8gY2lsaXVtIGFnZW50IHBvZAogICAgICAgIC0gbmFtZTogY2lsaXVtLWNncm91cAogICAgICAgICAgbW91bnRQYXRoOiAvc3lzL2ZzL2Nncm91cAogICAgICAgICAgbW91bnRQcm9wYWdhdGlvbjogSG9zdFRvQ29udGFpbmVyCiAgICAgICAgLSBuYW1lOiBjaWxpdW0tcnVuCiAgICAgICAgICBtb3VudFBhdGg6IC92YXIvcnVuL2NpbGl1bQogICAgICAgIHJlc291cmNlczoKICAgICAgICAgIHJlcXVlc3RzOgogICAgICAgICAgICBjcHU6IDEwMG0KICAgICAgICAgICAgbWVtb3J5OiAxMDBNaSAjIHdhaXQtZm9yLWt1YmUtcHJveHkKICAgICAgcmVzdGFydFBvbGljeTogQWx3YXlzCiAgICAgIHByaW9yaXR5Q2xhc3NOYW1lOiBzeXN0ZW0tbm9kZS1jcml0aWNhbAogICAgICBzZXJ2aWNlQWNjb3VudDogImNpbGl1bSIKICAgICAgc2VydmljZUFjY291bnROYW1lOiAiY2lsaXVtIgogICAgICB0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kczogMQogICAgICBob3N0TmV0d29yazogdHJ1ZQogICAgICBhZmZpbml0eToKICAgICAgICBwb2RBbnRpQWZmaW5pdHk6CiAgICAgICAgICByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uOgogICAgICAgICAgLSBsYWJlbFNlbGVjdG9yOgogICAgICAgICAgICAgIG1hdGNoTGFiZWxzOgogICAgICAgICAgICAgICAgazhzLWFwcDogY2lsaXVtCiAgICAgICAgICAgIHRvcG9sb2d5S2V5OiBrdWJlcm5ldGVzLmlvL2hvc3RuYW1lCiAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICBrdWJlcm5ldGVzLmlvL29zOiBsaW51eAogICAgICB0b2xlcmF0aW9uczoKICAgICAgICAtIG9wZXJhdG9yOiBFeGlzdHMKICAgICAgdm9sdW1lczoKICAgICAgICAjIFRvIGtlZXAgc3RhdGUgYmV0d2VlbiByZXN0YXJ0cyAvIHVwZ3JhZGVzCiAgICAgIC0gbmFtZTogY2lsaXVtLXJ1bgogICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL3Zhci9ydW4vY2lsaXVtCiAgICAgICAgICB0eXBlOiBEaXJlY3RvcnlPckNyZWF0ZQogICAgICAgICMgVG8ga2VlcCBzdGF0ZSBiZXR3ZWVuIHJlc3RhcnRzIC8gdXBncmFkZXMgZm9yIGJwZiBtYXBzCiAgICAgIC0gbmFtZTogYnBmLW1hcHMKICAgICAgICBob3N0UGF0aDoKICAgICAgICAgIHBhdGg6IC9zeXMvZnMvYnBmCiAgICAgICAgICB0eXBlOiBEaXJlY3RvcnlPckNyZWF0ZQogICAgICAjIFRvIGtlZXAgc3RhdGUgYmV0d2VlbiByZXN0YXJ0cyAvIHVwZ3JhZGVzIGZvciBjZ3JvdXAyIGZpbGVzeXN0ZW0KICAgICAgLSBuYW1lOiBjaWxpdW0tY2dyb3VwCiAgICAgICAgaG9zdFBhdGg6CiAgICAgICAgICBwYXRoOiAvc3lzL2ZzL2Nncm91cAogICAgICAgICAgdHlwZTogRGlyZWN0b3J5T3JDcmVhdGUKICAgICAgIyBUbyBpbnN0YWxsIGNpbGl1bSBjbmkgcGx1Z2luIGluIHRoZSBob3N0CiAgICAgIC0gbmFtZTogY25pLXBhdGgKICAgICAgICBob3N0UGF0aDoKICAgICAgICAgIHBhdGg6ICAvb3B0L2NuaS9iaW4KICAgICAgICAgIHR5cGU6IERpcmVjdG9yeU9yQ3JlYXRlCiAgICAgICAgIyBUbyBpbnN0YWxsIGNpbGl1bSBjbmkgY29uZmlndXJhdGlvbiBpbiB0aGUgaG9zdAogICAgICAtIG5hbWU6IGV0Yy1jbmktbmV0ZAogICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL2V0Yy9jbmkvbmV0LmQKICAgICAgICAgIHR5cGU6IERpcmVjdG9yeU9yQ3JlYXRlCiAgICAgICAgIyBUbyBiZSBhYmxlIHRvIGxvYWQga2VybmVsIG1vZHVsZXMKICAgICAgLSBuYW1lOiBsaWItbW9kdWxlcwogICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL2xpYi9tb2R1bGVzCiAgICAgICAgIyBUbyBhY2Nlc3MgaXB0YWJsZXMgY29uY3VycmVudGx5IHdpdGggb3RoZXIgcHJvY2Vzc2VzIChlLmcuIGt1YmUtcHJveHkpCiAgICAgIC0gbmFtZTogeHRhYmxlcy1sb2NrCiAgICAgICAgaG9zdFBhdGg6CiAgICAgICAgICBwYXRoOiAvcnVuL3h0YWJsZXMubG9jawogICAgICAgICAgdHlwZTogRmlsZU9yQ3JlYXRlCiAgICAgICAgIyBUbyByZWFkIHRoZSBjbHVzdGVybWVzaCBjb25maWd1cmF0aW9uCiAgICAgIC0gbmFtZTogY2x1c3Rlcm1lc2gtc2VjcmV0cwogICAgICAgIHNlY3JldDoKICAgICAgICAgIHNlY3JldE5hbWU6IGNpbGl1bS1jbHVzdGVybWVzaAogICAgICAgICAgIyBub3RlOiB0aGUgbGVhZGluZyB6ZXJvIG1lYW5zIHRoaXMgbnVtYmVyIGlzIGluIG9jdGFsIHJlcHJlc2VudGF0aW9uOiBkbyBub3QgcmVtb3ZlIGl0CiAgICAgICAgICBkZWZhdWx0TW9kZTogMDQwMAogICAgICAgICAgb3B0aW9uYWw6IHRydWUKICAgICAgICAjIFRvIHJlYWQgdGhlIGNvbmZpZ3VyYXRpb24gZnJvbSB0aGUgY29uZmlnIG1hcAogICAgICAtIG5hbWU6IGNpbGl1bS1jb25maWctcGF0aAogICAgICAgIGNvbmZpZ01hcDoKICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgLSBuYW1lOiBob3N0LWJvb3QKICAgICAgICBob3N0UGF0aDoKICAgICAgICAgIHBhdGg6IC9ib290CiAgICAgICAgICB0eXBlOiBEaXJlY3RvcnkKLS0tCiMgU291cmNlOiBjaWxpdW0vdGVtcGxhdGVzL2NpbGl1bS1vcGVyYXRvci9kZXBsb3ltZW50LnlhbWwKYXBpVmVyc2lvbjogYXBwcy92MQpraW5kOiBEZXBsb3ltZW50Cm1ldGFkYXRhOgogIG5hbWU6IGNpbGl1bS1vcGVyYXRvcgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBsYWJlbHM6CiAgICBpby5jaWxpdW0vYXBwOiBvcGVyYXRvcgogICAgbmFtZTogY2lsaXVtLW9wZXJhdG9yCiAgICBhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mOiBjaWxpdW0KICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGNpbGl1bS1vcGVyYXRvcgpzcGVjOgogICMgU2VlIGRvY3Mgb24gU2VydmVyQ2FwYWJpbGl0aWVzLkxlYXNlc1Jlc291cmNlTG9jayBpbiBmaWxlIHBrZy9rOHMvdmVyc2lvbi92ZXJzaW9uLmdvCiAgIyBmb3IgbW9yZSBkZXRhaWxzLgogIHJlcGxpY2FzOiAyCiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgaW8uY2lsaXVtL2FwcDogb3BlcmF0b3IKICAgICAgbmFtZTogY2lsaXVtLW9wZXJhdG9yCiAgc3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhTdXJnZTogMQogICAgICBtYXhVbmF2YWlsYWJsZTogMQogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGFubm90YXRpb25zOgogICAgICAgICMgZW5zdXJlIHBvZHMgcm9sbCB3aGVuIGNvbmZpZ21hcCB1cGRhdGVzCiAgICAgICAgY2lsaXVtLmlvL2NpbGl1bS1jb25maWdtYXAtY2hlY2tzdW06ICJiYTQ5OWVkMmVjMGI0MDNiMmE4MzA3ZjhmMmM1YjE4OTczM2M2ZWI0NDlmNDZjNjkwODhiYjM2YmU0MmEwMTc2IgogICAgICBsYWJlbHM6CiAgICAgICAgaW8uY2lsaXVtL2FwcDogb3BlcmF0b3IKICAgICAgICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mOiBjaWxpdW0KICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBjaWxpdW0tb3BlcmF0b3IKICAgIHNwZWM6CiAgICAgIGNvbnRhaW5lcnM6CiAgICAgIC0gbmFtZTogY2lsaXVtLW9wZXJhdG9yCiAgICAgICAgaW1hZ2U6ICJxdWF5LmlvL2NpbGl1bS9vcGVyYXRvci1nZW5lcmljLWNpOmxhdGVzdCIKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIGNvbW1hbmQ6CiAgICAgICAgLSBjaWxpdW0tb3BlcmF0b3ItZ2VuZXJpYwogICAgICAgIGFyZ3M6CiAgICAgICAgLSAtLWNvbmZpZy1kaXI9L3RtcC9jaWxpdW0vY29uZmlnLW1hcAogICAgICAgIC0gLS1kZWJ1Zz0kKENJTElVTV9ERUJVRykKICAgICAgICBlbnY6CiAgICAgICAgLSBuYW1lOiBLOFNfTk9ERV9OQU1FCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgICAgICAgICAgZmllbGRQYXRoOiBzcGVjLm5vZGVOYW1lCiAgICAgICAgLSBuYW1lOiBDSUxJVU1fSzhTX05BTUVTUEFDRQogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBmaWVsZFJlZjoKICAgICAgICAgICAgICBhcGlWZXJzaW9uOiB2MQogICAgICAgICAgICAgIGZpZWxkUGF0aDogbWV0YWRhdGEubmFtZXNwYWNlCiAgICAgICAgLSBuYW1lOiBDSUxJVU1fREVCVUcKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgY29uZmlnTWFwS2V5UmVmOgogICAgICAgICAgICAgIGtleTogZGVidWcKICAgICAgICAgICAgICBuYW1lOiBjaWxpdW0tY29uZmlnCiAgICAgICAgICAgICAgb3B0aW9uYWw6IHRydWUKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9IT1NUCiAgICAgICAgICB2YWx1ZTogIjE3Mi4xOC4yLjI1MiIKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgbGl2ZW5lc3NQcm9iZToKICAgICAgICAgIGh0dHBHZXQ6CiAgICAgICAgICAgIGhvc3Q6ICIxMjcuMC4wLjEiCiAgICAgICAgICAgIHBhdGg6IC9oZWFsdGh6CiAgICAgICAgICAgIHBvcnQ6IDkyMzQKICAgICAgICAgICAgc2NoZW1lOiBIVFRQCiAgICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiA2MAogICAgICAgICAgcGVyaW9kU2Vjb25kczogMTAKICAgICAgICAgIHRpbWVvdXRTZWNvbmRzOiAzCiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgIC0gbmFtZTogY2lsaXVtLWNvbmZpZy1wYXRoCiAgICAgICAgICBtb3VudFBhdGg6IC90bXAvY2lsaXVtL2NvbmZpZy1tYXAKICAgICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgICAgdGVybWluYXRpb25NZXNzYWdlUG9saWN5OiBGYWxsYmFja1RvTG9nc09uRXJyb3IKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgcmVzdGFydFBvbGljeTogQWx3YXlzCiAgICAgIHByaW9yaXR5Q2xhc3NOYW1lOiBzeXN0ZW0tY2x1c3Rlci1jcml0aWNhbAogICAgICBzZXJ2aWNlQWNjb3VudDogImNpbGl1bS1vcGVyYXRvciIKICAgICAgc2VydmljZUFjY291bnROYW1lOiAiY2lsaXVtLW9wZXJhdG9yIgogICAgICAjIEluIEhBIG1vZGUsIGNpbGl1bS1vcGVyYXRvciBwb2RzIG11c3Qgbm90IGJlIHNjaGVkdWxlZCBvbiB0aGUgc2FtZQogICAgICAjIG5vZGUgYXMgdGhleSB3aWxsIGNsYXNoIHdpdGggZWFjaCBvdGhlci4KICAgICAgYWZmaW5pdHk6CiAgICAgICAgcG9kQW50aUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgIC0gbGFiZWxTZWxlY3RvcjoKICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgIGlvLmNpbGl1bS9hcHA6IG9wZXJhdG9yCiAgICAgICAgICAgIHRvcG9sb2d5S2V5OiBrdWJlcm5ldGVzLmlvL2hvc3RuYW1lCiAgICAgIG5vZGVTZWxlY3RvcjoKICAgICAgICBrdWJlcm5ldGVzLmlvL29zOiBsaW51eAogICAgICB0b2xlcmF0aW9uczoKICAgICAgICAtIG9wZXJhdG9yOiBFeGlzdHMKICAgICAgdm9sdW1lczoKICAgICAgICAjIFRvIHJlYWQgdGhlIGNvbmZpZ3VyYXRpb24gZnJvbSB0aGUgY29uZmlnIG1hcAogICAgICAtIG5hbWU6IGNpbGl1bS1jb25maWctcGF0aAogICAgICAgIGNvbmZpZ01hcDoKICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKLS0tCiMgU291cmNlOiBjaWxpdW0vdGVtcGxhdGVzL2NpbGl1bS1zZWNyZXRzLW5hbWVzcGFjZS55YW1sCiMgT25seSBjcmVhdGUgdGhlIG5hbWVzcGFjZSBpZiBpdCdzIGRpZmZlcmVudCBmcm9tIEluZ3Jlc3Mgc2VjcmV0IG5hbWVzcGFjZSBvciBJbmdyZXNzIGlzIG5vdCBlbmFibGVkLgo=\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-installer\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,%23!%2Fbin%2Fbash%20-ex%0A%2Fopt%2Frke2-install.sh%0Asystemctl%20enable%20rke2-server.service%0Asystemctl%20start%20rke2-server.service%0A\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/opt/kubectl-installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/3SOQUoFMQxA9z1F/LpQZBoQEfEMXqKTRluaNkObgXp7+QO6Gf4mm5eXl/s7XHPDNYwEC09HexdYPmFRQN3sgGVfmUzgksy28YEYxZf34bNiZ+EwGB8e/8UBt9eGhVXY27Sn47Lktk8MNb69/lUujlLVCM/z9ICrJeYOywaYtDKSdkZ/hY4pKUi71pGNsIdGiTv2wi/H8D+hyslD0vaVv91vAAAA//+r+CiiBgEAAA==\",\"verification\":{}},\"mode\":320}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Wait until we have a v4 address\\nDefaultDependencies=no\\nConflicts=shutdown.target\\nRequires=systemd-networkd.service\\nAfter=systemd-networkd.service\\nBefore=network-online.target shutdown.target\\n[Service]\\nType=oneshot\\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\\nRemainAfterExit=yes\\n[Install]\\nWantedBy=network-online.target\\n\",\"enabled\":true,\"name\":\"wait-for-v4.service\"},{\"contents\":\"[Unit]\\nDescription=Install kubectl binary\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/kubectl-installer\\nConditionPathExists=!/opt/bin/kubectl\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/kubectl-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"install-kubectl.service\"},{\"contents\":\"[Unit]\\nDescription=Install rke2\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/rke2-install.sh\\nConditionPathExists=!/opt/bin/rke2\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/rke2-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"rke2-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=180min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"},{\"mask\":true,\"name\":\"locksmithd.service\"},{\"enabled\":true,\"name\":\"update-engine.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "args": null,
            "container_linux_config": null,
            "generic_config": null,
            "id": "worker-node02",
            "initrd": null,
            "kernel": null,
            "name": "worker-node02",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node02.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.rke2.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/rke2/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCnNlcnZlcjogJ2h0dHBzOi8vMTcyLjE4LjIuMjUyOjkzNDUnCmNsdXN0ZXItY2lkcjoKICAtIDEwLjQyLjAuMC8xNgogIC0gZmQwMTo6LzUyCnNlcnZpY2UtY2lkcjoKICAtIDEwLjQzLjAuMC8xNgogIC0gZmQ5ODo6LzExMgp0bHMtc2FuOgogIC0gYXBpLmNoby5ydHJveC5jb20KICAtIDE3Mi4xOC4yLjI1MgojIERpc2FibGUgS3ViZVByb3h5IGluIGZhdm9yIG9mIENpbGl1bQpkaXNhYmxlLWt1YmUtcHJveHk6IHRydWUKIyBEaXNhYmxlIERlZmF1bHQgQ05JICYgTmV0d29yayBQb2xpY3kgRW5mb3JjZXIKY25pOiBub25lCmRpc2FibGU6CiAgIyAtIHNlcnZpY2VsYgogICMgLSB0cmFlZmlrCiAgIyAtIGxvY2FsLXN0b3JhZ2UKICAtIHJrZTItaW5ncmVzcy1uZ2lueAoKIyBQcmVwYXJlIGszcyBmb3IgcHJvbWV0aGV1cyBtZXRyaWNzCmt1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1wcm94eS1hcmc6CiAgLSAibWV0cmljcy1iaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1zY2hlZHVsZXItYXJnOgogIC0gImJpbmQtYWRkcmVzcz0wLjAuMC4wIgojIENvbnRyb2xsZXIgTWFuYWdlciBleHBvc2VzIGV0Y2Qgc3FsbGl0ZSBtZXRyaWNzCmV0Y2QtZXhwb3NlLW1ldHJpY3M6IHRydWUK\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-installer\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,%23!%2Fbin%2Fbash%20-ex%0A%2Fopt%2Frke2-install.sh%0Asystemctl%20enable%20rke2-server.service%0Asystemctl%20start%20rke2-server.service%0A\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/opt/kubectl-installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/3SOQUoFMQxA9z1F/LpQZBoQEfEMXqKTRluaNkObgXp7+QO6Gf4mm5eXl/s7XHPDNYwEC09HexdYPmFRQN3sgGVfmUzgksy28YEYxZf34bNiZ+EwGB8e/8UBt9eGhVXY27Sn47Lktk8MNb69/lUujlLVCM/z9ICrJeYOywaYtDKSdkZ/hY4pKUi71pGNsIdGiTv2wi/H8D+hyslD0vaVv91vAAAA//+r+CiiBgEAAA==\",\"verification\":{}},\"mode\":320}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Wait until we have a v4 address\\nDefaultDependencies=no\\nConflicts=shutdown.target\\nRequires=systemd-networkd.service\\nAfter=systemd-networkd.service\\nBefore=network-online.target shutdown.target\\n[Service]\\nType=oneshot\\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\\nRemainAfterExit=yes\\n[Install]\\nWantedBy=network-online.target\\n\",\"enabled\":true,\"name\":\"wait-for-v4.service\"},{\"contents\":\"[Unit]\\nDescription=Install kubectl binary\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/kubectl-installer\\nConditionPathExists=!/opt/bin/kubectl\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/kubectl-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"install-kubectl.service\"},{\"contents\":\"[Unit]\\nDescription=Install rke2\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/rke2-install.sh\\nConditionPathExists=!/opt/bin/rke2\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/rke2-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"rke2-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=180min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"},{\"mask\":true,\"name\":\"locksmithd.service\"},{\"enabled\":true,\"name\":\"update-engine.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "args": null,
            "container_linux_config": null,
            "generic_config": null,
            "id": "worker-node03",
            "initrd": null,
            "kernel": null,
            "name": "worker-node03",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node03.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.rke2.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/rke2/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCndyaXRlLWt1YmVjb25maWctbW9kZTogIjA2NDQiCnRva2VuOiBTVWdLNnBraTF5emNkTzQwSm1TR256YWNOM0tVcnJtT204ME5wMnJnTHlQWGdWeUc5aG84VXRuaFhOVktIS0psCnNlcnZlcjogJ2h0dHBzOi8vMTcyLjE4LjIuMjUyOjkzNDUnCmNsdXN0ZXItY2lkcjoKICAtIDEwLjQyLjAuMC8xNgogIC0gZmQwMTo6LzUyCnNlcnZpY2UtY2lkcjoKICAtIDEwLjQzLjAuMC8xNgogIC0gZmQ5ODo6LzExMgp0bHMtc2FuOgogIC0gYXBpLmNoby5ydHJveC5jb20KICAtIDE3Mi4xOC4yLjI1MgojIERpc2FibGUgS3ViZVByb3h5IGluIGZhdm9yIG9mIENpbGl1bQpkaXNhYmxlLWt1YmUtcHJveHk6IHRydWUKIyBEaXNhYmxlIERlZmF1bHQgQ05JICYgTmV0d29yayBQb2xpY3kgRW5mb3JjZXIKY25pOiBub25lCmRpc2FibGU6CiAgIyAtIHNlcnZpY2VsYgogICMgLSB0cmFlZmlrCiAgIyAtIGxvY2FsLXN0b3JhZ2UKICAtIHJrZTItaW5ncmVzcy1uZ2lueAoKIyBQcmVwYXJlIGszcyBmb3IgcHJvbWV0aGV1cyBtZXRyaWNzCmt1YmUtY29udHJvbGxlci1tYW5hZ2VyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1wcm94eS1hcmc6CiAgLSAibWV0cmljcy1iaW5kLWFkZHJlc3M9MC4wLjAuMCIKa3ViZS1zY2hlZHVsZXItYXJnOgogIC0gImJpbmQtYWRkcmVzcz0wLjAuMC4wIgojIENvbnRyb2xsZXIgTWFuYWdlciBleHBvc2VzIGV0Y2Qgc3FsbGl0ZSBtZXRyaWNzCmV0Y2QtZXhwb3NlLW1ldHJpY3M6IHRydWUK\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/rke2/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/rke2-installer\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,%23!%2Fbin%2Fbash%20-ex%0A%2Fopt%2Frke2-install.sh%0Asystemctl%20enable%20rke2-server.service%0Asystemctl%20start%20rke2-server.service%0A\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/opt/kubectl-installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/3SOQUoFMQxA9z1F/LpQZBoQEfEMXqKTRluaNkObgXp7+QO6Gf4mm5eXl/s7XHPDNYwEC09HexdYPmFRQN3sgGVfmUzgksy28YEYxZf34bNiZ+EwGB8e/8UBt9eGhVXY27Sn47Lktk8MNb69/lUujlLVCM/z9ICrJeYOywaYtDKSdkZ/hY4pKUi71pGNsIdGiTv2wi/H8D+hyslD0vaVv91vAAAA//+r+CiiBgEAAA==\",\"verification\":{}},\"mode\":320}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Wait until we have a v4 address\\nDefaultDependencies=no\\nConflicts=shutdown.target\\nRequires=systemd-networkd.service\\nAfter=systemd-networkd.service\\nBefore=network-online.target shutdown.target\\n[Service]\\nType=oneshot\\nExecStart=/usr/lib/systemd/systemd-networkd-wait-online -4\\nRemainAfterExit=yes\\n[Install]\\nWantedBy=network-online.target\\n\",\"enabled\":true,\"name\":\"wait-for-v4.service\"},{\"contents\":\"[Unit]\\nDescription=Install kubectl binary\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/kubectl-installer\\nConditionPathExists=!/opt/bin/kubectl\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/kubectl-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"install-kubectl.service\"},{\"contents\":\"[Unit]\\nDescription=Install rke2\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/rke2-install.sh\\nConditionPathExists=!/opt/bin/rke2\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/sh -c \\\"/opt/rke2-installer\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"rke2-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/rke2/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/rke2/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=180min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"},{\"mask\":true,\"name\":\"locksmithd.service\"},{\"enabled\":true,\"name\":\"update-engine.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
