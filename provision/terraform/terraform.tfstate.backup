{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 318,
  "lineage": "010f88ba-7585-17bd-e205-abfa42200d0b",
  "outputs": {
    "k3s-api-fqdn": {
      "value": "api.cho.rtrox.com",
      "type": "string"
    },
    "k3s-api-vip": {
      "value": "172.18.2.252",
      "type": "string"
    },
    "k3s-config": {
      "value": "---\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\nflannel-backend: none\ndisable-network-policy: true\ndisable:\n  - servicelb\n  - traefik\n  - local-storage\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "ct_config",
      "name": "install",
      "provider": "provider[\"registry.terraform.io/poseidon/ct\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nsystemd:\n  units:\n    - name: installer.service\n      enabled: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\nstorage:\n  files:\n    - path: /opt/installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          # Clear all partition tables\n          sudo find /dev/ -regex '/dev/sd[a-z]' -exec dd if=/dev/zero of={} bs=1M count=1 \\;\n          curl --retry 10 \"http://matchbox.sid.rtrox.com/ignition?os=installed\u0026node=node01\" -o ignition.json\n          flatcar-install -d /dev/disk/by-id/ata-PNY_CS900_250GB_SSD_PNY2238220921011732D\\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\n    - path: /etc/hostname\n      contents:\n        inline: node01-installer\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "1994643713",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhCl1VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYe5RRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9iEzffQgRESOJygLGO2ZD/dSdorNXtOQJ2fzyJGG3FAn3S5cjR4p1S4kVt6j/RvIYn05RTkCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+Wmma9nRdFU/4rnp2a9XjSr5aaqpndVVcyqsijL/9Nqsc0AhPu10Vs8KttBQmaPWTolxs6wh4iaiLPvAAAA//8WZdHhZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node01-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nsystemd:\n  units:\n    - name: installer.service\n      enabled: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\nstorage:\n  files:\n    - path: /opt/installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          # Clear all partition tables\n          sudo find /dev/ -regex '/dev/sd[a-z]' -exec dd if=/dev/zero of={} bs=1M count=1 \\;\n          curl --retry 10 \"http://matchbox.sid.rtrox.com/ignition?os=installed\u0026node=node02\" -o ignition.json\n          flatcar-install -d /dev/disk/by-id/ata-PNY_CS900_250GB_SSD_PNY22382209210117335\\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\n    - path: /etc/hostname\n      contents:\n        inline: node02-installer\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "3940913168",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIvKeLaFQC11VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYeFRRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9j4zffQgRESOJygLGO2ZD3dSdorNXtOQJ2fzyJGG3FAn3S5cjR4o1S4kVt6j/RvIYn05RTUCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+WmWaznRdFUs+L5sVmvn5rVclNV0/9VVcyrsijLf9PpbJsBCPdro7d4VLaDhMwes3RKjJ1hDxE1EWffAQAA//8Cx+juZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node02-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nsystemd:\n  units:\n    - name: installer.service\n      enabled: true\n      contents: |\n        [Unit]\n        Requires=network-online.target\n        After=network-online.target\n        [Service]\n        Type=simple\n        ExecStart=/opt/installer\n        [Install]\n        WantedBy=multi-user.target\nstorage:\n  files:\n    - path: /opt/installer\n      mode: 0500\n      contents:\n        inline: |\n          #!/bin/bash -ex\n          # Clear all partition tables\n          sudo find /dev/ -regex '/dev/sd[a-z]' -exec dd if=/dev/zero of={} bs=1M count=1 \\;\n          curl --retry 10 \"http://matchbox.sid.rtrox.com/ignition?os=installed\u0026node=node03\" -o ignition.json\n          flatcar-install -d /dev/disk/by-id/ata-PNY_CS900_250GB_SSD_PNY2238220921011732E\\\n            -i ignition.json\n          udevadm settle\n          systemctl reboot\n    - path: /etc/hostname\n      contents:\n        inline: node03-installer\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "4277920133",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhtnRVEVxJLWH+3Oi0k7kycyPR0u9eFLvp5sLl/DjnN/4jtQtSq7QDgUM2hrlHFUF5D3sV2bGjAKy0x5Sl3hK0LliQFg8SRMQtDjC5fMm+KnF6m5xr0IC14Nr6kpwwElBbf36BTnX5Aob6wHUJm7vM9NGDEBE5HqEsYLRj3t9K2Sk2O01DnpzNI0cackOddNtwMbqnVLuQWHmP9m8gi/X5FNMRCIIfKn9PFLLWKzYqiisP4qpvXfqQ+iiclYqVWC7WzXw1K4qm+lc8PzSr1WOzXKyranpTVcWsKouy/D+tnjYZgHC/NnqLB2U7SMjsMUvHxNgZ9hBRE3H2HQAA//+DYUgbZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node03-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "ct_config",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/poseidon/ct\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nstorage:\n  files:\n    - path: \"/etc/hostname\"\n      mode: 0644\n      overwrite: true\n      contents:\n        source: \"data:,node01.cho.rtrox.com\"\n    - path: /opt/k3s-install.sh\n      mode: 0777\n      contents:\n        source: https://get.k3s.io\n    - path: /etc/rancher/k3s/config.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\"\n    - path: /var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCiMgU291cmNlOiBjaWxpdW0vdGVtcGxhdGVzL2NpbGl1bS1hZ2VudC9zZXJ2aWNlYWNjb3VudC55YW1sCmFwaVZlcnNpb246IHYxCmtpbmQ6IFNlcnZpY2VBY2NvdW50Cm1ldGFkYXRhOgogIG5hbWU6ICJjaWxpdW0iCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLW9wZXJhdG9yL3NlcnZpY2VhY2NvdW50LnlhbWwKYXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZTogImNpbGl1bS1vcGVyYXRvciIKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQojIFNvdXJjZTogY2lsaXVtL3RlbXBsYXRlcy9jaWxpdW0tY29uZmlnbWFwLnlhbWwKYXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGNpbGl1bS1jb25maWcKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CgogICMgSWRlbnRpdHkgYWxsb2NhdGlvbiBtb2RlIHNlbGVjdHMgaG93IGlkZW50aXRpZXMgYXJlIHNoYXJlZCBiZXR3ZWVuIGNpbGl1bQogICMgbm9kZXMgYnkgc2V0dGluZyBob3cgdGhleSBhcmUgc3RvcmVkLiBUaGUgb3B0aW9ucyBhcmUgImNyZCIgb3IgImt2c3RvcmUiLgogICMgLSAiY3JkIiBzdG9yZXMgaWRlbnRpdGllcyBpbiBrdWJlcm5ldGVzIGFzIENSRHMgKGN1c3RvbSByZXNvdXJjZSBkZWZpbml0aW9uKS4KICAjICAgVGhlc2UgY2FuIGJlIHF1ZXJpZWQgd2l0aDoKICAjICAgICBrdWJlY3RsIGdldCBjaWxpdW1pZAogICMgLSAia3ZzdG9yZSIgc3RvcmVzIGlkZW50aXRpZXMgaW4gYW4gZXRjZCBrdnN0b3JlLCB0aGF0IGlzCiAgIyAgIGNvbmZpZ3VyZWQgYmVsb3cuIENpbGl1bSB2ZXJzaW9ucyBiZWZvcmUgMS42IHN1cHBvcnRlZCBvbmx5IHRoZSBrdnN0b3JlCiAgIyAgIGJhY2tlbmQuIFVwZ3JhZGVzIGZyb20gdGhlc2Ugb2xkZXIgY2lsaXVtIHZlcnNpb25zIHNob3VsZCBjb250aW51ZSB1c2luZwogICMgICB0aGUga3ZzdG9yZSBieSBjb21tZW50aW5nIG91dCB0aGUgaWRlbnRpdHktYWxsb2NhdGlvbi1tb2RlIGJlbG93LCBvcgogICMgICBzZXR0aW5nIGl0IHRvICJrdnN0b3JlIi4KICBpZGVudGl0eS1hbGxvY2F0aW9uLW1vZGU6IGNyZAogIGNpbGl1bS1lbmRwb2ludC1nYy1pbnRlcnZhbDogIjVtMHMiCiAgbm9kZXMtZ2MtaW50ZXJ2YWw6ICI1bTBzIgogICMgRGlzYWJsZSB0aGUgdXNhZ2Ugb2YgQ2lsaXVtRW5kcG9pbnQgQ1JECiAgZGlzYWJsZS1lbmRwb2ludC1jcmQ6ICJmYWxzZSIKCiAgIyBJZiB5b3Ugd2FudCB0byBydW4gY2lsaXVtIGluIGRlYnVnIG1vZGUgY2hhbmdlIHRoaXMgdmFsdWUgdG8gdHJ1ZQogIGRlYnVnOiAiZmFsc2UiCiAgIyBUaGUgYWdlbnQgY2FuIGJlIHB1dCBpbnRvIHRoZSBmb2xsb3dpbmcgdGhyZWUgcG9saWN5IGVuZm9yY2VtZW50IG1vZGVzCiAgIyBkZWZhdWx0LCBhbHdheXMgYW5kIG5ldmVyLgogICMgaHR0cHM6Ly9kb2NzLmNpbGl1bS5pby9lbi9sYXRlc3QvcG9saWN5L2ludHJvLyNwb2xpY3ktZW5mb3JjZW1lbnQtbW9kZXMKICBlbmFibGUtcG9saWN5OiAiZGVmYXVsdCIKCiAgIyBFbmFibGUgSVB2NCBhZGRyZXNzaW5nLiBJZiBlbmFibGVkLCBhbGwgZW5kcG9pbnRzIGFyZSBhbGxvY2F0ZWQgYW4gSVB2NAogICMgYWRkcmVzcy4KICBlbmFibGUtaXB2NDogInRydWUiCgogICMgRW5hYmxlIElQdjYgYWRkcmVzc2luZy4gSWYgZW5hYmxlZCwgYWxsIGVuZHBvaW50cyBhcmUgYWxsb2NhdGVkIGFuIElQdjYKICAjIGFkZHJlc3MuCiAgZW5hYmxlLWlwdjY6ICJmYWxzZSIKICAjIFVzZXJzIHdobyB3aXNoIHRvIHNwZWNpZnkgdGhlaXIgb3duIGN1c3RvbSBDTkkgY29uZmlndXJhdGlvbiBmaWxlIG11c3Qgc2V0CiAgIyBjdXN0b20tY25pLWNvbmYgdG8gInRydWUiLCBvdGhlcndpc2UgQ2lsaXVtIG1heSBvdmVyd3JpdGUgdGhlIGNvbmZpZ3VyYXRpb24uCiAgY3VzdG9tLWNuaS1jb25mOiAiZmFsc2UiCiAgZW5hYmxlLWJwZi1jbG9jay1wcm9iZTogInRydWUiCiAgIyBJZiB5b3Ugd2FudCBjaWxpdW0gbW9uaXRvciB0byBhZ2dyZWdhdGUgdHJhY2luZyBmb3IgcGFja2V0cywgc2V0IHRoaXMgbGV2ZWwKICAjIHRvICJsb3ciLCAibWVkaXVtIiwgb3IgIm1heGltdW0iLiBUaGUgaGlnaGVyIHRoZSBsZXZlbCwgdGhlIGxlc3MgcGFja2V0cwogICMgdGhhdCB3aWxsIGJlIHNlZW4gaW4gbW9uaXRvciBvdXRwdXQuCiAgbW9uaXRvci1hZ2dyZWdhdGlvbjogbWVkaXVtCgogICMgVGhlIG1vbml0b3IgYWdncmVnYXRpb24gaW50ZXJ2YWwgZ292ZXJucyB0aGUgdHlwaWNhbCB0aW1lIGJldHdlZW4gbW9uaXRvcgogICMgbm90aWZpY2F0aW9uIGV2ZW50cyBmb3IgZWFjaCBhbGxvd2VkIGNvbm5lY3Rpb24uCiAgIwogICMgT25seSBlZmZlY3RpdmUgd2hlbiBtb25pdG9yIGFnZ3JlZ2F0aW9uIGlzIHNldCB0byAibWVkaXVtIiBvciBoaWdoZXIuCiAgbW9uaXRvci1hZ2dyZWdhdGlvbi1pbnRlcnZhbDogNXMKCiAgIyBUaGUgbW9uaXRvciBhZ2dyZWdhdGlvbiBmbGFncyBkZXRlcm1pbmUgd2hpY2ggVENQIGZsYWdzIHdoaWNoLCB1cG9uIHRoZQogICMgZmlyc3Qgb2JzZXJ2YXRpb24sIGNhdXNlIG1vbml0b3Igbm90aWZpY2F0aW9ucyB0byBiZSBnZW5lcmF0ZWQuCiAgIwogICMgT25seSBlZmZlY3RpdmUgd2hlbiBtb25pdG9yIGFnZ3JlZ2F0aW9uIGlzIHNldCB0byAibWVkaXVtIiBvciBoaWdoZXIuCiAgbW9uaXRvci1hZ2dyZWdhdGlvbi1mbGFnczogYWxsCiAgIyBTcGVjaWZpZXMgdGhlIHJhdGlvICgwLjAtMS4wKSBvZiB0b3RhbCBzeXN0ZW0gbWVtb3J5IHRvIHVzZSBmb3IgZHluYW1pYwogICMgc2l6aW5nIG9mIHRoZSBUQ1AgQ1QsIG5vbi1UQ1AgQ1QsIE5BVCBhbmQgcG9saWN5IEJQRiBtYXBzLgogIGJwZi1tYXAtZHluYW1pYy1zaXplLXJhdGlvOiAiMC4wMDI1IgogICMgYnBmLXBvbGljeS1tYXAtbWF4IHNwZWNpZmllcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgZW50cmllcyBpbiBlbmRwb2ludAogICMgcG9saWN5IG1hcCAocGVyIGVuZHBvaW50KQogIGJwZi1wb2xpY3ktbWFwLW1heDogIjE2Mzg0IgogICMgYnBmLWxiLW1hcC1tYXggc3BlY2lmaWVzIHRoZSBtYXhpbXVtIG51bWJlciBvZiBlbnRyaWVzIGluIGJwZiBsYiBzZXJ2aWNlLAogICMgYmFja2VuZCBhbmQgYWZmaW5pdHkgbWFwcy4KICBicGYtbGItbWFwLW1heDogIjY1NTM2IgogICMgYnBmLWxiLWJ5cGFzcy1maWItbG9va3VwIGluc3RydWN0cyBDaWxpdW0gdG8gZW5hYmxlIHRoZSBGSUIgbG9va3VwIGJ5cGFzcwogICMgb3B0aW1pemF0aW9uIGZvciBub2RlcG9ydCByZXZlcnNlIE5BVCBoYW5kbGluZy4KICBicGYtbGItZXh0ZXJuYWwtY2x1c3RlcmlwOiAiZmFsc2UiCgogICMgUHJlLWFsbG9jYXRpb24gb2YgbWFwIGVudHJpZXMgYWxsb3dzIHBlci1wYWNrZXQgbGF0ZW5jeSB0byBiZSByZWR1Y2VkLCBhdAogICMgdGhlIGV4cGVuc2Ugb2YgdXAtZnJvbnQgbWVtb3J5IGFsbG9jYXRpb24gZm9yIHRoZSBlbnRyaWVzIGluIHRoZSBtYXBzLiBUaGUKICAjIGRlZmF1bHQgdmFsdWUgYmVsb3cgd2lsbCBtaW5pbWl6ZSBtZW1vcnkgdXNhZ2UgaW4gdGhlIGRlZmF1bHQgaW5zdGFsbGF0aW9uOwogICMgdXNlcnMgd2hvIGFyZSBzZW5zaXRpdmUgdG8gbGF0ZW5jeSBtYXkgY29uc2lkZXIgc2V0dGluZyB0aGlzIHRvICJ0cnVlIi4KICAjCiAgIyBUaGlzIG9wdGlvbiB3YXMgaW50cm9kdWNlZCBpbiBDaWxpdW0gMS40LiBDaWxpdW0gMS4zIGFuZCBlYXJsaWVyIGlnbm9yZQogICMgdGhpcyBvcHRpb24gYW5kIGJlaGF2ZSBhcyB0aG91Z2ggaXQgaXMgc2V0IHRvICJ0cnVlIi4KICAjCiAgIyBJZiB0aGlzIHZhbHVlIGlzIG1vZGlmaWVkLCB0aGVuIGR1cmluZyB0aGUgbmV4dCBDaWxpdW0gc3RhcnR1cCB0aGUgcmVzdG9yZQogICMgb2YgZXhpc3RpbmcgZW5kcG9pbnRzIGFuZCB0cmFja2luZyBvZiBvbmdvaW5nIGNvbm5lY3Rpb25zIG1heSBiZSBkaXNydXB0ZWQuCiAgIyBBcyBhIHJlc3VsdCwgcmVwbHkgcGFja2V0cyBtYXkgYmUgZHJvcHBlZCBhbmQgdGhlIGxvYWQtYmFsYW5jaW5nIGRlY2lzaW9ucwogICMgZm9yIGVzdGFibGlzaGVkIGNvbm5lY3Rpb25zIG1heSBjaGFuZ2UuCiAgIwogICMgSWYgdGhpcyBvcHRpb24gaXMgc2V0IHRvICJmYWxzZSIgZHVyaW5nIGFuIHVwZ3JhZGUgZnJvbSAxLjMgb3IgZWFybGllciB0bwogICMgMS40IG9yIGxhdGVyLCB0aGVuIGl0IG1heSBjYXVzZSBvbmUtdGltZSBkaXNydXB0aW9ucyBkdXJpbmcgdGhlIHVwZ3JhZGUuCiAgcHJlYWxsb2NhdGUtYnBmLW1hcHM6ICJmYWxzZSIKCiAgIyBSZWd1bGFyIGV4cHJlc3Npb24gbWF0Y2hpbmcgY29tcGF0aWJsZSBJc3RpbyBzaWRlY2FyIGlzdGlvLXByb3h5CiAgIyBjb250YWluZXIgaW1hZ2UgbmFtZXMKICBzaWRlY2FyLWlzdGlvLXByb3h5LWltYWdlOiAiY2lsaXVtL2lzdGlvX3Byb3h5IgoKICAjIE5hbWUgb2YgdGhlIGNsdXN0ZXIuIE9ubHkgcmVsZXZhbnQgd2hlbiBidWlsZGluZyBhIG1lc2ggb2YgY2x1c3RlcnMuCiAgY2x1c3Rlci1uYW1lOiBjaG9uZ3VzCiAgIyBVbmlxdWUgSUQgb2YgdGhlIGNsdXN0ZXIuIE11c3QgYmUgdW5pcXVlIGFjcm9zcyBhbGwgY29ubmV0ZWQgY2x1c3RlcnMgYW5kCiAgIyBpbiB0aGUgcmFuZ2Ugb2YgMSBhbmQgMjU1LiBPbmx5IHJlbGV2YW50IHdoZW4gYnVpbGRpbmcgYSBtZXNoIG9mIGNsdXN0ZXJzLgogIGNsdXN0ZXItaWQ6ICIxIgoKICAjIEVuY2Fwc3VsYXRpb24gbW9kZSBmb3IgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIG5vZGVzCiAgIyBQb3NzaWJsZSB2YWx1ZXM6CiAgIyAgIC0gZGlzYWJsZWQKICAjICAgLSB2eGxhbiAoZGVmYXVsdCkKICAjICAgLSBnZW5ldmUKICB0dW5uZWw6ICJkaXNhYmxlZCIKICAjIEVuYWJsZXMgTDcgcHJveHkgZm9yIEw3IHBvbGljeSBlbmZvcmNlbWVudCBhbmQgdmlzaWJpbGl0eQogIGVuYWJsZS1sNy1wcm94eTogInRydWUiCgogIGVuYWJsZS1pcHY0LW1hc3F1ZXJhZGU6ICJ0cnVlIgogIGVuYWJsZS1pcHY2LW1hc3F1ZXJhZGU6ICJ0cnVlIgoKICBlbmFibGUteHQtc29ja2V0LWZhbGxiYWNrOiAidHJ1ZSIKICBpbnN0YWxsLWlwdGFibGVzLXJ1bGVzOiAidHJ1ZSIKICBpbnN0YWxsLW5vLWNvbm50cmFjay1pcHRhYmxlcy1ydWxlczogImZhbHNlIgoKICBhdXRvLWRpcmVjdC1ub2RlLXJvdXRlczogInRydWUiCiAgZW5hYmxlLWxvY2FsLXJlZGlyZWN0LXBvbGljeTogInRydWUiCiAgaXB2NC1uYXRpdmUtcm91dGluZy1jaWRyOiAxMC40Mi4wLjAvMTYKCiAga3ViZS1wcm94eS1yZXBsYWNlbWVudDogInN0cmljdCIKICBrdWJlLXByb3h5LXJlcGxhY2VtZW50LWhlYWx0aHotYmluZC1hZGRyZXNzOiAiMC4wLjAuMDoxMDI1NiIKICBicGYtbGItc29jazogImZhbHNlIgogIGVuYWJsZS1oZWFsdGgtY2hlY2stbm9kZXBvcnQ6ICJ0cnVlIgogIG5vZGUtcG9ydC1iaW5kLXByb3RlY3Rpb246ICJ0cnVlIgogIGVuYWJsZS1hdXRvLXByb3RlY3Qtbm9kZS1wb3J0LXJhbmdlOiAidHJ1ZSIKICBicGYtbGItbW9kZTogImRzciIKICBicGYtbGItYWxnb3JpdGhtOiAibWFnbGV2IgogIGVuYWJsZS1zdmMtc291cmNlLXJhbmdlLWNoZWNrOiAidHJ1ZSIKICBlbmFibGUtbDItbmVpZ2gtZGlzY292ZXJ5OiAidHJ1ZSIKICBhcnBpbmctcmVmcmVzaC1wZXJpb2Q6ICIzMHMiCiAgZW5hYmxlLWVuZHBvaW50LXJvdXRlczogInRydWUiCiAgZW5hYmxlLWVuZHBvaW50LWhlYWx0aC1jaGVja2luZzogInRydWUiCiAgZW5hYmxlLWhlYWx0aC1jaGVja2luZzogInRydWUiCiAgZW5hYmxlLXdlbGwta25vd24taWRlbnRpdGllczogImZhbHNlIgogIGVuYWJsZS1yZW1vdGUtbm9kZS1pZGVudGl0eTogInRydWUiCiAgc3luY2hyb25pemUtazhzLW5vZGVzOiAidHJ1ZSIKICBvcGVyYXRvci1hcGktc2VydmUtYWRkcjogIjEyNy4wLjAuMTo5MjM0IgogIGlwYW06ICJrdWJlcm5ldGVzIgogIGRpc2FibGUtY25wLXN0YXR1cy11cGRhdGVzOiAidHJ1ZSIKICBlbmFibGUtdnRlcDogImZhbHNlIgogIHZ0ZXAtZW5kcG9pbnQ6ICIiCiAgdnRlcC1jaWRyOiAiIgogIHZ0ZXAtbWFzazogIiIKICB2dGVwLW1hYzogIiIKICBlbmFibGUtYmdwLWNvbnRyb2wtcGxhbmU6ICJmYWxzZSIKICBicGYtcm9vdDogIi9zeXMvZnMvYnBmIgogIGNncm91cC1yb290OiAiL3N5cy9mcy9jZ3JvdXAiCiAgZW5hYmxlLWs4cy10ZXJtaW5hdGluZy1lbmRwb2ludDogInRydWUiCiAgcmVtb3ZlLWNpbGl1bS1ub2RlLXRhaW50czogInRydWUiCiAgc2V0LWNpbGl1bS1pcy11cC1jb25kaXRpb246ICJ0cnVlIgogIHVubWFuYWdlZC1wb2Qtd2F0Y2hlci1pbnRlcnZhbDogIjE1IgogIHRvZnFkbnMtZG5zLXJlamVjdC1yZXNwb25zZS1jb2RlOiAicmVmdXNlZCIKICB0b2ZxZG5zLWVuYWJsZS1kbnMtY29tcHJlc3Npb246ICJ0cnVlIgogIHRvZnFkbnMtZW5kcG9pbnQtbWF4LWlwLXBlci1ob3N0bmFtZTogIjUwIgogIHRvZnFkbnMtaWRsZS1jb25uZWN0aW9uLWdyYWNlLXBlcmlvZDogIjBzIgogIHRvZnFkbnMtbWF4LWRlZmVycmVkLWNvbm5lY3Rpb24tZGVsZXRlczogIjEwMDAwIgogIHRvZnFkbnMtbWluLXR0bDogIjM2MDAiCiAgdG9mcWRucy1wcm94eS1yZXNwb25zZS1tYXgtZGVsYXk6ICIxMDBtcyIKICBhZ2VudC1ub3QtcmVhZHktdGFpbnQta2V5OiAibm9kZS5jaWxpdW0uaW8vYWdlbnQtbm90LXJlYWR5IgotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLWFnZW50L2NsdXN0ZXJyb2xlLnlhbWwKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZQptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0KcnVsZXM6Ci0gYXBpR3JvdXBzOgogIC0gbmV0d29ya2luZy5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBuZXR3b3JrcG9saWNpZXMKICB2ZXJiczoKICAtIGdldAogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSBkaXNjb3ZlcnkuazhzLmlvCiAgcmVzb3VyY2VzOgogIC0gZW5kcG9pbnRzbGljZXMKICB2ZXJiczoKICAtIGdldAogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlczoKICAtIG5hbWVzcGFjZXMKICAtIHNlcnZpY2VzCiAgLSBwb2RzCiAgLSBlbmRwb2ludHMKICAtIG5vZGVzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gYXBpZXh0ZW5zaW9ucy5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zCiAgdmVyYnM6CiAgLSBsaXN0CiAgLSB3YXRjaAogICMgVGhpcyBpcyB1c2VkIHdoZW4gdmFsaWRhdGluZyBwb2xpY2llcyBpbiBwcmVmbGlnaHQuIFRoaXMgd2lsbCBuZWVkIHRvIHN0YXkKICAjIHVudGlsIHdlIGZpZ3VyZSBvdXQgaG93IHRvIGF2b2lkICJnZXQiIGluc2lkZSB0aGUgcHJlZmxpZ2h0LCBhbmQgdGhlbgogICMgc2hvdWxkIGJlIHJlbW92ZWQgaWRlYWxseS4KICAtIGdldAotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWJncGxvYWRiYWxhbmNlcmlwcG9vbHMKICAtIGNpbGl1bWJncHBlZXJpbmdwb2xpY2llcwogIC0gY2lsaXVtY2x1c3RlcndpZGVlbnZveWNvbmZpZ3MKICAtIGNpbGl1bWNsdXN0ZXJ3aWRlbmV0d29ya3BvbGljaWVzCiAgLSBjaWxpdW1lZ3Jlc3NnYXRld2F5cG9saWNpZXMKICAtIGNpbGl1bWVncmVzc25hdHBvbGljaWVzCiAgLSBjaWxpdW1lbmRwb2ludHMKICAtIGNpbGl1bWVuZHBvaW50c2xpY2VzCiAgLSBjaWxpdW1lbnZveWNvbmZpZ3MKICAtIGNpbGl1bWlkZW50aXRpZXMKICAtIGNpbGl1bWxvY2FscmVkaXJlY3Rwb2xpY2llcwogIC0gY2lsaXVtbmV0d29ya3BvbGljaWVzCiAgLSBjaWxpdW1ub2RlcwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1pZGVudGl0aWVzCiAgLSBjaWxpdW1lbmRwb2ludHMKICAtIGNpbGl1bW5vZGVzCiAgdmVyYnM6CiAgLSBjcmVhdGUKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICAjIFRvIHN5bmNocm9uaXplIGdhcmJhZ2UgY29sbGVjdGlvbiBvZiBzdWNoIHJlc291cmNlcwogIHJlc291cmNlczoKICAtIGNpbGl1bWlkZW50aXRpZXMKICB2ZXJiczoKICAtIHVwZGF0ZQotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWVuZHBvaW50cwogIHZlcmJzOgogIC0gZGVsZXRlCiAgLSBnZXQKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1ub2RlcwogIC0gY2lsaXVtbm9kZXMvc3RhdHVzCiAgdmVyYnM6CiAgLSBnZXQKICAtIHVwZGF0ZQotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bW5ldHdvcmtwb2xpY2llcy9zdGF0dXMKICAtIGNpbGl1bWNsdXN0ZXJ3aWRlbmV0d29ya3BvbGljaWVzL3N0YXR1cwogIC0gY2lsaXVtZW5kcG9pbnRzL3N0YXR1cwogIC0gY2lsaXVtZW5kcG9pbnRzCiAgdmVyYnM6CiAgLSBwYXRjaAotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLW9wZXJhdG9yL2NsdXN0ZXJyb2xlLnlhbWwKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZQptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKcnVsZXM6Ci0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgLSBwb2RzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCiAgIyB0byBhdXRvbWF0aWNhbGx5IGRlbGV0ZSBbY29yZXxrdWJlXWRucyBwb2RzIHNvIHRoYXQgYXJlIHN0YXJ0aW5nIHRvIGJlaW5nCiAgIyBtYW5hZ2VkIGJ5IENpbGl1bQogIC0gZGVsZXRlCi0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgLSBub2RlcwogIHZlcmJzOgogIC0gbGlzdAogIC0gd2F0Y2gKLSBhcGlHcm91cHM6CiAgLSAiIgogIHJlc291cmNlczoKICAjIFRvIHJlbW92ZSBub2RlIHRhaW50cwogIC0gbm9kZXMKICAjIFRvIHNldCBOZXR3b3JrVW5hdmFpbGFibGUgZmFsc2Ugb24gc3RhcnR1cAogIC0gbm9kZXMvc3RhdHVzCiAgdmVyYnM6CiAgLSBwYXRjaAotIGFwaUdyb3VwczoKICAtIGRpc2NvdmVyeS5rOHMuaW8KICByZXNvdXJjZXM6CiAgLSBlbmRwb2ludHNsaWNlcwogIHZlcmJzOgogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtICIiCiAgcmVzb3VyY2VzOgogICMgdG8gcGVyZm9ybSBMQiBJUCBhbGxvY2F0aW9uIGZvciBCR1AKICAtIHNlcnZpY2VzL3N0YXR1cwogIHZlcmJzOgogIC0gdXBkYXRlCi0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgIyB0byBjaGVjayBhcGlzZXJ2ZXIgY29ubmVjdGl2aXR5CiAgLSBuYW1lc3BhY2VzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gIiIKICByZXNvdXJjZXM6CiAgIyB0byBwZXJmb3JtIHRoZSB0cmFuc2xhdGlvbiBvZiBhIENOUCB0aGF0IGNvbnRhaW5zIGBUb0dyb3VwYCB0byBpdHMgZW5kcG9pbnRzCiAgLSBzZXJ2aWNlcwogIC0gZW5kcG9pbnRzCiAgdmVyYnM6CiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtbmV0d29ya3BvbGljaWVzCiAgLSBjaWxpdW1jbHVzdGVyd2lkZW5ldHdvcmtwb2xpY2llcwogIHZlcmJzOgogICMgQ3JlYXRlIGF1dG8tZ2VuZXJhdGVkIENOUHMgYW5kIENDTlBzIGZyb20gUG9saWNpZXMgdGhhdCBoYXZlICd0b0dyb3VwcycKICAtIGNyZWF0ZQogIC0gdXBkYXRlCiAgLSBkZWxldGVjb2xsZWN0aW9uCiAgIyBUbyB1cGRhdGUgdGhlIHN0YXR1cyBvZiB0aGUgQ05QcyBhbmQgQ0NOUHMKICAtIHBhdGNoCiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtbmV0d29ya3BvbGljaWVzL3N0YXR1cwogIC0gY2lsaXVtY2x1c3RlcndpZGVuZXR3b3JrcG9saWNpZXMvc3RhdHVzCiAgdmVyYnM6CiAgIyBVcGRhdGUgdGhlIGF1dG8tZ2VuZXJhdGVkIENOUHMgYW5kIENDTlBzIHN0YXR1cy4KICAtIHBhdGNoCiAgLSB1cGRhdGUKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1lbmRwb2ludHMKICAtIGNpbGl1bWlkZW50aXRpZXMKICB2ZXJiczoKICAjIFRvIHBlcmZvcm0gZ2FyYmFnZSBjb2xsZWN0aW9uIG9mIHN1Y2ggcmVzb3VyY2VzCiAgLSBkZWxldGUKICAtIGxpc3QKICAtIHdhdGNoCi0gYXBpR3JvdXBzOgogIC0gY2lsaXVtLmlvCiAgcmVzb3VyY2VzOgogIC0gY2lsaXVtaWRlbnRpdGllcwogIHZlcmJzOgogICMgVG8gc3luY2hyb25pemUgZ2FyYmFnZSBjb2xsZWN0aW9uIG9mIHN1Y2ggcmVzb3VyY2VzCiAgLSB1cGRhdGUKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1ub2RlcwogIHZlcmJzOgogIC0gY3JlYXRlCiAgLSB1cGRhdGUKICAtIGdldAogIC0gbGlzdAogIC0gd2F0Y2gKICAgICMgVG8gcGVyZm9ybSBDaWxpdW1Ob2RlIGdhcmJhZ2UgY29sbGVjdG9yCiAgLSBkZWxldGUKLSBhcGlHcm91cHM6CiAgLSBjaWxpdW0uaW8KICByZXNvdXJjZXM6CiAgLSBjaWxpdW1ub2Rlcy9zdGF0dXMKICB2ZXJiczoKICAtIHVwZGF0ZQotIGFwaUdyb3VwczoKICAtIGNpbGl1bS5pbwogIHJlc291cmNlczoKICAtIGNpbGl1bWVuZHBvaW50c2xpY2VzCiAgLSBjaWxpdW1lbnZveWNvbmZpZ3MKICB2ZXJiczoKICAtIGNyZWF0ZQogIC0gdXBkYXRlCiAgLSBnZXQKICAtIGxpc3QKICAtIHdhdGNoCiAgLSBkZWxldGUKLSBhcGlHcm91cHM6CiAgLSBhcGlleHRlbnNpb25zLms4cy5pbwogIHJlc291cmNlczoKICAtIGN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMKICB2ZXJiczoKICAtIGNyZWF0ZQogIC0gZ2V0CiAgLSBsaXN0CiAgLSB3YXRjaAotIGFwaUdyb3VwczoKICAtIGFwaWV4dGVuc2lvbnMuazhzLmlvCiAgcmVzb3VyY2VzOgogIC0gY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucwogIHZlcmJzOgogIC0gdXBkYXRlCiAgcmVzb3VyY2VOYW1lczoKICAtIGNpbGl1bWJncGxvYWRiYWxhbmNlcmlwcG9vbHMuY2lsaXVtLmlvCiAgLSBjaWxpdW1iZ3BwZWVyaW5ncG9saWNpZXMuY2lsaXVtLmlvCiAgLSBjaWxpdW1jbHVzdGVyd2lkZWVudm95Y29uZmlncy5jaWxpdW0uaW8KICAtIGNpbGl1bWNsdXN0ZXJ3aWRlbmV0d29ya3BvbGljaWVzLmNpbGl1bS5pbwogIC0gY2lsaXVtZWdyZXNzZ2F0ZXdheXBvbGljaWVzLmNpbGl1bS5pbwogIC0gY2lsaXVtZWdyZXNzbmF0cG9saWNpZXMuY2lsaXVtLmlvCiAgLSBjaWxpdW1lbmRwb2ludHMuY2lsaXVtLmlvCiAgLSBjaWxpdW1lbmRwb2ludHNsaWNlcy5jaWxpdW0uaW8KICAtIGNpbGl1bWVudm95Y29uZmlncy5jaWxpdW0uaW8KICAtIGNpbGl1bWV4dGVybmFsd29ya2xvYWRzLmNpbGl1bS5pbwogIC0gY2lsaXVtaWRlbnRpdGllcy5jaWxpdW0uaW8KICAtIGNpbGl1bWxvY2FscmVkaXJlY3Rwb2xpY2llcy5jaWxpdW0uaW8KICAtIGNpbGl1bW5ldHdvcmtwb2xpY2llcy5jaWxpdW0uaW8KICAtIGNpbGl1bW5vZGVzLmNpbGl1bS5pbwojIEZvciBjaWxpdW0tb3BlcmF0b3IgcnVubmluZyBpbiBIQSBtb2RlLgojCiMgQ2lsaXVtIG9wZXJhdG9yIHJ1bm5pbmcgaW4gSEEgbW9kZSByZXF1aXJlcyB0aGUgdXNlIG9mIFJlc291cmNlTG9jayBmb3IgTGVhZGVyIEVsZWN0aW9uCiMgYmV0d2VlbiBtdWx0aXBsZSBydW5uaW5nIGluc3RhbmNlcy4KIyBUaGUgcHJlZmVycmVkIHdheSBvZiBkb2luZyB0aGlzIGlzIHRvIHVzZSBMZWFzZXNSZXNvdXJjZUxvY2sgYXMgZWRpdHMgdG8gTGVhc2VzIGFyZSBsZXNzCiMgY29tbW9uIGFuZCBmZXdlciBvYmplY3RzIGluIHRoZSBjbHVzdGVyIHdhdGNoICJhbGwgTGVhc2VzIi4KLSBhcGlHcm91cHM6CiAgLSBjb29yZGluYXRpb24uazhzLmlvCiAgcmVzb3VyY2VzOgogIC0gbGVhc2VzCiAgdmVyYnM6CiAgLSBjcmVhdGUKICAtIGdldAogIC0gdXBkYXRlCi0tLQojIFNvdXJjZTogY2lsaXVtL3RlbXBsYXRlcy9jaWxpdW0tYWdlbnQvY2x1c3RlcnJvbGViaW5kaW5nLnlhbWwKYXBpVmVyc2lvbjogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MQpraW5kOiBDbHVzdGVyUm9sZUJpbmRpbmcKbWV0YWRhdGE6CiAgbmFtZTogY2lsaXVtCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IGNpbGl1bQpzdWJqZWN0czoKLSBraW5kOiBTZXJ2aWNlQWNjb3VudAogIG5hbWU6ICJjaWxpdW0iCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQotLS0KIyBTb3VyY2U6IGNpbGl1bS90ZW1wbGF0ZXMvY2lsaXVtLW9wZXJhdG9yL2NsdXN0ZXJyb2xlYmluZGluZy55YW1sCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjEKa2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCm1ldGFkYXRhOgogIG5hbWU6IGNpbGl1bS1vcGVyYXRvcgpyb2xlUmVmOgogIGFwaUdyb3VwOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvCiAga2luZDogQ2x1c3RlclJvbGUKICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKc3ViamVjdHM6Ci0ga2luZDogU2VydmljZUFjY291bnQKICBuYW1lOiAiY2lsaXVtLW9wZXJhdG9yIgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KLS0tCiMgU291cmNlOiBjaWxpdW0vdGVtcGxhdGVzL2NpbGl1bS1hZ2VudC9kYWVtb25zZXQueWFtbAphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0KICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgazhzLWFwcDogY2lsaXVtCnNwZWM6CiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgazhzLWFwcDogY2lsaXVtCiAgdXBkYXRlU3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhVbmF2YWlsYWJsZTogMgogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGFubm90YXRpb25zOgogICAgICAgICMgZW5zdXJlIHBvZHMgcm9sbCB3aGVuIGNvbmZpZ21hcCB1cGRhdGVzCiAgICAgICAgY2lsaXVtLmlvL2NpbGl1bS1jb25maWdtYXAtY2hlY2tzdW06ICJkMTAwMDY4N2ZiMWZiZGJmMmNhMWYxMWE5OGE0MDMyNTk3MGMwN2NkOGVhY2RkNmFkN2Q2NjRhMGY1MjJhNDhhIgogICAgICBsYWJlbHM6CiAgICAgICAgazhzLWFwcDogY2lsaXVtCiAgICBzcGVjOgogICAgICBjb250YWluZXJzOgogICAgICAtIG5hbWU6IGNpbGl1bS1hZ2VudAogICAgICAgIGltYWdlOiAicXVheS5pby9jaWxpdW0vY2lsaXVtOnYxLjEyLjJAc2hhMjU2Ojk4NmY4YjA0Y2ZkYjM1Y2Y3MTQ3MDFlNThlMzVkYTBlZTYzZGEyYjhhMDQ4YWI1OTZjY2I0OWRlNThkNWJhMzYiCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICAgICAgICBjb21tYW5kOgogICAgICAgIC0gY2lsaXVtLWFnZW50CiAgICAgICAgYXJnczoKICAgICAgICAtIC0tY29uZmlnLWRpcj0vdG1wL2NpbGl1bS9jb25maWctbWFwCiAgICAgICAgc3RhcnR1cFByb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgaG9zdDogIjEyNy4wLjAuMSIKICAgICAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICAgICAgcG9ydDogOTg3OQogICAgICAgICAgICBzY2hlbWU6IEhUVFAKICAgICAgICAgICAgaHR0cEhlYWRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogImJyaWVmIgogICAgICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDEwNQogICAgICAgICAgcGVyaW9kU2Vjb25kczogMgogICAgICAgICAgc3VjY2Vzc1RocmVzaG9sZDogMQogICAgICAgIGxpdmVuZXNzUHJvYmU6CiAgICAgICAgICBodHRwR2V0OgogICAgICAgICAgICBob3N0OiAiMTI3LjAuMC4xIgogICAgICAgICAgICBwYXRoOiAvaGVhbHRoegogICAgICAgICAgICBwb3J0OiA5ODc5CiAgICAgICAgICAgIHNjaGVtZTogSFRUUAogICAgICAgICAgICBodHRwSGVhZGVyczoKICAgICAgICAgICAgLSBuYW1lOiAiYnJpZWYiCiAgICAgICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgICAgcGVyaW9kU2Vjb25kczogMzAKICAgICAgICAgIHN1Y2Nlc3NUaHJlc2hvbGQ6IDEKICAgICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6IDEwCiAgICAgICAgICB0aW1lb3V0U2Vjb25kczogNQogICAgICAgIHJlYWRpbmVzc1Byb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgaG9zdDogIjEyNy4wLjAuMSIKICAgICAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICAgICAgcG9ydDogOTg3OQogICAgICAgICAgICBzY2hlbWU6IEhUVFAKICAgICAgICAgICAgaHR0cEhlYWRlcnM6CiAgICAgICAgICAgIC0gbmFtZTogImJyaWVmIgogICAgICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAgIHBlcmlvZFNlY29uZHM6IDMwCiAgICAgICAgICBzdWNjZXNzVGhyZXNob2xkOiAxCiAgICAgICAgICBmYWlsdXJlVGhyZXNob2xkOiAzCiAgICAgICAgICB0aW1lb3V0U2Vjb25kczogNQogICAgICAgIGVudjoKICAgICAgICAtIG5hbWU6IEs4U19OT0RFX05BTUUKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgZmllbGRSZWY6CiAgICAgICAgICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAgICAgICAgICBmaWVsZFBhdGg6IHNwZWMubm9kZU5hbWUKICAgICAgICAtIG5hbWU6IENJTElVTV9LOFNfTkFNRVNQQUNFCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgICAgICAgICAgZmllbGRQYXRoOiBtZXRhZGF0YS5uYW1lc3BhY2UKICAgICAgICAtIG5hbWU6IENJTElVTV9DTFVTVEVSTUVTSF9DT05GSUcKICAgICAgICAgIHZhbHVlOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gvCiAgICAgICAgLSBuYW1lOiBDSUxJVU1fQ05JX0NIQUlOSU5HX01PREUKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgY29uZmlnTWFwS2V5UmVmOgogICAgICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgICAgICAgICBrZXk6IGNuaS1jaGFpbmluZy1tb2RlCiAgICAgICAgICAgICAgb3B0aW9uYWw6IHRydWUKICAgICAgICAtIG5hbWU6IENJTElVTV9DVVNUT01fQ05JX0NPTkYKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgY29uZmlnTWFwS2V5UmVmOgogICAgICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgICAgICAgICBrZXk6IGN1c3RvbS1jbmktY29uZgogICAgICAgICAgICAgIG9wdGlvbmFsOiB0cnVlCiAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX1NFUlZJQ0VfSE9TVAogICAgICAgICAgdmFsdWU6ICIxNzIuMTguMi4yNTIiCiAgICAgICAgLSBuYW1lOiBLVUJFUk5FVEVTX1NFUlZJQ0VfUE9SVAogICAgICAgICAgdmFsdWU6ICI2NDQzIgogICAgICAgIGxpZmVjeWNsZToKICAgICAgICAgIHBvc3RTdGFydDoKICAgICAgICAgICAgZXhlYzoKICAgICAgICAgICAgICBjb21tYW5kOgogICAgICAgICAgICAgIC0gIi9jbmktaW5zdGFsbC5zaCIKICAgICAgICAgICAgICAtICItLWVuYWJsZS1kZWJ1Zz1mYWxzZSIKICAgICAgICAgICAgICAtICItLWNuaS1leGNsdXNpdmU9dHJ1ZSIKICAgICAgICAgICAgICAtICItLWxvZy1maWxlPS92YXIvcnVuL2NpbGl1bS9jaWxpdW0tY25pLmxvZyIKICAgICAgICAgIHByZVN0b3A6CiAgICAgICAgICAgIGV4ZWM6CiAgICAgICAgICAgICAgY29tbWFuZDoKICAgICAgICAgICAgICAtIC9jbmktdW5pbnN0YWxsLnNoCiAgICAgICAgc2VjdXJpdHlDb250ZXh0OgogICAgICAgICAgcHJpdmlsZWdlZDogdHJ1ZQogICAgICAgIHRlcm1pbmF0aW9uTWVzc2FnZVBvbGljeTogRmFsbGJhY2tUb0xvZ3NPbkVycm9yCiAgICAgICAgdm9sdW1lTW91bnRzOgogICAgICAgIC0gbmFtZTogYnBmLW1hcHMKICAgICAgICAgIG1vdW50UGF0aDogL3N5cy9mcy9icGYKICAgICAgICAgIG1vdW50UHJvcGFnYXRpb246IEJpZGlyZWN0aW9uYWwKICAgICAgICAjIENoZWNrIGZvciBkdXBsaWNhdGUgbW91bnRzIGJlZm9yZSBtb3VudGluZwogICAgICAgIC0gbmFtZTogY2lsaXVtLWNncm91cAogICAgICAgICAgbW91bnRQYXRoOiAvc3lzL2ZzL2Nncm91cAogICAgICAgIC0gbmFtZTogY2lsaXVtLXJ1bgogICAgICAgICAgbW91bnRQYXRoOiAvdmFyL3J1bi9jaWxpdW0KICAgICAgICAtIG5hbWU6IGNuaS1wYXRoCiAgICAgICAgICBtb3VudFBhdGg6IC9ob3N0L29wdC9jbmkvYmluCiAgICAgICAgLSBuYW1lOiBldGMtY25pLW5ldGQKICAgICAgICAgIG1vdW50UGF0aDogL2hvc3QvZXRjL2NuaS9uZXQuZAogICAgICAgIC0gbmFtZTogY2x1c3Rlcm1lc2gtc2VjcmV0cwogICAgICAgICAgbW91bnRQYXRoOiAvdmFyL2xpYi9jaWxpdW0vY2x1c3Rlcm1lc2gKICAgICAgICAgIHJlYWRPbmx5OiB0cnVlCiAgICAgICAgLSBuYW1lOiBjaWxpdW0tY29uZmlnLXBhdGgKICAgICAgICAgIG1vdW50UGF0aDogL3RtcC9jaWxpdW0vY29uZmlnLW1hcAogICAgICAgICAgcmVhZE9ubHk6IHRydWUKICAgICAgICAgICMgTmVlZGVkIHRvIGJlIGFibGUgdG8gbG9hZCBrZXJuZWwgbW9kdWxlcwogICAgICAgIC0gbmFtZTogbGliLW1vZHVsZXMKICAgICAgICAgIG1vdW50UGF0aDogL2xpYi9tb2R1bGVzCiAgICAgICAgICByZWFkT25seTogdHJ1ZQogICAgICAgIC0gbmFtZTogeHRhYmxlcy1sb2NrCiAgICAgICAgICBtb3VudFBhdGg6IC9ydW4veHRhYmxlcy5sb2NrCiAgICAgIGluaXRDb250YWluZXJzOgogICAgICAtIG5hbWU6IGNsZWFuLWNpbGl1bS1zdGF0ZQogICAgICAgIGltYWdlOiAicXVheS5pby9jaWxpdW0vY2lsaXVtOnYxLjEyLjJAc2hhMjU2Ojk4NmY4YjA0Y2ZkYjM1Y2Y3MTQ3MDFlNThlMzVkYTBlZTYzZGEyYjhhMDQ4YWI1OTZjY2I0OWRlNThkNWJhMzYiCiAgICAgICAgaW1hZ2VQdWxsUG9saWN5OiBJZk5vdFByZXNlbnQKICAgICAgICBjb21tYW5kOgogICAgICAgIC0gL2luaXQtY29udGFpbmVyLnNoCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogQ0lMSVVNX0FMTF9TVEFURQogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBjb25maWdNYXBLZXlSZWY6CiAgICAgICAgICAgICAgbmFtZTogY2lsaXVtLWNvbmZpZwogICAgICAgICAgICAgIGtleTogY2xlYW4tY2lsaXVtLXN0YXRlCiAgICAgICAgICAgICAgb3B0aW9uYWw6IHRydWUKICAgICAgICAtIG5hbWU6IENJTElVTV9CUEZfU1RBVEUKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgY29uZmlnTWFwS2V5UmVmOgogICAgICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgICAgICAgICBrZXk6IGNsZWFuLWNpbGl1bS1icGYtc3RhdGUKICAgICAgICAgICAgICBvcHRpb25hbDogdHJ1ZQogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAiMTcyLjE4LjIuMjUyIgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX1BPUlQKICAgICAgICAgIHZhbHVlOiAiNjQ0MyIKICAgICAgICB0ZXJtaW5hdGlvbk1lc3NhZ2VQb2xpY3k6IEZhbGxiYWNrVG9Mb2dzT25FcnJvcgogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIHByaXZpbGVnZWQ6IHRydWUKICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgLSBuYW1lOiBicGYtbWFwcwogICAgICAgICAgbW91bnRQYXRoOiAvc3lzL2ZzL2JwZgogICAgICAgICAgIyBSZXF1aXJlZCB0byBtb3VudCBjZ3JvdXAgZmlsZXN5c3RlbSBmcm9tIHRoZSBob3N0IHRvIGNpbGl1bSBhZ2VudCBwb2QKICAgICAgICAtIG5hbWU6IGNpbGl1bS1jZ3JvdXAKICAgICAgICAgIG1vdW50UGF0aDogL3N5cy9mcy9jZ3JvdXAKICAgICAgICAgIG1vdW50UHJvcGFnYXRpb246IEhvc3RUb0NvbnRhaW5lcgogICAgICAgIC0gbmFtZTogY2lsaXVtLXJ1bgogICAgICAgICAgbW91bnRQYXRoOiAvdmFyL3J1bi9jaWxpdW0KICAgICAgICByZXNvdXJjZXM6CiAgICAgICAgICByZXF1ZXN0czoKICAgICAgICAgICAgY3B1OiAxMDBtCiAgICAgICAgICAgIG1lbW9yeTogMTAwTWkgIyB3YWl0LWZvci1rdWJlLXByb3h5CiAgICAgIHJlc3RhcnRQb2xpY3k6IEFsd2F5cwogICAgICBwcmlvcml0eUNsYXNzTmFtZTogc3lzdGVtLW5vZGUtY3JpdGljYWwKICAgICAgc2VydmljZUFjY291bnQ6ICJjaWxpdW0iCiAgICAgIHNlcnZpY2VBY2NvdW50TmFtZTogImNpbGl1bSIKICAgICAgdGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHM6IDEKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgYWZmaW5pdHk6CiAgICAgICAgcG9kQW50aUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgIC0gbGFiZWxTZWxlY3RvcjoKICAgICAgICAgICAgICBtYXRjaExhYmVsczoKICAgICAgICAgICAgICAgIGs4cy1hcHA6IGNpbGl1bQogICAgICAgICAgICB0b3BvbG9neUtleToga3ViZXJuZXRlcy5pby9ob3N0bmFtZQogICAgICBub2RlU2VsZWN0b3I6CiAgICAgICAga3ViZXJuZXRlcy5pby9vczogbGludXgKICAgICAgdG9sZXJhdGlvbnM6CiAgICAgICAgLSBvcGVyYXRvcjogRXhpc3RzCiAgICAgIHZvbHVtZXM6CiAgICAgICAgIyBUbyBrZWVwIHN0YXRlIGJldHdlZW4gcmVzdGFydHMgLyB1cGdyYWRlcwogICAgICAtIG5hbWU6IGNpbGl1bS1ydW4KICAgICAgICBob3N0UGF0aDoKICAgICAgICAgIHBhdGg6IC92YXIvcnVuL2NpbGl1bQogICAgICAgICAgdHlwZTogRGlyZWN0b3J5T3JDcmVhdGUKICAgICAgICAjIFRvIGtlZXAgc3RhdGUgYmV0d2VlbiByZXN0YXJ0cyAvIHVwZ3JhZGVzIGZvciBicGYgbWFwcwogICAgICAtIG5hbWU6IGJwZi1tYXBzCiAgICAgICAgaG9zdFBhdGg6CiAgICAgICAgICBwYXRoOiAvc3lzL2ZzL2JwZgogICAgICAgICAgdHlwZTogRGlyZWN0b3J5T3JDcmVhdGUKICAgICAgIyBUbyBrZWVwIHN0YXRlIGJldHdlZW4gcmVzdGFydHMgLyB1cGdyYWRlcyBmb3IgY2dyb3VwMiBmaWxlc3lzdGVtCiAgICAgIC0gbmFtZTogY2lsaXVtLWNncm91cAogICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL3N5cy9mcy9jZ3JvdXAKICAgICAgICAgIHR5cGU6IERpcmVjdG9yeU9yQ3JlYXRlCiAgICAgICMgVG8gaW5zdGFsbCBjaWxpdW0gY25pIHBsdWdpbiBpbiB0aGUgaG9zdAogICAgICAtIG5hbWU6IGNuaS1wYXRoCiAgICAgICAgaG9zdFBhdGg6CiAgICAgICAgICBwYXRoOiAgL29wdC9jbmkvYmluCiAgICAgICAgICB0eXBlOiBEaXJlY3RvcnlPckNyZWF0ZQogICAgICAgICMgVG8gaW5zdGFsbCBjaWxpdW0gY25pIGNvbmZpZ3VyYXRpb24gaW4gdGhlIGhvc3QKICAgICAgLSBuYW1lOiBldGMtY25pLW5ldGQKICAgICAgICBob3N0UGF0aDoKICAgICAgICAgIHBhdGg6IC9ldGMvY25pL25ldC5kCiAgICAgICAgICB0eXBlOiBEaXJlY3RvcnlPckNyZWF0ZQogICAgICAgICMgVG8gYmUgYWJsZSB0byBsb2FkIGtlcm5lbCBtb2R1bGVzCiAgICAgIC0gbmFtZTogbGliLW1vZHVsZXMKICAgICAgICBob3N0UGF0aDoKICAgICAgICAgIHBhdGg6IC9saWIvbW9kdWxlcwogICAgICAgICMgVG8gYWNjZXNzIGlwdGFibGVzIGNvbmN1cnJlbnRseSB3aXRoIG90aGVyIHByb2Nlc3NlcyAoZS5nLiBrdWJlLXByb3h5KQogICAgICAtIG5hbWU6IHh0YWJsZXMtbG9jawogICAgICAgIGhvc3RQYXRoOgogICAgICAgICAgcGF0aDogL3J1bi94dGFibGVzLmxvY2sKICAgICAgICAgIHR5cGU6IEZpbGVPckNyZWF0ZQogICAgICAgICMgVG8gcmVhZCB0aGUgY2x1c3Rlcm1lc2ggY29uZmlndXJhdGlvbgogICAgICAtIG5hbWU6IGNsdXN0ZXJtZXNoLXNlY3JldHMKICAgICAgICBzZWNyZXQ6CiAgICAgICAgICBzZWNyZXROYW1lOiBjaWxpdW0tY2x1c3Rlcm1lc2gKICAgICAgICAgICMgbm90ZTogdGhlIGxlYWRpbmcgemVybyBtZWFucyB0aGlzIG51bWJlciBpcyBpbiBvY3RhbCByZXByZXNlbnRhdGlvbjogZG8gbm90IHJlbW92ZSBpdAogICAgICAgICAgZGVmYXVsdE1vZGU6IDA0MDAKICAgICAgICAgIG9wdGlvbmFsOiB0cnVlCiAgICAgICAgIyBUbyByZWFkIHRoZSBjb25maWd1cmF0aW9uIGZyb20gdGhlIGNvbmZpZyBtYXAKICAgICAgLSBuYW1lOiBjaWxpdW0tY29uZmlnLXBhdGgKICAgICAgICBjb25maWdNYXA6CiAgICAgICAgICBuYW1lOiBjaWxpdW0tY29uZmlnCi0tLQojIFNvdXJjZTogY2lsaXVtL3RlbXBsYXRlcy9jaWxpdW0tb3BlcmF0b3IvZGVwbG95bWVudC55YW1sCmFwaVZlcnNpb246IGFwcHMvdjEKa2luZDogRGVwbG95bWVudAptZXRhZGF0YToKICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCiAgbGFiZWxzOgogICAgaW8uY2lsaXVtL2FwcDogb3BlcmF0b3IKICAgIG5hbWU6IGNpbGl1bS1vcGVyYXRvcgpzcGVjOgogICMgU2VlIGRvY3Mgb24gU2VydmVyQ2FwYWJpbGl0aWVzLkxlYXNlc1Jlc291cmNlTG9jayBpbiBmaWxlIHBrZy9rOHMvdmVyc2lvbi92ZXJzaW9uLmdvCiAgIyBmb3IgbW9yZSBkZXRhaWxzLgogIHJlcGxpY2FzOiAyCiAgc2VsZWN0b3I6CiAgICBtYXRjaExhYmVsczoKICAgICAgaW8uY2lsaXVtL2FwcDogb3BlcmF0b3IKICAgICAgbmFtZTogY2lsaXVtLW9wZXJhdG9yCiAgc3RyYXRlZ3k6CiAgICByb2xsaW5nVXBkYXRlOgogICAgICBtYXhTdXJnZTogMQogICAgICBtYXhVbmF2YWlsYWJsZTogMQogICAgdHlwZTogUm9sbGluZ1VwZGF0ZQogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGFubm90YXRpb25zOgogICAgICAgICMgZW5zdXJlIHBvZHMgcm9sbCB3aGVuIGNvbmZpZ21hcCB1cGRhdGVzCiAgICAgICAgY2lsaXVtLmlvL2NpbGl1bS1jb25maWdtYXAtY2hlY2tzdW06ICJkMTAwMDY4N2ZiMWZiZGJmMmNhMWYxMWE5OGE0MDMyNTk3MGMwN2NkOGVhY2RkNmFkN2Q2NjRhMGY1MjJhNDhhIgogICAgICBsYWJlbHM6CiAgICAgICAgaW8uY2lsaXVtL2FwcDogb3BlcmF0b3IKICAgICAgICBuYW1lOiBjaWxpdW0tb3BlcmF0b3IKICAgIHNwZWM6CiAgICAgIGNvbnRhaW5lcnM6CiAgICAgIC0gbmFtZTogY2lsaXVtLW9wZXJhdG9yCiAgICAgICAgaW1hZ2U6IHF1YXkuaW8vY2lsaXVtL29wZXJhdG9yLWdlbmVyaWM6djEuMTIuMkBzaGEyNTY6MDA1MDhmNzhkYWU1NDEyMTYxZmE0MGVlMzAwNjljMjgwMmFlZjIwZjdiZGQyMGU5MTQyMzEwM2JhOGMwZGY2ZQogICAgICAgIGltYWdlUHVsbFBvbGljeTogSWZOb3RQcmVzZW50CiAgICAgICAgY29tbWFuZDoKICAgICAgICAtIGNpbGl1bS1vcGVyYXRvci1nZW5lcmljCiAgICAgICAgYXJnczoKICAgICAgICAtIC0tY29uZmlnLWRpcj0vdG1wL2NpbGl1bS9jb25maWctbWFwCiAgICAgICAgLSAtLWRlYnVnPSQoQ0lMSVVNX0RFQlVHKQogICAgICAgIGVudjoKICAgICAgICAtIG5hbWU6IEs4U19OT0RFX05BTUUKICAgICAgICAgIHZhbHVlRnJvbToKICAgICAgICAgICAgZmllbGRSZWY6CiAgICAgICAgICAgICAgYXBpVmVyc2lvbjogdjEKICAgICAgICAgICAgICBmaWVsZFBhdGg6IHNwZWMubm9kZU5hbWUKICAgICAgICAtIG5hbWU6IENJTElVTV9LOFNfTkFNRVNQQUNFCiAgICAgICAgICB2YWx1ZUZyb206CiAgICAgICAgICAgIGZpZWxkUmVmOgogICAgICAgICAgICAgIGFwaVZlcnNpb246IHYxCiAgICAgICAgICAgICAgZmllbGRQYXRoOiBtZXRhZGF0YS5uYW1lc3BhY2UKICAgICAgICAtIG5hbWU6IENJTElVTV9ERUJVRwogICAgICAgICAgdmFsdWVGcm9tOgogICAgICAgICAgICBjb25maWdNYXBLZXlSZWY6CiAgICAgICAgICAgICAga2V5OiBkZWJ1ZwogICAgICAgICAgICAgIG5hbWU6IGNpbGl1bS1jb25maWcKICAgICAgICAgICAgICBvcHRpb25hbDogdHJ1ZQogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAiMTcyLjE4LjIuMjUyIgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX1BPUlQKICAgICAgICAgIHZhbHVlOiAiNjQ0MyIKICAgICAgICBsaXZlbmVzc1Byb2JlOgogICAgICAgICAgaHR0cEdldDoKICAgICAgICAgICAgaG9zdDogIjEyNy4wLjAuMSIKICAgICAgICAgICAgcGF0aDogL2hlYWx0aHoKICAgICAgICAgICAgcG9ydDogOTIzNAogICAgICAgICAgICBzY2hlbWU6IEhUVFAKICAgICAgICAgIGluaXRpYWxEZWxheVNlY29uZHM6IDYwCiAgICAgICAgICBwZXJpb2RTZWNvbmRzOiAxMAogICAgICAgICAgdGltZW91dFNlY29uZHM6IDMKICAgICAgICB2b2x1bWVNb3VudHM6CiAgICAgICAgLSBuYW1lOiBjaWxpdW0tY29uZmlnLXBhdGgKICAgICAgICAgIG1vdW50UGF0aDogL3RtcC9jaWxpdW0vY29uZmlnLW1hcAogICAgICAgICAgcmVhZE9ubHk6IHRydWUKICAgICAgICB0ZXJtaW5hdGlvbk1lc3NhZ2VQb2xpY3k6IEZhbGxiYWNrVG9Mb2dzT25FcnJvcgogICAgICBob3N0TmV0d29yazogdHJ1ZQogICAgICByZXN0YXJ0UG9saWN5OiBBbHdheXMKICAgICAgcHJpb3JpdHlDbGFzc05hbWU6IHN5c3RlbS1jbHVzdGVyLWNyaXRpY2FsCiAgICAgIHNlcnZpY2VBY2NvdW50OiAiY2lsaXVtLW9wZXJhdG9yIgogICAgICBzZXJ2aWNlQWNjb3VudE5hbWU6ICJjaWxpdW0tb3BlcmF0b3IiCiAgICAgICMgSW4gSEEgbW9kZSwgY2lsaXVtLW9wZXJhdG9yIHBvZHMgbXVzdCBub3QgYmUgc2NoZWR1bGVkIG9uIHRoZSBzYW1lCiAgICAgICMgbm9kZSBhcyB0aGV5IHdpbGwgY2xhc2ggd2l0aCBlYWNoIG90aGVyLgogICAgICBhZmZpbml0eToKICAgICAgICBwb2RBbnRpQWZmaW5pdHk6CiAgICAgICAgICByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uOgogICAgICAgICAgLSBsYWJlbFNlbGVjdG9yOgogICAgICAgICAgICAgIG1hdGNoTGFiZWxzOgogICAgICAgICAgICAgICAgaW8uY2lsaXVtL2FwcDogb3BlcmF0b3IKICAgICAgICAgICAgdG9wb2xvZ3lLZXk6IGt1YmVybmV0ZXMuaW8vaG9zdG5hbWUKICAgICAgbm9kZVNlbGVjdG9yOgogICAgICAgIGt1YmVybmV0ZXMuaW8vb3M6IGxpbnV4CiAgICAgIHRvbGVyYXRpb25zOgogICAgICAgIC0gb3BlcmF0b3I6IEV4aXN0cwogICAgICB2b2x1bWVzOgogICAgICAgICMgVG8gcmVhZCB0aGUgY29uZmlndXJhdGlvbiBmcm9tIHRoZSBjb25maWcgbWFwCiAgICAgIC0gbmFtZTogY2lsaXVtLWNvbmZpZy1wYXRoCiAgICAgICAgY29uZmlnTWFwOgogICAgICAgICAgbmFtZTogY2lsaXVtLWNvbmZpZwo=\"\n    - path: /var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\"\nsystemd:\n  units:\n    - name: k3s-install.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install k3s\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/k3s-install.sh\n        ConditionPathExists=!/opt/bin/k3s\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        Environment=\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\"\n        Environment=\"INSTALL_K3S_EXEC=--cluster-init\"\n        ExecStart=/usr/bin/sh -c \"/opt/k3s-install.sh\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: remove-runonce-manifests.service\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        ConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\n    - name: remove-runonce-manifests.timer\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        [Timer]\n        OnBootSec=10min\n        [Install]\n        WantedBy=timers.target\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "465542726",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node01.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/k3s-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.k3s.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/k3s/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Install k3s\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/k3s-install.sh\\nConditionPathExists=!/opt/bin/k3s\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nEnvironment=\\\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\\\"\\nEnvironment=\\\"INSTALL_K3S_EXEC=--cluster-init\\\"\\nExecStart=/usr/bin/sh -c \\\"/opt/k3s-install.sh\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"k3s-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=10min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nstorage:\n  files:\n    - path: \"/etc/hostname\"\n      mode: 0644\n      overwrite: true\n      contents:\n        source: \"data:,node02.cho.rtrox.com\"\n    - path: /opt/k3s-install.sh\n      mode: 0777\n      contents:\n        source: https://get.k3s.io\n    - path: /etc/rancher/k3s/config.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\"\n    - path: /var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,\"\n    - path: /var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\"\nsystemd:\n  units:\n    - name: k3s-install.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install k3s\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/k3s-install.sh\n        ConditionPathExists=!/opt/bin/k3s\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        Environment=\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\"\n        Environment=\"INSTALL_K3S_EXEC='--server' 'https://172.18.2.252:6443'\"\n        ExecStart=/usr/bin/sh -c \"/opt/k3s-install.sh\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: remove-runonce-manifests.service\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        ConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\n    - name: remove-runonce-manifests.timer\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        [Timer]\n        OnBootSec=10min\n        [Install]\n        WantedBy=timers.target\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "2989237136",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node02.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/k3s-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.k3s.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/k3s/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Install k3s\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/k3s-install.sh\\nConditionPathExists=!/opt/bin/k3s\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nEnvironment=\\\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\\\"\\nEnvironment=\\\"INSTALL_K3S_EXEC='--server' 'https://172.18.2.252:6443'\\\"\\nExecStart=/usr/bin/sh -c \\\"/opt/k3s-install.sh\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"k3s-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=10min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "content": "---\nvariant: flatcar\nversion: 1.0.0\nstorage:\n  files:\n    - path: \"/etc/hostname\"\n      mode: 0644\n      overwrite: true\n      contents:\n        source: \"data:,node03.cho.rtrox.com\"\n    - path: /opt/k3s-install.sh\n      mode: 0777\n      contents:\n        source: https://get.k3s.io\n    - path: /etc/rancher/k3s/config.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\"\n    - path: /var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,\"\n    - path: /var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\n      mode: 0644\n      contents:\n        source: \"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\"\nsystemd:\n  units:\n    - name: k3s-install.service\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Install k3s\n        Wants = network-online.target\n        After = network.target network-online.target\n        ConditionPathExists=/opt/k3s-install.sh\n        ConditionPathExists=!/opt/bin/k3s\n        [Service]\n        Type=forking\n        TimeoutStartSec=180\n        RemainAfterExit=yes\n        KillMode=process\n        Environment=\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\"\n        Environment=\"INSTALL_K3S_EXEC='--server' 'https://172.18.2.252:6443'\"\n        ExecStart=/usr/bin/sh -c \"/opt/k3s-install.sh\"\n        [Install]\n        WantedBy=multi-user.target\n    - name: remove-runonce-manifests.service\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        ConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\n        [Service]\n        Type=oneshot\n        RemainAfterExit=yes\n        KillMode=process\n        ExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\n    - name: remove-runonce-manifests.timer\n      enabled: true\n      contents: |\n        [Unit]\n        Description=Remove runonce manifests\n        [Timer]\n        OnBootSec=10min\n        [Install]\n        WantedBy=timers.target\npasswd:\n  users:\n    - name: core\n      ssh_authorized_keys: [\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]\n",
            "id": "4267208654",
            "platform": null,
            "pretty_print": false,
            "rendered": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node03.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/k3s-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.k3s.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/k3s/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Install k3s\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/k3s-install.sh\\nConditionPathExists=!/opt/bin/k3s\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nEnvironment=\\\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\\\"\\nEnvironment=\\\"INSTALL_K3S_EXEC='--server' 'https://172.18.2.252:6443'\\\"\\nExecStart=/usr/bin/sh -c \\\"/opt/k3s-install.sh\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"k3s-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=10min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"}]}}",
            "snippets": null,
            "strict": true
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "template_file",
      "name": "cilium-install",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "b071ce70fa59b2fd29bf16d15c5950eed5215aa2c7d70f68fa2d9bca64f2aa40",
            "rendered": "---\n# Source: cilium/templates/cilium-agent/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cilium-config\n  namespace: kube-system\ndata:\n\n  # Identity allocation mode selects how identities are shared between cilium\n  # nodes by setting how they are stored. The options are \"crd\" or \"kvstore\".\n  # - \"crd\" stores identities in kubernetes as CRDs (custom resource definition).\n  #   These can be queried with:\n  #     kubectl get ciliumid\n  # - \"kvstore\" stores identities in an etcd kvstore, that is\n  #   configured below. Cilium versions before 1.6 supported only the kvstore\n  #   backend. Upgrades from these older cilium versions should continue using\n  #   the kvstore by commenting out the identity-allocation-mode below, or\n  #   setting it to \"kvstore\".\n  identity-allocation-mode: crd\n  cilium-endpoint-gc-interval: \"5m0s\"\n  nodes-gc-interval: \"5m0s\"\n  # Disable the usage of CiliumEndpoint CRD\n  disable-endpoint-crd: \"false\"\n\n  # If you want to run cilium in debug mode change this value to true\n  debug: \"false\"\n  # The agent can be put into the following three policy enforcement modes\n  # default, always and never.\n  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes\n  enable-policy: \"default\"\n\n  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4\n  # address.\n  enable-ipv4: \"true\"\n\n  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6\n  # address.\n  enable-ipv6: \"false\"\n  # Users who wish to specify their own custom CNI configuration file must set\n  # custom-cni-conf to \"true\", otherwise Cilium may overwrite the configuration.\n  custom-cni-conf: \"false\"\n  enable-bpf-clock-probe: \"true\"\n  # If you want cilium monitor to aggregate tracing for packets, set this level\n  # to \"low\", \"medium\", or \"maximum\". The higher the level, the less packets\n  # that will be seen in monitor output.\n  monitor-aggregation: medium\n\n  # The monitor aggregation interval governs the typical time between monitor\n  # notification events for each allowed connection.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-interval: 5s\n\n  # The monitor aggregation flags determine which TCP flags which, upon the\n  # first observation, cause monitor notifications to be generated.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-flags: all\n  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic\n  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.\n  bpf-map-dynamic-size-ratio: \"0.0025\"\n  # bpf-policy-map-max specifies the maximum number of entries in endpoint\n  # policy map (per endpoint)\n  bpf-policy-map-max: \"16384\"\n  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,\n  # backend and affinity maps.\n  bpf-lb-map-max: \"65536\"\n  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass\n  # optimization for nodeport reverse NAT handling.\n  bpf-lb-external-clusterip: \"false\"\n\n  # Pre-allocation of map entries allows per-packet latency to be reduced, at\n  # the expense of up-front memory allocation for the entries in the maps. The\n  # default value below will minimize memory usage in the default installation;\n  # users who are sensitive to latency may consider setting this to \"true\".\n  #\n  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore\n  # this option and behave as though it is set to \"true\".\n  #\n  # If this value is modified, then during the next Cilium startup the restore\n  # of existing endpoints and tracking of ongoing connections may be disrupted.\n  # As a result, reply packets may be dropped and the load-balancing decisions\n  # for established connections may change.\n  #\n  # If this option is set to \"false\" during an upgrade from 1.3 or earlier to\n  # 1.4 or later, then it may cause one-time disruptions during the upgrade.\n  preallocate-bpf-maps: \"false\"\n\n  # Regular expression matching compatible Istio sidecar istio-proxy\n  # container image names\n  sidecar-istio-proxy-image: \"cilium/istio_proxy\"\n\n  # Name of the cluster. Only relevant when building a mesh of clusters.\n  cluster-name: chongus\n  # Unique ID of the cluster. Must be unique across all conneted clusters and\n  # in the range of 1 and 255. Only relevant when building a mesh of clusters.\n  cluster-id: \"1\"\n\n  # Encapsulation mode for communication between nodes\n  # Possible values:\n  #   - disabled\n  #   - vxlan (default)\n  #   - geneve\n  tunnel: \"disabled\"\n  # Enables L7 proxy for L7 policy enforcement and visibility\n  enable-l7-proxy: \"true\"\n\n  enable-ipv4-masquerade: \"true\"\n  enable-ipv6-masquerade: \"true\"\n\n  enable-xt-socket-fallback: \"true\"\n  install-iptables-rules: \"true\"\n  install-no-conntrack-iptables-rules: \"false\"\n\n  auto-direct-node-routes: \"true\"\n  enable-local-redirect-policy: \"true\"\n  ipv4-native-routing-cidr: 10.42.0.0/16\n\n  kube-proxy-replacement: \"strict\"\n  kube-proxy-replacement-healthz-bind-address: \"0.0.0.0:10256\"\n  bpf-lb-sock: \"false\"\n  enable-health-check-nodeport: \"true\"\n  node-port-bind-protection: \"true\"\n  enable-auto-protect-node-port-range: \"true\"\n  bpf-lb-mode: \"dsr\"\n  bpf-lb-algorithm: \"maglev\"\n  enable-svc-source-range-check: \"true\"\n  enable-l2-neigh-discovery: \"true\"\n  arping-refresh-period: \"30s\"\n  enable-endpoint-routes: \"true\"\n  enable-endpoint-health-checking: \"true\"\n  enable-health-checking: \"true\"\n  enable-well-known-identities: \"false\"\n  enable-remote-node-identity: \"true\"\n  synchronize-k8s-nodes: \"true\"\n  operator-api-serve-addr: \"127.0.0.1:9234\"\n  ipam: \"kubernetes\"\n  disable-cnp-status-updates: \"true\"\n  enable-vtep: \"false\"\n  vtep-endpoint: \"\"\n  vtep-cidr: \"\"\n  vtep-mask: \"\"\n  vtep-mac: \"\"\n  enable-bgp-control-plane: \"false\"\n  bpf-root: \"/sys/fs/bpf\"\n  cgroup-root: \"/sys/fs/cgroup\"\n  enable-k8s-terminating-endpoint: \"true\"\n  remove-cilium-node-taints: \"true\"\n  set-cilium-is-up-condition: \"true\"\n  unmanaged-pod-watcher-interval: \"15\"\n  tofqdns-dns-reject-response-code: \"refused\"\n  tofqdns-enable-dns-compression: \"true\"\n  tofqdns-endpoint-max-ip-per-hostname: \"50\"\n  tofqdns-idle-connection-grace-period: \"0s\"\n  tofqdns-max-deferred-connection-deletes: \"10000\"\n  tofqdns-min-ttl: \"3600\"\n  tofqdns-proxy-response-max-delay: \"100ms\"\n  agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\"\n---\n# Source: cilium/templates/cilium-agent/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium\nrules:\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - networkpolicies\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  - services\n  - pods\n  - endpoints\n  - nodes\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - list\n  - watch\n  # This is used when validating policies in preflight. This will need to stay\n  # until we figure out how to avoid \"get\" inside the preflight, and then\n  # should be removed ideally.\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumbgploadbalancerippools\n  - ciliumbgppeeringpolicies\n  - ciliumclusterwideenvoyconfigs\n  - ciliumclusterwidenetworkpolicies\n  - ciliumegressgatewaypolicies\n  - ciliumegressnatpolicies\n  - ciliumendpoints\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  - ciliumidentities\n  - ciliumlocalredirectpolicies\n  - ciliumnetworkpolicies\n  - ciliumnodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  - ciliumendpoints\n  - ciliumnodes\n  verbs:\n  - create\n- apiGroups:\n  - cilium.io\n  # To synchronize garbage collection of such resources\n  resources:\n  - ciliumidentities\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  verbs:\n  - delete\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  - ciliumnodes/status\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  - ciliumendpoints/status\n  - ciliumendpoints\n  verbs:\n  - patch\n---\n# Source: cilium/templates/cilium-operator/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium-operator\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n  # to automatically delete [core|kube]dns pods so that are starting to being\n  # managed by Cilium\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # To remove node taints\n  - nodes\n  # To set NetworkUnavailable false on startup\n  - nodes/status\n  verbs:\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform LB IP allocation for BGP\n  - services/status\n  verbs:\n  - update\n- apiGroups:\n  - \"\"\n  resources:\n  # to check apiserver connectivity\n  - namespaces\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform the translation of a CNP that contains `ToGroup` to its endpoints\n  - services\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies\n  - ciliumclusterwidenetworkpolicies\n  verbs:\n  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'\n  - create\n  - update\n  - deletecollection\n  # To update the status of the CNPs and CCNPs\n  - patch\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  verbs:\n  # Update the auto-generated CNPs and CCNPs status.\n  - patch\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  - ciliumidentities\n  verbs:\n  # To perform garbage collection of such resources\n  - delete\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  verbs:\n  # To synchronize garbage collection of such resources\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n    # To perform CiliumNode garbage collector\n  - delete\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes/status\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n  - delete\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - update\n  resourceNames:\n  - ciliumbgploadbalancerippools.cilium.io\n  - ciliumbgppeeringpolicies.cilium.io\n  - ciliumclusterwideenvoyconfigs.cilium.io\n  - ciliumclusterwidenetworkpolicies.cilium.io\n  - ciliumegressgatewaypolicies.cilium.io\n  - ciliumegressnatpolicies.cilium.io\n  - ciliumendpoints.cilium.io\n  - ciliumendpointslices.cilium.io\n  - ciliumenvoyconfigs.cilium.io\n  - ciliumexternalworkloads.cilium.io\n  - ciliumidentities.cilium.io\n  - ciliumlocalredirectpolicies.cilium.io\n  - ciliumnetworkpolicies.cilium.io\n  - ciliumnodes.cilium.io\n# For cilium-operator running in HA mode.\n#\n# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election\n# between multiple running instances.\n# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less\n# common and fewer objects in the cluster watch \"all Leases\".\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n  - get\n  - update\n---\n# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium-operator\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium-operator\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-agent/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: cilium\n  namespace: kube-system\n  labels:\n    k8s-app: cilium\nspec:\n  selector:\n    matchLabels:\n      k8s-app: cilium\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 2\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"d1000687fb1fbdbf2ca1f11a98a40325970c07cd8eacdd6ad7d664a0f522a48a\"\n      labels:\n        k8s-app: cilium\n    spec:\n      containers:\n      - name: cilium-agent\n        image: \"quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        startupProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          failureThreshold: 105\n          periodSeconds: 2\n          successThreshold: 1\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n          timeoutSeconds: 5\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_CLUSTERMESH_CONFIG\n          value: /var/lib/cilium/clustermesh/\n        - name: CILIUM_CNI_CHAINING_MODE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: cni-chaining-mode\n              optional: true\n        - name: CILIUM_CUSTOM_CNI_CONF\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: custom-cni-conf\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"172.18.2.252\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - \"/cni-install.sh\"\n              - \"--enable-debug=false\"\n              - \"--cni-exclusive=true\"\n              - \"--log-file=/var/run/cilium/cilium-cni.log\"\n          preStop:\n            exec:\n              command:\n              - /cni-uninstall.sh\n        securityContext:\n          privileged: true\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          mountPropagation: Bidirectional\n        # Check for duplicate mounts before mounting\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        - name: cni-path\n          mountPath: /host/opt/cni/bin\n        - name: etc-cni-netd\n          mountPath: /host/etc/cni/net.d\n        - name: clustermesh-secrets\n          mountPath: /var/lib/cilium/clustermesh\n          readOnly: true\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n          # Needed to be able to load kernel modules\n        - name: lib-modules\n          mountPath: /lib/modules\n          readOnly: true\n        - name: xtables-lock\n          mountPath: /run/xtables.lock\n      initContainers:\n      - name: clean-cilium-state\n        image: \"quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - /init-container.sh\n        env:\n        - name: CILIUM_ALL_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-state\n              optional: true\n        - name: CILIUM_BPF_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-bpf-state\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"172.18.2.252\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          # Required to mount cgroup filesystem from the host to cilium agent pod\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n          mountPropagation: HostToContainer\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        resources:\n          requests:\n            cpu: 100m\n            memory: 100Mi # wait-for-kube-proxy\n      restartPolicy: Always\n      priorityClassName: system-node-critical\n      serviceAccount: \"cilium\"\n      serviceAccountName: \"cilium\"\n      terminationGracePeriodSeconds: 1\n      hostNetwork: true\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To keep state between restarts / upgrades\n      - name: cilium-run\n        hostPath:\n          path: /var/run/cilium\n          type: DirectoryOrCreate\n        # To keep state between restarts / upgrades for bpf maps\n      - name: bpf-maps\n        hostPath:\n          path: /sys/fs/bpf\n          type: DirectoryOrCreate\n      # To keep state between restarts / upgrades for cgroup2 filesystem\n      - name: cilium-cgroup\n        hostPath:\n          path: /sys/fs/cgroup\n          type: DirectoryOrCreate\n      # To install cilium cni plugin in the host\n      - name: cni-path\n        hostPath:\n          path:  /opt/cni/bin\n          type: DirectoryOrCreate\n        # To install cilium cni configuration in the host\n      - name: etc-cni-netd\n        hostPath:\n          path: /etc/cni/net.d\n          type: DirectoryOrCreate\n        # To be able to load kernel modules\n      - name: lib-modules\n        hostPath:\n          path: /lib/modules\n        # To access iptables concurrently with other processes (e.g. kube-proxy)\n      - name: xtables-lock\n        hostPath:\n          path: /run/xtables.lock\n          type: FileOrCreate\n        # To read the clustermesh configuration\n      - name: clustermesh-secrets\n        secret:\n          secretName: cilium-clustermesh\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          optional: true\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n---\n# Source: cilium/templates/cilium-operator/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cilium-operator\n  namespace: kube-system\n  labels:\n    io.cilium/app: operator\n    name: cilium-operator\nspec:\n  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go\n  # for more details.\n  replicas: 2\n  selector:\n    matchLabels:\n      io.cilium/app: operator\n      name: cilium-operator\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"d1000687fb1fbdbf2ca1f11a98a40325970c07cd8eacdd6ad7d664a0f522a48a\"\n      labels:\n        io.cilium/app: operator\n        name: cilium-operator\n    spec:\n      containers:\n      - name: cilium-operator\n        image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-operator-generic\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        - --debug=$(CILIUM_DEBUG)\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_DEBUG\n          valueFrom:\n            configMapKeyRef:\n              key: debug\n              name: cilium-config\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"172.18.2.252\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9234\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          timeoutSeconds: 3\n        volumeMounts:\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n        terminationMessagePolicy: FallbackToLogsOnError\n      hostNetwork: true\n      restartPolicy: Always\n      priorityClassName: system-cluster-critical\n      serviceAccount: \"cilium-operator\"\n      serviceAccountName: \"cilium-operator\"\n      # In HA mode, cilium-operator pods must not be scheduled on the same\n      # node as they will clash with each other.\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                io.cilium/app: operator\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n",
            "template": "---\n# Source: cilium/templates/cilium-agent/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cilium-config\n  namespace: kube-system\ndata:\n\n  # Identity allocation mode selects how identities are shared between cilium\n  # nodes by setting how they are stored. The options are \"crd\" or \"kvstore\".\n  # - \"crd\" stores identities in kubernetes as CRDs (custom resource definition).\n  #   These can be queried with:\n  #     kubectl get ciliumid\n  # - \"kvstore\" stores identities in an etcd kvstore, that is\n  #   configured below. Cilium versions before 1.6 supported only the kvstore\n  #   backend. Upgrades from these older cilium versions should continue using\n  #   the kvstore by commenting out the identity-allocation-mode below, or\n  #   setting it to \"kvstore\".\n  identity-allocation-mode: crd\n  cilium-endpoint-gc-interval: \"5m0s\"\n  nodes-gc-interval: \"5m0s\"\n  # Disable the usage of CiliumEndpoint CRD\n  disable-endpoint-crd: \"false\"\n\n  # If you want to run cilium in debug mode change this value to true\n  debug: \"false\"\n  # The agent can be put into the following three policy enforcement modes\n  # default, always and never.\n  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes\n  enable-policy: \"default\"\n\n  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4\n  # address.\n  enable-ipv4: \"true\"\n\n  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6\n  # address.\n  enable-ipv6: \"false\"\n  # Users who wish to specify their own custom CNI configuration file must set\n  # custom-cni-conf to \"true\", otherwise Cilium may overwrite the configuration.\n  custom-cni-conf: \"false\"\n  enable-bpf-clock-probe: \"true\"\n  # If you want cilium monitor to aggregate tracing for packets, set this level\n  # to \"low\", \"medium\", or \"maximum\". The higher the level, the less packets\n  # that will be seen in monitor output.\n  monitor-aggregation: medium\n\n  # The monitor aggregation interval governs the typical time between monitor\n  # notification events for each allowed connection.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-interval: 5s\n\n  # The monitor aggregation flags determine which TCP flags which, upon the\n  # first observation, cause monitor notifications to be generated.\n  #\n  # Only effective when monitor aggregation is set to \"medium\" or higher.\n  monitor-aggregation-flags: all\n  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic\n  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.\n  bpf-map-dynamic-size-ratio: \"0.0025\"\n  # bpf-policy-map-max specifies the maximum number of entries in endpoint\n  # policy map (per endpoint)\n  bpf-policy-map-max: \"16384\"\n  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,\n  # backend and affinity maps.\n  bpf-lb-map-max: \"65536\"\n  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass\n  # optimization for nodeport reverse NAT handling.\n  bpf-lb-external-clusterip: \"false\"\n\n  # Pre-allocation of map entries allows per-packet latency to be reduced, at\n  # the expense of up-front memory allocation for the entries in the maps. The\n  # default value below will minimize memory usage in the default installation;\n  # users who are sensitive to latency may consider setting this to \"true\".\n  #\n  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore\n  # this option and behave as though it is set to \"true\".\n  #\n  # If this value is modified, then during the next Cilium startup the restore\n  # of existing endpoints and tracking of ongoing connections may be disrupted.\n  # As a result, reply packets may be dropped and the load-balancing decisions\n  # for established connections may change.\n  #\n  # If this option is set to \"false\" during an upgrade from 1.3 or earlier to\n  # 1.4 or later, then it may cause one-time disruptions during the upgrade.\n  preallocate-bpf-maps: \"false\"\n\n  # Regular expression matching compatible Istio sidecar istio-proxy\n  # container image names\n  sidecar-istio-proxy-image: \"cilium/istio_proxy\"\n\n  # Name of the cluster. Only relevant when building a mesh of clusters.\n  cluster-name: ${cluster_name}\n  # Unique ID of the cluster. Must be unique across all conneted clusters and\n  # in the range of 1 and 255. Only relevant when building a mesh of clusters.\n  cluster-id: \"1\"\n\n  # Encapsulation mode for communication between nodes\n  # Possible values:\n  #   - disabled\n  #   - vxlan (default)\n  #   - geneve\n  tunnel: \"disabled\"\n  # Enables L7 proxy for L7 policy enforcement and visibility\n  enable-l7-proxy: \"true\"\n\n  enable-ipv4-masquerade: \"true\"\n  enable-ipv6-masquerade: \"true\"\n\n  enable-xt-socket-fallback: \"true\"\n  install-iptables-rules: \"true\"\n  install-no-conntrack-iptables-rules: \"false\"\n\n  auto-direct-node-routes: \"true\"\n  enable-local-redirect-policy: \"true\"\n  ipv4-native-routing-cidr: 10.42.0.0/16\n\n  kube-proxy-replacement: \"strict\"\n  kube-proxy-replacement-healthz-bind-address: \"0.0.0.0:10256\"\n  bpf-lb-sock: \"false\"\n  enable-health-check-nodeport: \"true\"\n  node-port-bind-protection: \"true\"\n  enable-auto-protect-node-port-range: \"true\"\n  bpf-lb-mode: \"dsr\"\n  bpf-lb-algorithm: \"maglev\"\n  enable-svc-source-range-check: \"true\"\n  enable-l2-neigh-discovery: \"true\"\n  arping-refresh-period: \"30s\"\n  enable-endpoint-routes: \"true\"\n  enable-endpoint-health-checking: \"true\"\n  enable-health-checking: \"true\"\n  enable-well-known-identities: \"false\"\n  enable-remote-node-identity: \"true\"\n  synchronize-k8s-nodes: \"true\"\n  operator-api-serve-addr: \"127.0.0.1:9234\"\n  ipam: \"kubernetes\"\n  disable-cnp-status-updates: \"true\"\n  enable-vtep: \"false\"\n  vtep-endpoint: \"\"\n  vtep-cidr: \"\"\n  vtep-mask: \"\"\n  vtep-mac: \"\"\n  enable-bgp-control-plane: \"false\"\n  bpf-root: \"/sys/fs/bpf\"\n  cgroup-root: \"/sys/fs/cgroup\"\n  enable-k8s-terminating-endpoint: \"true\"\n  remove-cilium-node-taints: \"true\"\n  set-cilium-is-up-condition: \"true\"\n  unmanaged-pod-watcher-interval: \"15\"\n  tofqdns-dns-reject-response-code: \"refused\"\n  tofqdns-enable-dns-compression: \"true\"\n  tofqdns-endpoint-max-ip-per-hostname: \"50\"\n  tofqdns-idle-connection-grace-period: \"0s\"\n  tofqdns-max-deferred-connection-deletes: \"10000\"\n  tofqdns-min-ttl: \"3600\"\n  tofqdns-proxy-response-max-delay: \"100ms\"\n  agent-not-ready-taint-key: \"node.cilium.io/agent-not-ready\"\n---\n# Source: cilium/templates/cilium-agent/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium\nrules:\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - networkpolicies\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - namespaces\n  - services\n  - pods\n  - endpoints\n  - nodes\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - list\n  - watch\n  # This is used when validating policies in preflight. This will need to stay\n  # until we figure out how to avoid \"get\" inside the preflight, and then\n  # should be removed ideally.\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumbgploadbalancerippools\n  - ciliumbgppeeringpolicies\n  - ciliumclusterwideenvoyconfigs\n  - ciliumclusterwidenetworkpolicies\n  - ciliumegressgatewaypolicies\n  - ciliumegressnatpolicies\n  - ciliumendpoints\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  - ciliumidentities\n  - ciliumlocalredirectpolicies\n  - ciliumnetworkpolicies\n  - ciliumnodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  - ciliumendpoints\n  - ciliumnodes\n  verbs:\n  - create\n- apiGroups:\n  - cilium.io\n  # To synchronize garbage collection of such resources\n  resources:\n  - ciliumidentities\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  verbs:\n  - delete\n  - get\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  - ciliumnodes/status\n  verbs:\n  - get\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  - ciliumendpoints/status\n  - ciliumendpoints\n  verbs:\n  - patch\n---\n# Source: cilium/templates/cilium-operator/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: cilium-operator\nrules:\n- apiGroups:\n  - \"\"\n  resources:\n  - pods\n  verbs:\n  - get\n  - list\n  - watch\n  # to automatically delete [core|kube]dns pods so that are starting to being\n  # managed by Cilium\n  - delete\n- apiGroups:\n  - \"\"\n  resources:\n  - nodes\n  verbs:\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # To remove node taints\n  - nodes\n  # To set NetworkUnavailable false on startup\n  - nodes/status\n  verbs:\n  - patch\n- apiGroups:\n  - discovery.k8s.io\n  resources:\n  - endpointslices\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform LB IP allocation for BGP\n  - services/status\n  verbs:\n  - update\n- apiGroups:\n  - \"\"\n  resources:\n  # to check apiserver connectivity\n  - namespaces\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  # to perform the translation of a CNP that contains `ToGroup` to its endpoints\n  - services\n  - endpoints\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies\n  - ciliumclusterwidenetworkpolicies\n  verbs:\n  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'\n  - create\n  - update\n  - deletecollection\n  # To update the status of the CNPs and CCNPs\n  - patch\n  - get\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnetworkpolicies/status\n  - ciliumclusterwidenetworkpolicies/status\n  verbs:\n  # Update the auto-generated CNPs and CCNPs status.\n  - patch\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpoints\n  - ciliumidentities\n  verbs:\n  # To perform garbage collection of such resources\n  - delete\n  - list\n  - watch\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumidentities\n  verbs:\n  # To synchronize garbage collection of such resources\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n    # To perform CiliumNode garbage collector\n  - delete\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumnodes/status\n  verbs:\n  - update\n- apiGroups:\n  - cilium.io\n  resources:\n  - ciliumendpointslices\n  - ciliumenvoyconfigs\n  verbs:\n  - create\n  - update\n  - get\n  - list\n  - watch\n  - delete\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - create\n  - get\n  - list\n  - watch\n- apiGroups:\n  - apiextensions.k8s.io\n  resources:\n  - customresourcedefinitions\n  verbs:\n  - update\n  resourceNames:\n  - ciliumbgploadbalancerippools.cilium.io\n  - ciliumbgppeeringpolicies.cilium.io\n  - ciliumclusterwideenvoyconfigs.cilium.io\n  - ciliumclusterwidenetworkpolicies.cilium.io\n  - ciliumegressgatewaypolicies.cilium.io\n  - ciliumegressnatpolicies.cilium.io\n  - ciliumendpoints.cilium.io\n  - ciliumendpointslices.cilium.io\n  - ciliumenvoyconfigs.cilium.io\n  - ciliumexternalworkloads.cilium.io\n  - ciliumidentities.cilium.io\n  - ciliumlocalredirectpolicies.cilium.io\n  - ciliumnetworkpolicies.cilium.io\n  - ciliumnodes.cilium.io\n# For cilium-operator running in HA mode.\n#\n# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election\n# between multiple running instances.\n# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less\n# common and fewer objects in the cluster watch \"all Leases\".\n- apiGroups:\n  - coordination.k8s.io\n  resources:\n  - leases\n  verbs:\n  - create\n  - get\n  - update\n---\n# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cilium-operator\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cilium-operator\nsubjects:\n- kind: ServiceAccount\n  name: \"cilium-operator\"\n  namespace: kube-system\n---\n# Source: cilium/templates/cilium-agent/daemonset.yaml\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: cilium\n  namespace: kube-system\n  labels:\n    k8s-app: cilium\nspec:\n  selector:\n    matchLabels:\n      k8s-app: cilium\n  updateStrategy:\n    rollingUpdate:\n      maxUnavailable: 2\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"d1000687fb1fbdbf2ca1f11a98a40325970c07cd8eacdd6ad7d664a0f522a48a\"\n      labels:\n        k8s-app: cilium\n    spec:\n      containers:\n      - name: cilium-agent\n        image: \"quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-agent\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        startupProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          failureThreshold: 105\n          periodSeconds: 2\n          successThreshold: 1\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 10\n          timeoutSeconds: 5\n        readinessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9879\n            scheme: HTTP\n            httpHeaders:\n            - name: \"brief\"\n              value: \"true\"\n          periodSeconds: 30\n          successThreshold: 1\n          failureThreshold: 3\n          timeoutSeconds: 5\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_CLUSTERMESH_CONFIG\n          value: /var/lib/cilium/clustermesh/\n        - name: CILIUM_CNI_CHAINING_MODE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: cni-chaining-mode\n              optional: true\n        - name: CILIUM_CUSTOM_CNI_CONF\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: custom-cni-conf\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"${api_vip}\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - \"/cni-install.sh\"\n              - \"--enable-debug=false\"\n              - \"--cni-exclusive=true\"\n              - \"--log-file=/var/run/cilium/cilium-cni.log\"\n          preStop:\n            exec:\n              command:\n              - /cni-uninstall.sh\n        securityContext:\n          privileged: true\n        terminationMessagePolicy: FallbackToLogsOnError\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          mountPropagation: Bidirectional\n        # Check for duplicate mounts before mounting\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        - name: cni-path\n          mountPath: /host/opt/cni/bin\n        - name: etc-cni-netd\n          mountPath: /host/etc/cni/net.d\n        - name: clustermesh-secrets\n          mountPath: /var/lib/cilium/clustermesh\n          readOnly: true\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n          # Needed to be able to load kernel modules\n        - name: lib-modules\n          mountPath: /lib/modules\n          readOnly: true\n        - name: xtables-lock\n          mountPath: /run/xtables.lock\n      initContainers:\n      - name: clean-cilium-state\n        image: \"quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36\"\n        imagePullPolicy: IfNotPresent\n        command:\n        - /init-container.sh\n        env:\n        - name: CILIUM_ALL_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-state\n              optional: true\n        - name: CILIUM_BPF_STATE\n          valueFrom:\n            configMapKeyRef:\n              name: cilium-config\n              key: clean-cilium-bpf-state\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"${api_vip}\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        terminationMessagePolicy: FallbackToLogsOnError\n        securityContext:\n          privileged: true\n        volumeMounts:\n        - name: bpf-maps\n          mountPath: /sys/fs/bpf\n          # Required to mount cgroup filesystem from the host to cilium agent pod\n        - name: cilium-cgroup\n          mountPath: /sys/fs/cgroup\n          mountPropagation: HostToContainer\n        - name: cilium-run\n          mountPath: /var/run/cilium\n        resources:\n          requests:\n            cpu: 100m\n            memory: 100Mi # wait-for-kube-proxy\n      restartPolicy: Always\n      priorityClassName: system-node-critical\n      serviceAccount: \"cilium\"\n      serviceAccountName: \"cilium\"\n      terminationGracePeriodSeconds: 1\n      hostNetwork: true\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                k8s-app: cilium\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To keep state between restarts / upgrades\n      - name: cilium-run\n        hostPath:\n          path: /var/run/cilium\n          type: DirectoryOrCreate\n        # To keep state between restarts / upgrades for bpf maps\n      - name: bpf-maps\n        hostPath:\n          path: /sys/fs/bpf\n          type: DirectoryOrCreate\n      # To keep state between restarts / upgrades for cgroup2 filesystem\n      - name: cilium-cgroup\n        hostPath:\n          path: /sys/fs/cgroup\n          type: DirectoryOrCreate\n      # To install cilium cni plugin in the host\n      - name: cni-path\n        hostPath:\n          path:  /opt/cni/bin\n          type: DirectoryOrCreate\n        # To install cilium cni configuration in the host\n      - name: etc-cni-netd\n        hostPath:\n          path: /etc/cni/net.d\n          type: DirectoryOrCreate\n        # To be able to load kernel modules\n      - name: lib-modules\n        hostPath:\n          path: /lib/modules\n        # To access iptables concurrently with other processes (e.g. kube-proxy)\n      - name: xtables-lock\n        hostPath:\n          path: /run/xtables.lock\n          type: FileOrCreate\n        # To read the clustermesh configuration\n      - name: clustermesh-secrets\n        secret:\n          secretName: cilium-clustermesh\n          # note: the leading zero means this number is in octal representation: do not remove it\n          defaultMode: 0400\n          optional: true\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n---\n# Source: cilium/templates/cilium-operator/deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cilium-operator\n  namespace: kube-system\n  labels:\n    io.cilium/app: operator\n    name: cilium-operator\nspec:\n  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go\n  # for more details.\n  replicas: 2\n  selector:\n    matchLabels:\n      io.cilium/app: operator\n      name: cilium-operator\n  strategy:\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n    type: RollingUpdate\n  template:\n    metadata:\n      annotations:\n        # ensure pods roll when configmap updates\n        cilium.io/cilium-configmap-checksum: \"d1000687fb1fbdbf2ca1f11a98a40325970c07cd8eacdd6ad7d664a0f522a48a\"\n      labels:\n        io.cilium/app: operator\n        name: cilium-operator\n    spec:\n      containers:\n      - name: cilium-operator\n        image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e\n        imagePullPolicy: IfNotPresent\n        command:\n        - cilium-operator-generic\n        args:\n        - --config-dir=/tmp/cilium/config-map\n        - --debug=$(CILIUM_DEBUG)\n        env:\n        - name: K8S_NODE_NAME\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: spec.nodeName\n        - name: CILIUM_K8S_NAMESPACE\n          valueFrom:\n            fieldRef:\n              apiVersion: v1\n              fieldPath: metadata.namespace\n        - name: CILIUM_DEBUG\n          valueFrom:\n            configMapKeyRef:\n              key: debug\n              name: cilium-config\n              optional: true\n        - name: KUBERNETES_SERVICE_HOST\n          value: \"${api_vip}\"\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        livenessProbe:\n          httpGet:\n            host: \"127.0.0.1\"\n            path: /healthz\n            port: 9234\n            scheme: HTTP\n          initialDelaySeconds: 60\n          periodSeconds: 10\n          timeoutSeconds: 3\n        volumeMounts:\n        - name: cilium-config-path\n          mountPath: /tmp/cilium/config-map\n          readOnly: true\n        terminationMessagePolicy: FallbackToLogsOnError\n      hostNetwork: true\n      restartPolicy: Always\n      priorityClassName: system-cluster-critical\n      serviceAccount: \"cilium-operator\"\n      serviceAccountName: \"cilium-operator\"\n      # In HA mode, cilium-operator pods must not be scheduled on the same\n      # node as they will clash with each other.\n      affinity:\n        podAntiAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n          - labelSelector:\n              matchLabels:\n                io.cilium/app: operator\n            topologyKey: kubernetes.io/hostname\n      nodeSelector:\n        kubernetes.io/os: linux\n      tolerations:\n        - operator: Exists\n      volumes:\n        # To read the configuration from the config map\n      - name: cilium-config-path\n        configMap:\n          name: cilium-config\n",
            "vars": {
              "api_vip": "172.18.2.252",
              "cluster_name": "chongus"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "template_file",
      "name": "k3s-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "2eb4f53e577f70797239eb77e30fd08b667a9a4a3fdfa50b321d8e1a283b1a62",
            "rendered": "---\ntls-san:\n  - api.cho.rtrox.com\n  - 172.18.2.252\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\nflannel-backend: none\ndisable-network-policy: true\ndisable:\n  - servicelb\n  - traefik\n  - local-storage\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "template": "---\ntls-san:\n  - ${api_fqdn}\n  - ${api_vip}\n# Disable KubeProxy in favor of Cilium\ndisable-kube-proxy: true\n# Disable Default CNI \u0026 Network Policy Enforcer\nflannel-backend: none\ndisable-network-policy: true\ndisable:\n  - servicelb\n  - traefik\n  - local-storage\n# Prepare k3s for prometheus metrics\nkube-controller-manager-arg:\n  - \"bind-address=0.0.0.0\"\nkube-proxy-arg:\n  - \"metrics-bind-address=0.0.0.0\"\nkube-scheduler-arg:\n  - \"bind-address=0.0.0.0\"\n# Controller Manager exposes etcd sqllite metrics\netcd-expose-metrics: true\n",
            "vars": {
              "api_fqdn": "api.cho.rtrox.com",
              "api_vip": "172.18.2.252"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "data",
      "type": "template_file",
      "name": "kube-vip",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "5a4720cb1b37f47fcf973a412acfef93b430440bcb4ec12406928442e8c6444f",
            "rendered": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  name: system:kube-vip-role\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"services\", \"services/status\", \"nodes\", \"endpoints\"]\n    verbs: [\"list\",\"get\",\"watch\", \"update\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    verbs: [\"list\", \"get\", \"watch\", \"update\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-vip-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-vip-role\nsubjects:\n- kind: ServiceAccount\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  creationTimestamp: null\n  labels:\n    app.kubernetes.io/name: kube-vip-ds\n    app.kubernetes.io/version: v0.5.7\n  name: kube-vip-ds\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-vip-ds\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app.kubernetes.io/name: kube-vip-ds\n        app.kubernetes.io/version: v0.5.7\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: node-role.kubernetes.io/master\n                operator: Exists\n            - matchExpressions:\n              - key: node-role.kubernetes.io/control-plane\n                operator: Exists\n      containers:\n      - args:\n        - manager\n        env:\n        - name: KUBERNETES_SERVICE_HOST\n          value: 127.0.0.1\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        - name: vip_arp\n          value: \"true\"\n        - name: port\n          value: \"6443\"\n        - name: vip_interface\n          value: eno1\n        - name: vip_cidr\n          value: \"32\"\n        - name: cp_enable\n          value: \"true\"\n        - name: cp_namespace\n          value: kube-system\n        - name: vip_ddns\n          value: \"false\"\n        - name: vip_leaderelection\n          value: \"true\"\n        - name: vip_leaseduration\n          value: \"5\"\n        - name: vip_renewdeadline\n          value: \"3\"\n        - name: vip_retryperiod\n          value: \"1\"\n        - name: address\n          value: 172.18.2.252\n        - name: prometheus_server\n          value: :2112\n        image: ghcr.io/kube-vip/kube-vip:v0.5.7\n        imagePullPolicy: Always\n        name: kube-vip\n        resources: {}\n        securityContext:\n          capabilities:\n            add:\n            - NET_ADMIN\n            - NET_RAW\n      hostNetwork: true\n      serviceAccountName: kube-vip\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      - effect: NoExecute\n        operator: Exists\n  updateStrategy: {}\nstatus:\n  currentNumberScheduled: 0\n  desiredNumberScheduled: 0\n  numberMisscheduled: 0\n  numberReady: 0\n",
            "template": "apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: \"true\"\n  name: system:kube-vip-role\nrules:\n  - apiGroups: [\"\"]\n    resources: [\"services\", \"services/status\", \"nodes\", \"endpoints\"]\n    verbs: [\"list\",\"get\",\"watch\", \"update\"]\n  - apiGroups: [\"coordination.k8s.io\"]\n    resources: [\"leases\"]\n    verbs: [\"list\", \"get\", \"watch\", \"update\", \"create\"]\n---\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: system:kube-vip-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:kube-vip-role\nsubjects:\n- kind: ServiceAccount\n  name: kube-vip\n  namespace: kube-system\n---\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  creationTimestamp: null\n  labels:\n    app.kubernetes.io/name: kube-vip-ds\n    app.kubernetes.io/version: v0.5.7\n  name: kube-vip-ds\n  namespace: kube-system\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: kube-vip-ds\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app.kubernetes.io/name: kube-vip-ds\n        app.kubernetes.io/version: v0.5.7\n    spec:\n      affinity:\n        nodeAffinity:\n          requiredDuringSchedulingIgnoredDuringExecution:\n            nodeSelectorTerms:\n            - matchExpressions:\n              - key: node-role.kubernetes.io/master\n                operator: Exists\n            - matchExpressions:\n              - key: node-role.kubernetes.io/control-plane\n                operator: Exists\n      containers:\n      - args:\n        - manager\n        env:\n        - name: KUBERNETES_SERVICE_HOST\n          value: 127.0.0.1\n        - name: KUBERNETES_SERVICE_PORT\n          value: \"6443\"\n        - name: vip_arp\n          value: \"true\"\n        - name: port\n          value: \"6443\"\n        - name: vip_interface\n          value: ${api_vip_iface}\n        - name: vip_cidr\n          value: \"32\"\n        - name: cp_enable\n          value: \"true\"\n        - name: cp_namespace\n          value: kube-system\n        - name: vip_ddns\n          value: \"false\"\n        - name: vip_leaderelection\n          value: \"true\"\n        - name: vip_leaseduration\n          value: \"5\"\n        - name: vip_renewdeadline\n          value: \"3\"\n        - name: vip_retryperiod\n          value: \"1\"\n        - name: address\n          value: ${api_vip}\n        - name: prometheus_server\n          value: :2112\n        image: ghcr.io/kube-vip/kube-vip:v0.5.7\n        imagePullPolicy: Always\n        name: kube-vip\n        resources: {}\n        securityContext:\n          capabilities:\n            add:\n            - NET_ADMIN\n            - NET_RAW\n      hostNetwork: true\n      serviceAccountName: kube-vip\n      tolerations:\n      - effect: NoSchedule\n        operator: Exists\n      - effect: NoExecute\n        operator: Exists\n  updateStrategy: {}\nstatus:\n  currentNumberScheduled: 0\n  desiredNumberScheduled: 0\n  numberMisscheduled: 0\n  numberReady: 0\n",
            "vars": {
              "api_vip": "172.18.2.252",
              "api_vip_iface": "eno1"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_group",
      "name": "flatcar-install",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "flatcar-install-node01",
            "metadata": {},
            "name": "flatcar-install-node01",
            "profile": "flatcar-install-node01",
            "selector": {
              "mac": "44:a8:42:3e:b9:27"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install",
            "module.chongus.matchbox_profile.flatcar-install"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "flatcar-install-node02",
            "metadata": {},
            "name": "flatcar-install-node02",
            "profile": "flatcar-install-node02",
            "selector": {
              "mac": "b0:83:fe:cf:91:f7"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install",
            "module.chongus.matchbox_profile.flatcar-install"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "flatcar-install-node03",
            "metadata": {},
            "name": "flatcar-install-node03",
            "profile": "flatcar-install-node03",
            "selector": {
              "mac": "b0:83:fe:cf:d7:ee"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install",
            "module.chongus.matchbox_profile.flatcar-install"
          ]
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_group",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "worker-node01",
            "metadata": {},
            "name": "worker-node01",
            "profile": "worker-node01",
            "selector": {
              "node": "node01",
              "os": "installed"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker",
            "module.chongus.data.template_file.cilium-install",
            "module.chongus.data.template_file.k3s-config",
            "module.chongus.data.template_file.kube-vip",
            "module.chongus.matchbox_profile.worker"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "id": "worker-node02",
            "metadata": {},
            "name": "worker-node02",
            "profile": "worker-node02",
            "selector": {
              "node": "node02",
              "os": "installed"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker",
            "module.chongus.data.template_file.cilium-install",
            "module.chongus.data.template_file.k3s-config",
            "module.chongus.data.template_file.kube-vip",
            "module.chongus.matchbox_profile.worker"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "id": "worker-node03",
            "metadata": {},
            "name": "worker-node03",
            "profile": "worker-node03",
            "selector": {
              "node": "node03",
              "os": "installed"
            }
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker",
            "module.chongus.data.template_file.cilium-install",
            "module.chongus.data.template_file.k3s-config",
            "module.chongus.data.template_file.kube-vip",
            "module.chongus.matchbox_profile.worker"
          ]
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_profile",
      "name": "flatcar-install",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=flatcar_production_pxe_image.cpio.gz",
              "flatcar.config.url=http://matchbox.sid.rtrox.com/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
              "flatcar.first_boot=yes"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "flatcar-install-node01",
            "initrd": [
              "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.0/flatcar_production_pxe_image.cpio.gz"
            ],
            "kernel": "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.0/flatcar_production_pxe.vmlinuz",
            "name": "flatcar-install-node01",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhCl1VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYe5RRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9iEzffQgRESOJygLGO2ZD/dSdorNXtOQJ2fzyJGG3FAn3S5cjR4p1S4kVt6j/RvIYn05RTkCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+Wmma9nRdFU/4rnp2a9XjSr5aaqpndVVcyqsijL/9Nqsc0AhPu10Vs8KttBQmaPWTolxs6wh4iaiLPvAAAA//8WZdHhZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node01-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=flatcar_production_pxe_image.cpio.gz",
              "flatcar.config.url=http://matchbox.sid.rtrox.com/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
              "flatcar.first_boot=yes"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "flatcar-install-node02",
            "initrd": [
              "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.0/flatcar_production_pxe_image.cpio.gz"
            ],
            "kernel": "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.0/flatcar_production_pxe.vmlinuz",
            "name": "flatcar-install-node02",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIvKeLaFQC11VBFdSS5g/NzrtZK7M3Ei09LsXxW66uXA5P875jf9I7YLUKu1B4JCNYeFRRVDew0FFduwoACvtMWWptwStCxakxaMEEXGHA0yuX7KvSpzfJpcaNGAtuLa+JmeMBNTWn1+gU12+gKE+cF3C9j4zffQgRESOJygLGO2ZD3dSdorNXtOQJ2fzyJGG3FAn3S5cjR4o1S4kVt6j/RvIYn05RTUCQfBD5e+JQtZ6xUZFceNB3PStSx9Sn4SzUrESq+WmWaznRdFUs+L5sVmvn5rVclNV0/9VVcyrsijLf9PpbJsBCPdro7d4VLaDhMwes3RKjJ1hDxE1EWffAQAA//8Cx+juZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node02-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "args": [
              "initrd=flatcar_production_pxe_image.cpio.gz",
              "flatcar.config.url=http://matchbox.sid.rtrox.com/ignition?uuid=${uuid}\u0026mac=${mac:hexhyp}",
              "flatcar.first_boot=yes"
            ],
            "container_linux_config": null,
            "generic_config": null,
            "id": "flatcar-install-node03",
            "initrd": [
              "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.0/flatcar_production_pxe_image.cpio.gz"
            ],
            "kernel": "http://stable.release.flatcar-linux.net/amd64-usr/3374.2.0/flatcar_production_pxe.vmlinuz",
            "name": "flatcar-install-node03",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"path\":\"/opt/installer\",\"user\":{},\"contents\":{\"compression\":\"gzip\",\"source\":\"data:;base64,H4sIAAAAAAAC/1yOT2vqQBTF9/kU9yk8V5NJIo9XW0KhtnRVEVxJLWH+3Oi0k7kycyPR0u9eFLvp5sLl/DjnN/4jtQtSq7QDgUM2hrlHFUF5D3sV2bGjAKy0x5Sl3hK0LliQFg8SRMQtDjC5fMm+KnF6m5xr0IC14Nr6kpwwElBbf36BTnX5Aob6wHUJm7vM9NGDEBE5HqEsYLRj3t9K2Sk2O01DnpzNI0cackOddNtwMbqnVLuQWHmP9m8gi/X5FNMRCIIfKn9PFLLWKzYqiisP4qpvXfqQ+iiclYqVWC7WzXw1K4qm+lc8PzSr1WOzXKyranpTVcWsKouy/D+tnjYZgHC/NnqLB2U7SMjsMUvHxNgZ9hBRE3H2HQAA//+DYUgbZwEAAA==\",\"verification\":{}},\"mode\":320},{\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"compression\":\"\",\"source\":\"data:,node03-installer\",\"verification\":{}}}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nRequires=network-online.target\\nAfter=network-online.target\\n[Service]\\nType=simple\\nExecStart=/opt/installer\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"installer.service\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.install"
          ]
        }
      ]
    },
    {
      "module": "module.chongus",
      "mode": "managed",
      "type": "matchbox_profile",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/poseidon/matchbox\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "args": null,
            "container_linux_config": null,
            "generic_config": null,
            "id": "worker-node01",
            "initrd": null,
            "kernel": null,
            "name": "worker-node01",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node01.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/k3s-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.k3s.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/k3s/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Install k3s\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/k3s-install.sh\\nConditionPathExists=!/opt/bin/k3s\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nEnvironment=\\\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\\\"\\nEnvironment=\\\"INSTALL_K3S_EXEC=--cluster-init\\\"\\nExecStart=/usr/bin/sh -c \\\"/opt/k3s-install.sh\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"k3s-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=10min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "args": null,
            "container_linux_config": null,
            "generic_config": null,
            "id": "worker-node02",
            "initrd": null,
            "kernel": null,
            "name": "worker-node02",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node02.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/k3s-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.k3s.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/k3s/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Install k3s\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/k3s-install.sh\\nConditionPathExists=!/opt/bin/k3s\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nEnvironment=\\\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\\\"\\nEnvironment=\\\"INSTALL_K3S_EXEC='--server' 'https://172.18.2.252:6443'\\\"\\nExecStart=/usr/bin/sh -c \\\"/opt/k3s-install.sh\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"k3s-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=10min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 0,
          "attributes": {
            "args": null,
            "container_linux_config": null,
            "generic_config": null,
            "id": "worker-node03",
            "initrd": null,
            "kernel": null,
            "name": "worker-node03",
            "raw_ignition": "{\"ignition\":{\"config\":{\"replace\":{\"verification\":{}}},\"proxy\":{},\"security\":{\"tls\":{}},\"timeouts\":{},\"version\":\"3.3.0\"},\"kernelArguments\":{},\"passwd\":{\"users\":[{\"name\":\"core\",\"sshAuthorizedKeys\":[\"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC/PGRFPtotZqTnOcErult8kOch36EHPD/I5pPztI5g5KXgHz7DQ8aM3y/zWA1mckaFTH5YzlVieDV+c13UpPioCZN2uSDdXhN4L/CAv+Ox/n3z9PGTVATMecWpuPCwfrpHI3edBAPBt2+BLDDPQvSlXfhnL7VQbAj64txYklkUsRaOphz4qC21GpiDzmSjnCrdJsVd7lXrH53l97xT56FKq/bXV54HHK3yEwTIm+ZpzGJ8UMms7U0G6ErugX81TKAtO+qKbwRsatLGxFrWvuE5pPFgOlVBbhTaDalxW609jssBVxge2MbwGK27B0CYauUw7e9PCmxYgWbNKSnKsjoFGZQlUvrysR52x3QV1JH3qMQkJwKE9thFG8/b+vgraQyG+XT4lSg3RVhjOPiozYhUl37BTUn7uLSa8faEbBSzstAZsrc/8J8n/oBWVPmt+4uMMDMCx8pfexCDMrLz+0CsFSpsYwlvEpWkINky+i0jOivor1ZtwdNQBK4+t/oiXpzgmX18ucKaTfNtXOi8sdFQve72SwCsBgyZf+58jH1w043T0NhsjlhIl2frOF2Y3/86cBu0uoR7jrxbRNEA3sBn5pRC+VYu5gCTCHL2OHSmKxkiGbXQtyKR3eDJ+wqzWwMMolKOtWZWrhyy7DlIVaKZwV1GqYybmDizDJM0aJuatw==\"]}]},\"storage\":{\"files\":[{\"group\":{},\"overwrite\":true,\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:,node03.cho.rtrox.com\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/opt/k3s-install.sh\",\"user\":{},\"contents\":{\"source\":\"https://get.k3s.io\",\"verification\":{}},\"mode\":511},{\"group\":{},\"path\":\"/etc/rancher/k3s/config.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,LS0tCnRscy1zYW46CiAgLSBhcGkuY2hvLnJ0cm94LmNvbQogIC0gMTcyLjE4LjIuMjUyCiMgRGlzYWJsZSBLdWJlUHJveHkgaW4gZmF2b3Igb2YgQ2lsaXVtCmRpc2FibGUta3ViZS1wcm94eTogdHJ1ZQojIERpc2FibGUgRGVmYXVsdCBDTkkgJiBOZXR3b3JrIFBvbGljeSBFbmZvcmNlcgpmbGFubmVsLWJhY2tlbmQ6IG5vbmUKZGlzYWJsZS1uZXR3b3JrLXBvbGljeTogdHJ1ZQpkaXNhYmxlOgogIC0gc2VydmljZWxiCiAgLSB0cmFlZmlrCiAgLSBsb2NhbC1zdG9yYWdlCiMgUHJlcGFyZSBrM3MgZm9yIHByb21ldGhldXMgbWV0cmljcwprdWJlLWNvbnRyb2xsZXItbWFuYWdlci1hcmc6CiAgLSAiYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtcHJveHktYXJnOgogIC0gIm1ldHJpY3MtYmluZC1hZGRyZXNzPTAuMC4wLjAiCmt1YmUtc2NoZWR1bGVyLWFyZzoKICAtICJiaW5kLWFkZHJlc3M9MC4wLjAuMCIKIyBDb250cm9sbGVyIE1hbmFnZXIgZXhwb3NlcyBldGNkIHNxbGxpdGUgbWV0cmljcwpldGNkLWV4cG9zZS1tZXRyaWNzOiB0cnVlCg==\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/cilium-install.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}},\"mode\":420},{\"group\":{},\"path\":\"/var/lib/rancher/k3s/server/manifests/runonce/kube-vip.yaml\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZUFjY291bnQKbWV0YWRhdGE6CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCmtpbmQ6IENsdXN0ZXJSb2xlCm1ldGFkYXRhOgogIGFubm90YXRpb25zOgogICAgcmJhYy5hdXRob3JpemF0aW9uLmt1YmVybmV0ZXMuaW8vYXV0b3VwZGF0ZTogInRydWUiCiAgbmFtZTogc3lzdGVtOmt1YmUtdmlwLXJvbGUKcnVsZXM6CiAgLSBhcGlHcm91cHM6IFsiIl0KICAgIHJlc291cmNlczogWyJzZXJ2aWNlcyIsICJzZXJ2aWNlcy9zdGF0dXMiLCAibm9kZXMiLCAiZW5kcG9pbnRzIl0KICAgIHZlcmJzOiBbImxpc3QiLCJnZXQiLCJ3YXRjaCIsICJ1cGRhdGUiXQogIC0gYXBpR3JvdXBzOiBbImNvb3JkaW5hdGlvbi5rOHMuaW8iXQogICAgcmVzb3VyY2VzOiBbImxlYXNlcyJdCiAgICB2ZXJiczogWyJsaXN0IiwgImdldCIsICJ3YXRjaCIsICJ1cGRhdGUiLCAiY3JlYXRlIl0KLS0tCmtpbmQ6IENsdXN0ZXJSb2xlQmluZGluZwphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxCm1ldGFkYXRhOgogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1iaW5kaW5nCnJvbGVSZWY6CiAgYXBpR3JvdXA6IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8KICBraW5kOiBDbHVzdGVyUm9sZQogIG5hbWU6IHN5c3RlbTprdWJlLXZpcC1yb2xlCnN1YmplY3RzOgotIGtpbmQ6IFNlcnZpY2VBY2NvdW50CiAgbmFtZToga3ViZS12aXAKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCi0tLQphcGlWZXJzaW9uOiBhcHBzL3YxCmtpbmQ6IERhZW1vblNldAptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIGxhYmVsczoKICAgIGFwcC5rdWJlcm5ldGVzLmlvL25hbWU6IGt1YmUtdmlwLWRzCiAgICBhcHAua3ViZXJuZXRlcy5pby92ZXJzaW9uOiB2MC41LjcKICBuYW1lOiBrdWJlLXZpcC1kcwogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Kc3BlYzoKICBzZWxlY3RvcjoKICAgIG1hdGNoTGFiZWxzOgogICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogIHRlbXBsYXRlOgogICAgbWV0YWRhdGE6CiAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIGxhYmVsczoKICAgICAgICBhcHAua3ViZXJuZXRlcy5pby9uYW1lOiBrdWJlLXZpcC1kcwogICAgICAgIGFwcC5rdWJlcm5ldGVzLmlvL3ZlcnNpb246IHYwLjUuNwogICAgc3BlYzoKICAgICAgYWZmaW5pdHk6CiAgICAgICAgbm9kZUFmZmluaXR5OgogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjoKICAgICAgICAgICAgbm9kZVNlbGVjdG9yVGVybXM6CiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vbWFzdGVyCiAgICAgICAgICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgICAgICAgIC0gbWF0Y2hFeHByZXNzaW9uczoKICAgICAgICAgICAgICAtIGtleTogbm9kZS1yb2xlLmt1YmVybmV0ZXMuaW8vY29udHJvbC1wbGFuZQogICAgICAgICAgICAgICAgb3BlcmF0b3I6IEV4aXN0cwogICAgICBjb250YWluZXJzOgogICAgICAtIGFyZ3M6CiAgICAgICAgLSBtYW5hZ2VyCiAgICAgICAgZW52OgogICAgICAgIC0gbmFtZTogS1VCRVJORVRFU19TRVJWSUNFX0hPU1QKICAgICAgICAgIHZhbHVlOiAxMjcuMC4wLjEKICAgICAgICAtIG5hbWU6IEtVQkVSTkVURVNfU0VSVklDRV9QT1JUCiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfYXJwCiAgICAgICAgICB2YWx1ZTogInRydWUiCiAgICAgICAgLSBuYW1lOiBwb3J0CiAgICAgICAgICB2YWx1ZTogIjY0NDMiCiAgICAgICAgLSBuYW1lOiB2aXBfaW50ZXJmYWNlCiAgICAgICAgICB2YWx1ZTogZW5vMQogICAgICAgIC0gbmFtZTogdmlwX2NpZHIKICAgICAgICAgIHZhbHVlOiAiMzIiCiAgICAgICAgLSBuYW1lOiBjcF9lbmFibGUKICAgICAgICAgIHZhbHVlOiAidHJ1ZSIKICAgICAgICAtIG5hbWU6IGNwX25hbWVzcGFjZQogICAgICAgICAgdmFsdWU6IGt1YmUtc3lzdGVtCiAgICAgICAgLSBuYW1lOiB2aXBfZGRucwogICAgICAgICAgdmFsdWU6ICJmYWxzZSIKICAgICAgICAtIG5hbWU6IHZpcF9sZWFkZXJlbGVjdGlvbgogICAgICAgICAgdmFsdWU6ICJ0cnVlIgogICAgICAgIC0gbmFtZTogdmlwX2xlYXNlZHVyYXRpb24KICAgICAgICAgIHZhbHVlOiAiNSIKICAgICAgICAtIG5hbWU6IHZpcF9yZW5ld2RlYWRsaW5lCiAgICAgICAgICB2YWx1ZTogIjMiCiAgICAgICAgLSBuYW1lOiB2aXBfcmV0cnlwZXJpb2QKICAgICAgICAgIHZhbHVlOiAiMSIKICAgICAgICAtIG5hbWU6IGFkZHJlc3MKICAgICAgICAgIHZhbHVlOiAxNzIuMTguMi4yNTIKICAgICAgICAtIG5hbWU6IHByb21ldGhldXNfc2VydmVyCiAgICAgICAgICB2YWx1ZTogOjIxMTIKICAgICAgICBpbWFnZTogZ2hjci5pby9rdWJlLXZpcC9rdWJlLXZpcDp2MC41LjcKICAgICAgICBpbWFnZVB1bGxQb2xpY3k6IEFsd2F5cwogICAgICAgIG5hbWU6IGt1YmUtdmlwCiAgICAgICAgcmVzb3VyY2VzOiB7fQogICAgICAgIHNlY3VyaXR5Q29udGV4dDoKICAgICAgICAgIGNhcGFiaWxpdGllczoKICAgICAgICAgICAgYWRkOgogICAgICAgICAgICAtIE5FVF9BRE1JTgogICAgICAgICAgICAtIE5FVF9SQVcKICAgICAgaG9zdE5ldHdvcms6IHRydWUKICAgICAgc2VydmljZUFjY291bnROYW1lOiBrdWJlLXZpcAogICAgICB0b2xlcmF0aW9uczoKICAgICAgLSBlZmZlY3Q6IE5vU2NoZWR1bGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgICAgIC0gZWZmZWN0OiBOb0V4ZWN1dGUKICAgICAgICBvcGVyYXRvcjogRXhpc3RzCiAgdXBkYXRlU3RyYXRlZ3k6IHt9CnN0YXR1czoKICBjdXJyZW50TnVtYmVyU2NoZWR1bGVkOiAwCiAgZGVzaXJlZE51bWJlclNjaGVkdWxlZDogMAogIG51bWJlck1pc3NjaGVkdWxlZDogMAogIG51bWJlclJlYWR5OiAwCg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{\"units\":[{\"contents\":\"[Unit]\\nDescription=Install k3s\\nWants = network-online.target\\nAfter = network.target network-online.target\\nConditionPathExists=/opt/k3s-install.sh\\nConditionPathExists=!/opt/bin/k3s\\n[Service]\\nType=forking\\nTimeoutStartSec=180\\nRemainAfterExit=yes\\nKillMode=process\\nEnvironment=\\\"K3S_TOKEN=SUgK6pki1yzcdO40JmSGnzacN3KUrrmOm80Np2rgLyPXgVyG9ho8UtnhXNVKHKJl\\\"\\nEnvironment=\\\"INSTALL_K3S_EXEC='--server' 'https://172.18.2.252:6443'\\\"\\nExecStart=/usr/bin/sh -c \\\"/opt/k3s-install.sh\\\"\\n[Install]\\nWantedBy=multi-user.target\\n\",\"enabled\":true,\"name\":\"k3s-install.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\nConditionPathExists=/var/lib/rancher/k3s/server/manifests/runonce\\n[Service]\\nType=oneshot\\nRemainAfterExit=yes\\nKillMode=process\\nExecStart=/usr/bin/rm -rf /var/lib/rancher/k3s/server/manifests/runonce\\n\",\"name\":\"remove-runonce-manifests.service\"},{\"contents\":\"[Unit]\\nDescription=Remove runonce manifests\\n[Timer]\\nOnBootSec=10min\\n[Install]\\nWantedBy=timers.target\\n\",\"enabled\":true,\"name\":\"remove-runonce-manifests.timer\"}]}}"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.chongus.data.ct_config.worker"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
