{
  enabled: true,
  timezone: 'America/New_York',
  semanticCommits: 'enabled',
  dependencyDashboard: true,
  dependencyDashboardTitle: 'Renovate Dashboard ðŸ¤–',
  commitBody: 'Signed-off-by: Russell Troxel <rtrox@users.noreply.github.com>',
  suppressNotifications: ['prIgnoreNotification'],
  rebaseWhen: 'conflicted',
  commitMessageTopic: '{{depName}}',
  commitMessageExtra: 'to {{newVersion}}',
  commitMessageSuffix: '',
  // set up Renovate Managers
  'helm-values': {
    fileMatch: ['cluster-cd/.+/helm-release\\.yaml$']
  },
  flux: {
    fileMatch: ['cluster-cd/.+\\.yaml$']
  },
  kustomize: {
    fileMatch: ['(^|/)kustomization\\.ya?ml$']
  },
  // "kubernetes": {
  //   "fileMatch": [
  //     "cluster-cd/.+\\.yaml$",
  //   ]
  // },
  regexManagers: [
    {
      fileMatch: [
        'cluster-cd/crds/external-snapshotter/.+\\.yaml$',
        'cluster-cd/crds/external-dns/.+\\.yaml$'
      ],
      matchStrings: [
        'datasource=(?<datasource>.*?)\n *url: https://github\\.com/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n'
      ],
      datasourceTemplate: 'github-releases'
    },
    {
      fileMatch: ['cluster-cd/sources/git/.+\\.ya?ml$'],
      matchStrings: [
        'url:\\s+(?<depName>.*)\\s+ref:\\s+tag:\\s+(?<currentValue>.*)\\n'
      ],
      datasourceTemplate: 'git-tags',
      versioningTemplate: 'semver'
    }
  ],
  packageRules: [
    // setup datasources
    {
      matchDatasources: ['helm'],
      semanticCommitScope: 'charts',
      separateMinorPatch: true,
      ignoreDeprecated: true
    },
    {
      matchDatasources: ['docker'],
      enabled: true,
      matchUpdateTypes: ['major', 'minor', 'patch']
    },
    {
      matchDatasources: ['docker'],
      semanticCommitScope: 'images',
      separateMinorPatch: true
    },
    // add labels according to package and update types
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(images)!: ',
      labels: ['renovate/image', 'dep/major']
    },
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      labels: ['renovate/image', 'dep/minor']
    },
    {
      matchDatasources: ['docker'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      labels: ['renovate/image', 'dep/patch']
    },
    {
      matchDatasources: ['helm'],
      matchUpdateTypes: ['major'],
      commitMessagePrefix: 'feat(charts)!: ',
      labels: ['renovate/helm', 'dep/major']
    },
    {
      matchDatasources: ['helm'],
      matchUpdateTypes: ['minor'],
      semanticCommitType: 'feat',
      labels: ['renovate/helm', 'dep/minor']
    },
    {
      matchDatasources: ['helm'],
      matchUpdateTypes: ['patch'],
      semanticCommitType: 'fix',
      labels: ['renovate/helm', 'dep/patch']
    },
    // custom version schemes
    {
      matchDatasources: ['docker'],
      versioning: 'regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$',
      matchPackageNames: ['blakeblackshear/frigate']
    },
    {
      matchDatasources: ['docker'],
      versioning: 'regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$',
      matchPackageNames: ['quay.io/minio/minio']
    },
    // pin package versions
    {
      matchDatasources: ['docker'],
      allowedVersions: '<13',
      matchPackageNames: ['docker.io/library/postgres']
    },
    // version strategies
    {
      matchDatasources: ['docker'],
      versioning: 'loose',
      matchPackageNames: [
        'ghcr.io/k8s-at-home/plex',
        'ghcr.io/k8s-at-home/qbittorrent'
      ]
    },
    // enable auto-merge
    {
      matchDatasources: ['docker'],
      automerge: true,
      automergeType: 'branch',
      requiredStatusChecks: null,
      matchUpdateTypes: ['minor', 'patch'],
      matchPackageNames: [
        'ghcr.io/k8s-at-home/jackett',
        'ghcr.io/k8s-at-home/prowlarr-nightly'
      ]
    },
    // group packages
    {
      matchDatasources: ['helm', 'docker'],
      matchPackagePatterns: ['^rook.ceph'],
      groupName: 'rook-ceph-suite',
      additionalBranchPrefix: '',
      separateMinorPatch: true
    },
    {
      matchDatasources: ['github-releases', 'docker'],
      matchPackagePatterns: ['external-snapshotter', 'snapshot-controller'],
      groupName: 'external-snapshotter-suite',
      additionalBranchPrefix: '',
      separateMinorPatch: true
    },
    {
      matchDatasources: ['github-tags', 'docker'],
      matchPackagePatterns: ['rancher/system-upgrade-controller'],
      groupName: 'system-upgrade-controller-suite',
      additionalBranchPrefix: '',
      separateMinorPatch: true
    },
    {
      updateTypes: ['minor', 'patch', 'pin', 'digest'],
      automerge: true
    }
  ]
}
