---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: &name home-assistant
    app.kubernetes.io/instance: *name
    app.kubernetes.io/component: *name
    app.kubernetes.io/part-of: *name
    k8s-app: *name
  name: *name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *name
      app.kubernentes.io/component: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *name
        app.kubernentes.io/component: *name
      annotations:
        backup.velero.io/backup-volumes: config
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
      initContainers:
        - name: hacs-install
          image: alpine:3.16.2
          command: ["sh", "-c", "if [ ! -f /config/.hacs-installed ]; then apk add bash wget && wget -O - https://get.hacs.xyz | bash - && touch /config/.hacs-installed; fi"]
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /config
              name: config
      containers:
        - name: home-assistant
          image: ghcr.io/onedr0p/home-assistant:2023.9.3@sha256:d6e4c153f71b544e0e216706beda9511e106d535f96a0fce75500efa7cbee01d
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 4Gi
            requests:
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          ports:
            - name: api
              containerPort: 8123
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: api
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: api
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /
              port: api
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          volumeMounts:
            - mountPath: /config
              name: config
        - name: vscode
          image: codercom/code-server:3.4.1
          imagePullPolicy: IfNotPresent
          workingDir: /config
          args:
            - --port=8080
            - --auth=none
          ports:
            - name: vscode
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: home-assistant-config
