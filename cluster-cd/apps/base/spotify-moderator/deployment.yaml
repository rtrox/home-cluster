---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: &name spotify-moderator
    app.kubernetes.io/instance: &instance spotify-moderator
    app.kubernetes.io/part-of: *instance
    k8s-app: *name
  name: *name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *instance
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *instance
    spec:
      imagePullSecrets:
        - name: ghcr-login-secret
      securityContext:
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      containers:
        - name: spotify-moderator
          image: 'ghcr.io/rtrox/spotify-moderator:sha-846a02a'
          args:
            - -image-folder=/data/images/
            - -db-location=/data/spotify.db
            - -reconcile-interval=30s
          envFrom:
            - secretRef:
                name: spotify-moderator-env
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 256Mi
            requests:
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: data
        - image: nicolaka/netshoot
          name: debug-net
          command:
            - sleep
            - '3600'
          volumeMounts:
            - mountPath: /data
              name: data
        - name: debug-sqlite3
          image: 'nouchka/sqlite3'
          command:
            - sleep
            - '3600'
          volumeMounts:
            - mountPath: /data
              name: data
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: spotify-moderator-data
