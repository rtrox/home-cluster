---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: &name radarr-form-auth-test
    app.kubernetes.io/instance: *name
    app.kubernetes.io/component: *name
    app.kubernetes.io/part-of: *name
    k8s-app: *name
  name: *name
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
      app.kubernetes.io/instance: *name
      app.kubernentes.io/component: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
        app.kubernetes.io/instance: *name
        app.kubernentes.io/component: *name
    spec:
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups:
          - 100
      containers:
        - name: radarr
          image: ghcr.io/onedr0p/radarr-develop:4.3.1.6822@sha256:2d61733e8b7054dd723eb158eb8f44d63cad1c3261058a759884b50838a6964d
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 250Mi
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 568
            runAsGroup: 568
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          ports:
            - name: http
              containerPort: 8080
          env:
            - name: TZ
              value: ${LOCAL_TZ}
            - name: RADARR__PORT
              value: "8080"
            - name: RADARR_INSTANCE_NAME
              value: Radarr
            - name: RADARR__LOG_LEVEL
              value: info
            - name: RADARR__APPLICATION_URL
              value: "https://radarr-form-test.${SECRET_DOMAIN}"
              # TEST ONLY, DON'T USE FOR ANYTHING REAL
            - name: RADARR__API_KEY
              value: abcdef0123456789abcdef0123456789
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            failureThreshold: 5
            timeoutSeconds: 2
        # - name: exportarr
        #   image: ghcr.io/onedr0p/exportarr:v1.0.0
        #   securityContext:
        #     allowPrivilegeEscalation: false
        #     runAsUser: 568
        #     runAsGroup: 568
        #     seccompProfile:
        #       type: RuntimeDefault
        #     capabilities:
        #       drop:
        #         - ALL
        #   resources:
        #     limits:
        #       memory: 256Mi
        #     requests:
        #       memory: 64Mi
        #   args:
        #     - radarr
        #   env:
        #     - name: PORT
        #       value: "8081"
        #     - name: URL
        #       value: http://localhost:8080
        #     - name: APIKEY
        #       value: abcdef0123456789abcdef0123456789
        #   ports:
        #     - name: metrics
        #       containerPort: 8081
        #   livenessProbe:
        #     httpGet:
        #       path: /healthz
        #       port: metrics
        #     failureThreshold: 5
        #     periodSeconds: 10
        #   readinessProbe:
        #     httpGet:
        #       path: /healthz
        #       port: metrics
        #     failureThreshold: 5
        #     periodSeconds: 10
